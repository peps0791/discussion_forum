<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Motion primtive: machine learning vs. handcrafted
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-10621" class = "post">
			<h2>Question</h2>
			<div id="vote-10621" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 83</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Motion primtive: machine learning vs. handcrafted</h2>
<p>On Google Scholar there are a lot of papers which explain the advantages of motion primitive: instead of searching inside the state-space (configuration space of a robot) the solver has to search inside the plan space of motion primitives. Sometimes this concept is called lattice graph.</p>

<p>Even if all papers are convinced about motion primitive in general, there is room for speculation about how exactly this idea should be implemented. Two different school of thought are out there:</p>

<ol>
<li>Machine Learning for generate motion primitive. This is based on q-learning, neural networks and motion capture. The projekt "poeticon" (Yiannis Aloimonos) is a good example.</li>
<li>Handcoded motion primtive. This concept is based an manual coded Finite States-Machines (FSM) which can only solve a concrete example like "pushing the box". Additional functionality has to be implemented by hand.</li>
</ol>

<p>The question is, which concept is better on real life examples? </p>

			</div>
			<div class = "userinfosection"  id = "userinfo-10621" data-toggle = "popover">
				<p>user name : Manuel Rodriguez</p>
				<p> user reputation : 463</p>
				<p class = "tagcontent" id = "usertaginfo-10621">{'None': 18, 'motion-planning': 0, 'machine-learning': 1, 'algorithm': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10621">Load Comments</button></br>
			<div id = "commentsection-10621" class = 'collapse'>
			<div id = "comment-19072" class = "comment">
				<p>Asking for the *better* solution usually doesn't pan out. There's no such thing because every method has unique properties which make it more applicable to some situations and less so to others. I suggest you change your question to asking for the differences and when to apply which method.</p>
			</div>
			<div id = "comment-19107" class = "comment">
				<p>You could also include links to a few of the papers that you are referencing.</p>
			</div>
			</div>
				<textarea id = "speech-10621" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10621">
					<img id="start_img-10621" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10621">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-10630"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10630" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">-1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There is probably no fixed answer to which apporach works best, it all depends on the application, not to mention who you ask.</p>

<p>Sometimes you have a pretty good idea of what some of the motion primitives should be. Perhaps you have some experience from remote control of the robot, or there are some constraints that limit the available motion primitives such that the solution is pretty obvious. In such cases, handcrafted motion primitives will probably work quite well. Furthermore, handcrafted motion primitives better enable theoretical analysis than ones found using machine learning. You can perhaps find some general properties of the primitives, saying that under certain assumptions you can make guarantees.</p>

<p>In other cases, you don't really have that amount of domain knowledge or constraints, or perhaps you want to explore different options not previously thought of. In such cases, machine learning techniques are great, and they offer a low cost of implementation as long as you have good simulation and experimentation possibilities available.</p>

<p>Personally, I think the best thing is to combine the two. Some motion primitives can be handcrafted, some can be machine learned, and some a little bit of both: perhaps create a draft primitive by hand, and use machine learning to refine and make it more robust.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10630" data-toggle = "popover">
				<p>user name : Martin Syre Wiig</p>
				<p> user reputation : 1</p>
				<p class = "tagcontent" id = "usertaginfo-10630">{'None': -1}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10630">Load Comments</button></br>
			<div id = "commentsection-10630" class = 'collapse'>
			<div id = "comment-19108" class = "comment">
				<p>Your answer would benefit from more detail and evidence to support your claims. In particular, your suggestion to combine handcrafted and learned primitives may have been explored, a brief literature review might yield a good example of this approach being employed.</p>
			</div>
			</div>
				<textarea id = "speech-10630" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10630">
					<img id="start_img-10630" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10630">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>