<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Does C have advantages over C++ in robotics?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8618" class = "post">
			<h2>Question</h2>
			<div id="vote-8618" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">-1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 282</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Does C have advantages over C++ in robotics?</h2>
<p>I want to build robots, and right now I aim to work with Arduino boards
I know that they are compatible with c and c++, so was wondering which language is better for robotics in general?</p>

<p>I know how to write in java, and the fact that c++ is object oriented makes it look like a better choice for me</p>

<p>does c have any advantages over c++?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8618" data-toggle = "popover">
				<p>user name : Ahmad Hamdy</p>
				<p> user reputation : 1</p>
				<p class = "tagcontent" id = "usertaginfo-8618">{'None': 0, 'c': -1, 'c++': -1, 'arduino': -1}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8618">Load Comments</button></br>
			<div id = "commentsection-8618" class = 'collapse'>
			<div id = "comment-14062" class = "comment">
				<p>stick with C for embedded systems and C++ for robotics in general.</p>
			</div>
			<div id = "comment-14064" class = "comment">
				<p>any answer would be opinion based.  Here is mine.  The C language has very little overhead except library calls and is very fast.   The C++ language has lots of 'hidden' overhead, is slow to perform context switches ( in comparison to C ) and is not nearly as fast as C.  Also C++ uses a lot more memory.   C++ can be much quicker to code.   So which to use depends on things like memory available. time frame to write/debug the code, available execution time</p>
			</div>
			</div>
				<textarea id = "speech-8618" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8618">
					<img id="start_img-8618" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8618">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8623"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8623" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>As the comments indicate, the answer is really based on what you want to do with the programs you write.  There are a lot of benefits to the object oriented capabilities of C++.  But the inheritance, overloading, <em>etc.,</em> does come with a performance penalty.  C++ compilers optimize quite well, and for most tasks you will be fine with that - especially since you already know java.  But if you need to do fast, low-level tasks, you will never beat the efficiency of pure C unless you write assembly code directly.</p>

<p>Do you want to write low-level communication, data acquisition, or control code?  Then choose C.  Do you want to write user applications that run on top of the low-level driver stuff?  Then C++ would be easier for a java programmer.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8623" data-toggle = "popover">
				<p>user name : SteveO</p>
				<p> user reputation : 2960</p>
				<p class = "tagcontent" id = "usertaginfo-8623">{'None': 222}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8623" class = 'collapse'>
			</div>
				<textarea id = "speech-8623" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8623">
					<img id="start_img-8623" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8623">Comment</button>
			<br><div id = "ans-8625"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8625" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Most microcontrollers have good C++ compilers now. </p>

<p>Most C idioms can be written in C++.</p>

<p>Templates, function overloading, and structure member functions allow one to write modular, readable code without classes.</p>

<p>Interfacing to other libraries can be done with extern "C".</p>

<p>Much high-level software (image processing, ROS, etc) is written in C++.</p>

<p>If you pick one systems language for robotics work, pick C++.</p>

<p>If you are working close to the metal, you must learn and understand what C++ is doing behind the scenes.</p>

<p>The only advantage C has is that there's lots of legacy code using C, especially OS code, and occasionally there is obscure or old hardware without a C++ compiler.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8625" data-toggle = "popover">
				<p>user name : hauptmech</p>
				<p> user reputation : 2621</p>
				<p class = "tagcontent" id = "usertaginfo-8625">{'battery': 2, 'None': 220, 'lithium-polymer': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8625">Load Comments</button></br>
			<div id = "commentsection-8625" class = 'collapse'>
			<div id = "comment-21455" class = "comment">
				<p>One important difference between the two languages (in the context of low-level programming) is that C++ executes "hidden code". Constructors and destructors are an example, as well as overloaded operators. Of course, there is nothing you can't know about, but it makes it quite easy to accidentally call functions you don't need, or shouldn't call in a particular context.</p>
			</div>
			</div>
				<textarea id = "speech-8625" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8625">
					<img id="start_img-8625" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8625">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>