<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>kalman filter with redundant sensors
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-9953" class = "post">
			<h2>Question</h2>
			<div id="vote-9953" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">6</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 244</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>kalman filter with redundant sensors</h2>
<p>Suppose I have one robot with two 3D position sensors based on different physical principles and I want to run them through a Kalman filter. I construct an observation matrix two represent my two sensors by vertically concatenating two identity matrices.</p>

<p>$H = \begin{bmatrix} 1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1\\1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1 \end{bmatrix}$ $\hspace{20pt}$
 $\overrightarrow x = \begin{bmatrix} x\\y\\z \end{bmatrix}$</p>

<p>so that </p>

<p>$H \overrightarrow x = \begin{bmatrix} x\\y\\z\\x\\y\\z \end{bmatrix}$</p>

<p>which represents both sensors reading the exact position of the robot. Makes sense so far. The problem comes when I compute the innovation covariance</p>

<p>$S_k = R + HP_{k|k-1}H^T$</p>

<p>Since </p>

<p>$H H^T = \begin{bmatrix}
 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\
 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
 0 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 \\
 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
 0 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 \\
 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\
 \end{bmatrix}$ </p>

<p>then, no matter what $P$ is, I'm going to wind up with $x$ innovations from the first sensor being correlated to $z$ innovations from the second, which seems intuitively wrong, if I'm interpreting this right. </p>

<p>Proceeding from here, my gain matrix ($K = P_{k|k-1} H^T S_k^{-1}$) winds up doing some pretty odd stuff (swapping rows and the like) so that, when updating a static system ($A = I_3, B = [0]$) with a constant measurement $\overrightarrow z = [1,0,0]$ I wind up with a predicted state $\hat x = [0,0,1]$.</p>

<p>If I separate the sensors and update the filter with each measurement separately, then $H H^T = I_3$, and I get sensible results.</p>

<p>I think I am confused about some technical points in one or more of these steps. Where am I going wrong? Does it not make sense to vertically concatenate the observation matrices?</p>

<p>I suppose that I could just set the off-diagonal 3x3 blocks of $S_k$ to 0, since I know that the sensors are independent, but is there anything in the theory that suggests or incorporates this step?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-9953" data-toggle = "popover">
				<p>user name : evenex_code</p>
				<p> user reputation : 133</p>
				<p class = "tagcontent" id = "usertaginfo-9953">{'None': 0, 'kalman-filter': 6}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-9953">Load Comments</button></br>
			<div id = "commentsection-9953" class = 'collapse'>
			<div id = "comment-17744" class = "comment">
				<p>Good question.  I have never seen an implementation where the state variables are repeated as you do.   Rather, much of the literature segments the sensor fusion logic as a process before inputting that data to the EKF.   In 1982 NASA used this approach for sensor fault-tolerance decisions:  http://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19820017360.pdf</p>
			</div>
			</div>
				<textarea id = "speech-9953" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-9953">
					<img id="start_img-9953" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-9953">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-9973"  class = "post">
				<h2>Answer</h2>
			<div id="vote-9973" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Are you sure about your expression for $HH^T$?</p>

<p>I get</p>

<p>$$
HH^T = \begin{bmatrix}
1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 \\
1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 
\end{bmatrix}
$$
which agrees with your intuition.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-9973" data-toggle = "popover">
				<p>user name : DXM</p>
				<p> user reputation : 66</p>
				<p class = "tagcontent" id = "usertaginfo-9973">{'None': 5}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-9973">Load Comments</button></br>
			<div id = "commentsection-9973" class = 'collapse'>
			<div id = "comment-17781" class = "comment">
				<p>Huh... yeah, you're right. Must have typed the expression in wrong. Multiple times, evidently. Next time I see something this weird I'll work it out by hand.</p>
			</div>
			</div>
				<textarea id = "speech-9973" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-9973">
					<img id="start_img-9973" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-9973">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>