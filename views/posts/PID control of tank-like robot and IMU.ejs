<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>PID control of tank-like robot and IMU
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-6649" class = "post">
			<h2>Question</h2>
			<div id="vote-6649" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 839</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>PID control of tank-like robot and IMU</h2>
<p>Consider a tank like robot with a motor driver channel for each side of the robot (two motors on the left and two motors on the right) and an IMU.
I'm interested in driving the robot in a straight line using the yaw data from the gyro and magnetometer of the IMU, removing the noise caused by slightly different behaving motors, and the possibility to change the desired direction angle. For example some event comes and I want the car to switch the desired direction to +120 degrees and turn while driving.</p>

<p>I'm using Arduino Uno, MinIMU-9 v3 and two DRV8838 Single Brushed DC Motor Driver from Pololu.</p>

<p>Can you please give me some hints and a short pseudo-code example?
Thanks!</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-6649" data-toggle = "popover">
				<p>user name : user3070256</p>
				<p> user reputation : 26</p>
				<p class = "tagcontent" id = "usertaginfo-6649">{'imu': 5, 'None': 0, 'pid': 5, 'arduino': 5}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-6649" class = 'collapse'>
			</div>
				<textarea id = "speech-6649" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6649">
					<img id="start_img-6649" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6649">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-6655"  class = "post">
				<h2>Answer</h2>
			<div id="vote-6655" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You define the powers for motors as: p_left  = p_average + p_differential
and p_right = p_average - p_differential</p>

<p>Your PID regulator should take the filtered angle as input and provide you with p_differential. As such, it will control the "turning" of the robot.
When the mentioned event occurs, just change the referential angle.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-6655" data-toggle = "popover">
				<p>user name : Damjan Dakic</p>
				<p> user reputation : 650</p>
				<p class = "tagcontent" id = "usertaginfo-6655">{'control': 6, 'None': 32, 'sensor-fusion': 5, 'localization': 5, 'rcservo': 3, 'pid': 6, 'automation': 0, 'servomotor': 3, 'differential-drive': 6, 'design': 3, 'kalman-filter': 5, 'sensors': 5, 'pwm': 3, 'navigation': 6}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-6655" class = 'collapse'>
			</div>
				<textarea id = "speech-6655" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6655">
					<img id="start_img-6655" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6655">Comment</button>
			<br><div id = "ans-7102"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7102" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Assume that your motors can drive both forward and back. (which is not a must, but if the vehicle moves only forward, maneuvering will require a lot of space compared to a two-directional drive)</p>

<p>Assume that you want to manually control speed, by commanding to all motors.</p>

<p>variables:
r  = gyro yaw rate (can be positive or negative, assume (+) for yaw to left; assume we are interested in +/-10deg per second magnitude)
H  = heading from magnetometer (0 to 360)
H_com = commanded (desired) heading
M_com = speed term (motor power, controlled by the user)</p>

<p>M_l = left motor power (can be positive or negative)
M_r = right motor power (can be positive or negative)</p>

<p>M_l = M_com + Kr * r + Kh * (H_com - H)
M_r = M_com - Kr * r - Kh * (H_com - H)</p>

<p>Kp and Kh are to be found by analysis or trial and error. 
(H_com-H) is the error term that the controller tries to zeroize, by moving the vehicle(H) to H_com.</p>

<p>Notes: </p>

<ol>
<li>you should add some modulus logic, as you wouldn't want to go 300 degrees when you could only go 60 degrees to the desired heading.</li>
<li>at max speeds (max forward, or max rearward), the yaw authority is limited (as motor speeds hit their max), so Kr and Kh may need to be altered to be functions of speed.</li>
<li>for controller tuning strategies, <a href="https://robotics.stackexchange.com/questions/167/what-are-good-strategies-for-tuning-pid-loops">refer to this question</a>.</li>
</ol>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7102" data-toggle = "popover">
				<p>user name : G rkan  etin</p>
				<p> user reputation : 284</p>
				<p class = "tagcontent" id = "usertaginfo-7102">{'None': 13}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7102" class = 'collapse'>
			</div>
				<textarea id = "speech-7102" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7102">
					<img id="start_img-7102" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7102">Comment</button>
			<br><div id = "ans-7346"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7346" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Do you have, or can you add encoders to the motors? If you do, I would advise to try to use them as a first step. Encoders allow you to control speed of the motors in terms of their actual rotation speed not PWM. If robot still doesn't drive straight, you can try to apply <a href="http://www-personal.umich.edu/~johannb/Papers/paper60.pdf" rel="nofollow noreferrer">UMBmark</a> method to correct it. For me it yields very satisfying results, although I have not tried it with tank-link platforms.</p>

<p>If encoders are not the option, you can try IMU. Remember, that it is also subject to errors, so filtering its readings will be crucial here. You can get heading either reading magnetometer directly, or by integrating gyro readings. To use both, you should use Kalman Filter - some reading <a href="https://robotics.stackexchange.com/questions/277/why-do-i-need-a-kalman-filter">here</a>, or <a href="http://www.joansola.eu/JoanSola/eng/course.html" rel="nofollow noreferrer">here</a>.</p>

<p>Then, just insert heading calculated by KF to regular PID controller, so that the bigger is the error between desired and actual heading, the bigger is speed difference between left and right wheels. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7346" data-toggle = "popover">
				<p>user name : mactro</p>
				<p> user reputation : 925</p>
				<p class = "tagcontent" id = "usertaginfo-7346">{'control': 1, 'None': 59, 'radio-control': 1, 'pid': 1, 'wifi': 1, 'wheeled-robot': 1, 'mechanism': 1, 'automation': 1, 'wireless': 1, 'industrial-robot': 2, 'design': 1, 'cnc': 2, 'actuator': 2, 'mobile-robot': 2}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7346" class = 'collapse'>
			</div>
				<textarea id = "speech-7346" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7346">
					<img id="start_img-7346" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7346">Comment</button>
			<br><div id = "ans-14058"  class = "post">
				<h2>Answer</h2>
			<div id="vote-14058" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>As you are using the Arduino, you should leverage the most from the community libraries. My advice would be to use the <a href="https://playground.arduino.cc/Code/PIDLibrary" rel="nofollow noreferrer">PID library</a>. </p>

<p>There is a detailed explanation about how the library works in that page. It is a link to the creators's blog. Also with explanations about how to tune up the Kp, Ki and Kd.</p>

<p>I have a similar project and it turned out to be too imprecise for us to use only a magnetometer. The worst scenario for a robot is to be next to a source of interference ( like a TV or a big metallic structure ) and then move several meters based on the decision taken when turning. </p>

<p>To solve these issues, we used a gyroscope ( L3G4200D in our case ). This is the code that we ended up using:</p>

<pre><code>  unsigned long amount_off_target ;
  L3G4200D gyroscope;
  while (!gyroscope.begin(L3G4200D_SCALE_250DPS, L3G4200D_DATARATE_400HZ_50))  // Set scale 250 dps and 400HZ Output data rate (cut-off 50)
  {
    Serial.println("Could not find a valid L3G4200D sensor, check wiring!");
    return;
  }
  gyroscope.calibrate(100);

  // here it goes some code referred to our encoders

  double Setpoint = 0, Input = 0, Output = 0;
  const double scale_factor = 7000000.0f;
  PID myPID(&amp;Input, &amp;Output, &amp;Setpoint, 9.5 / scale_factor, 4 / scale_factor, 3.5 / scale_factor, DIRECT);

  myPID.SetMode(AUTOMATIC);


  myPID.SetOutputLimits(-50, 50);   // these parameters are related to your particular motor PWM values
  int min_power = MN_POWER+35;

  long z_total = 0;
  Input = 0;
  const long target_z = long(float(degs) * (90000000.0f / 90.0f));
  unsigned long last_off_target = millis();
  unsigned long last_read_sensor = micros();
  const unsigned long started_turn = millis();

  Setpoint = target_z;
  // Grace period to start moving
  long last_not_moving = millis() + 50;


  int direction;

  while ((millis() - last_off_target) &lt; 100L &amp;&amp; (millis() - started_turn) &lt; 2000L)
  {
   // more code about our encoders goes here
    const long now_millis = millis();
    const long bump_min_speed_frequency = 10;


    amount_off_target = abs(z_total - target_z);
    if (amount_off_target &gt; 2506516L) {   // here you decide that you are on target
      last_off_target = millis();
    }

    const unsigned long read_sensor_time = micros();
    Vector norm = gyroscope.readNormalize();
    const long time_since_read = (read_sensor_time - last_read_sensor);
    last_read_sensor = read_sensor_time;

    long yaw = (long)norm.ZAxis;
    z_total += yaw * time_since_read;

    Input = double(z_total);
    myPID.Compute();

    if (Output &gt; 0) {
      direction = 1;
    }
    else {
      direction = -1;
    }

    int mtr_pwr = min_power + abs(Output);


      motorRight( mtr_pwr, -direction);
      motorLeft( mtr_pwr, direction);

  }
</code></pre>

<p>I hope that this works as a general principle of implementation. The main code structure can be easily understood if you look at this <a href="http://www.modernroboticsinc.com/Content/Images/uploaded/Sensors/Modern_Robotics_Gryo_Sensor-Steering_Tutorial.pdf" rel="nofollow noreferrer">PDF explaining it</a>.</p>

<p>The code was tuned up by a real rockstar coder that worked with our team and it works surprisingly well in many diverse surfaces. You might notice that it overshoots a bit when it's on glass and undershoots when it's on a thick rug.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-14058" data-toggle = "popover">
				<p>user name : Rodolfo Cossovich</p>
				<p> user reputation : 11</p>
				<p class = "tagcontent" id = "usertaginfo-14058">{'None': 1}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-14058" class = 'collapse'>
			</div>
				<textarea id = "speech-14058" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-14058">
					<img id="start_img-14058" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-14058">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>