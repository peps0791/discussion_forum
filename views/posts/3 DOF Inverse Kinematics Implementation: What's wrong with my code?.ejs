<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>3 DOF Inverse Kinematics Implementation: What's wrong with my code?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8389" class = "post">
			<h2>Question</h2>
			<div id="vote-8389" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 483</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>3 DOF Inverse Kinematics Implementation: What's wrong with my code?</h2>
<p>I am currently trying to implement an Inverse Kinematics solver for Baxter's arm using only 3 pitch DOF (that is why the yGoal value is redundant, that is the axis of revolution). I for the most part copied the slide pseudocode at page 26 of <a href="http://graphics.cs.cmu.edu/nsp/course/15-464/Fall09/handouts/IK.pdf" rel="nofollow">http://graphics.cs.cmu.edu/nsp/course/15-464/Fall09/handouts/IK.pdf</a> .</p>

<pre><code>def sendArm(xGoal, yGoal, zGoal):
    invJacob = np.matrix([[3.615, 0, 14.0029], [-2.9082, 0, -16.32], [-3.4001, 0, -17.34]])
    ycurrent = 0
    while xcurrent != xGoal:
        theta1 = left.joint_angle(lj[1])
        theta2 = left.joint_angle(lj[3])
        theta3 = left.joint_angle(lj[5])
        xcurrent, zcurrent = forwardKinematics(theta1, theta2, theta3)
        xIncrement = xGoal - xcurrent
        zIncrement = zGoal - zCurrent
        increMatrix = np.matrix([[xIncrement], [0], [zIncrement]])
        change = np.dot(invJacob, increMatrix)
        left.set_joint_positions({lj[1]: currentPosition + change.index(0)/10}) #First pitch joint
        left.set_joint_positions({lj[3]: currentPosition + change.index(1)/10}) #Second pitch
        left.set_joint_positions({lj[5]: currentPosition + change.index(2)/10}) #Third Pitch joint


def forwardKinematics(theta1, theta2, theta3):
    xcurrent = 370.8 * sine(theta1) + 374 * sine(theta1+theta2) + 229 * sine(theta1+theta2+theta3)
    zcurrent = 370.8 * cos(theta1) + 374 * cos(theta1+theta2) + 229 * cos(theta1+theta2+theta3)         
    return xcurrent, zcurrent
</code></pre>

<p>Here is my logic in writing this:
I first calculated the Jacobian 3x3 matrix by taking the derivative of each equation seen in the forwardKinematics method, arriving at:</p>

<p>[370cos(theta1) + 374cos(theta1+theta2) .....   </p>

<p>0                                               0                      0</p>

<p>-370sin(theta1)-374sin(theta1+theta2)-......                            ]</p>

<p>In order to arrive at numerical values, I inputted a delta theta change for theta1,2 and 3 of 0.1 radians. I arrived at a Jacobian of numbers:</p>

<p>[0.954  0.586   .219</p>

<p>0.0000          0.000         0.0000</p>

<p>-.178   -.142   -0.0678]</p>

<p>I then input this matrix into a pseudoinverse solver, and came up with the values you see in the invJacob matrix in the code I posted. I then multiplied this by the difference between the goal and where the end effector is currently at. I then applied a tenth of this value into each of the joints, to make small steps toward the goal. However, this just goes into an infinite loop and my numbers are way off what they should be. Where did I go wrong? Is a complete rewrite of this implementation necessary? Thank you for all your help.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8389" data-toggle = "popover">
				<p>user name : Iche</p>
				<p> user reputation : 114</p>
				<p class = "tagcontent" id = "usertaginfo-8389">{'planning': 1, 'None': 6, 'computer-vision': 1, 'mobile-robot': 1, 'inverse-kinematics': 4, 'localization': 2, 'python': 0, 'forward-kinematics': 0, 'cameras': 1, 'kinect': 2, 'joint': 0, 'slam': 1, 'kinematics': 0, 'matlab': 0, 'robotic-arm': 3, 'jacobian': 0, 'dh-parameters': 0, 'motion-planning': 1, 'gazebo': 2, 'rrt': 1}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8389" class = 'collapse'>
			</div>
				<textarea id = "speech-8389" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8389">
					<img id="start_img-8389" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8389">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8390"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8390" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The (inverse) Jacobi Matrix is pose dependent. It is not constant, it is dependent on pose (joint angles or TCP coords, based on formulation) and so it characterizes a pose not a robot. By implementing it as a constant you basicly assume that the same joint velocity will always cause the same TCP velocity. In reality it is clear that joint positions play an important role in how joint velocities are transformed to the TCP. </p>

<p>I recommend you generate the (inverse) Jacobi matrix in a symbolic form, similarly as your forward kinematics, dependend on variables (joint angles of TCP cooridnates) and write a function that calculates the value of the matrix for each current pose. 
Then recalculate the matrix in every iteration and it should be fine.</p>

<p>Furthermore, in this form, if you have a 3x3 matrix, you can easily calculate its inverse, you do not need a pseudoinverse. Later, if you have 7 DOFs you might...</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8390" data-toggle = "popover">
				<p>user name : 50k4</p>
				<p> user reputation : 2800</p>
				<p class = "tagcontent" id = "usertaginfo-8390">{'geometry': 0, 'None': 193, 'kinematics': 0, 'robotic-arm': 0}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8390">Load Comments</button></br>
			<div id = "commentsection-8390" class = 'collapse'>
			<div id = "comment-13496" class = "comment">
				<p>Thank you for your help! I'll do what you suggested and update my findings in a couple hours.</p>
			</div>
			<div id = "comment-13499" class = "comment">
				<p>I'm having a problem. I am trying to generate the inverse of the Jacobian matrix I listed earlier in symbolic form using MATLAB, but the inverse gives me a FAIL! result, and the pseudoinverse gives me garbage. Would it be fine to turn the Jacobian matrix into numbers, and then find the inverse of that Jacobian?</p>
			</div>
			<div id = "comment-13500" class = "comment">
				<p>Yes, if you comoute the jacobi for the current pose and invert it as values it is OK. If you use symbolcs toolbox in matlab make sure to add the assimptions that your symbols (variables) are real, you should be able to invert it.</p>
			</div>
			<div id = "comment-13501" class = "comment">
				<p>Oh, you have a line of zeros in the marrix? That might be the problem....</p>
			</div>
			</div>
				<textarea id = "speech-8390" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8390">
					<img id="start_img-8390" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8390">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>