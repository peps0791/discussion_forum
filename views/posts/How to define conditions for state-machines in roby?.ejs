<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How to define conditions for state-machines in roby?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-3049" class = "post">
			<h2>Question</h2>
			<div id="vote-3049" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 60</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How to define conditions for state-machines in roby?</h2>
<p>I am searching for a way that allows me to wait for some conditions on ports before applying a new state.</p>

<p>My concrete Problem:
I want to make sure that my AUV aligns to the right pipeline. Therefore before starting the pipeline-tracking, I want to check for the current system heading.</p>

<p>My current state-machine looks like this:</p>

<blockquote>
  <p>find_pipe_back = state target_move_def(:finish_when_reached => false ,
  :heading => 1 ...)</p>
  
  <p>pipe_detector = state pipeline_detector_def</p>
  
  <p>pipe_detector.depends_on find_pipe_back, :role => "detector"</p>
  
  <p>start(pipe_detector)
  forward pipe_detector.align_auv_event, success_event</p>
</blockquote>

<p>roughly I am looking for a way to condition the last-forward.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-3049" data-toggle = "popover">
				<p>user name : Matthias Goldhoorn</p>
				<p> user reputation : 148</p>
				<p class = "tagcontent" id = "usertaginfo-3049">{'None': 11, 'syskit': 1, 'rock': 1}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-3049" class = 'collapse'>
			</div>
				<textarea id = "speech-3049" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-3049">
					<img id="start_img-3049" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-3049">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-3050"  class = "post">
				<h2>Answer</h2>
			<div id="vote-3050" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I don't know if i understand right, but couldn't you make another condition in your state machine for a transition? So for example if you find a pipe or whatever and afterwards you get the permission from the user to follow this pipe ... these two conditions could form the transition to switch to the next state.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-3050" data-toggle = "popover">
				<p>user name : manf</p>
				<p> user reputation : 43</p>
				<p class = "tagcontent" id = "usertaginfo-3050">{'control': 8, 'None': 0, 'ros': 8}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-3050">Load Comments</button></br>
			<div id = "commentsection-3050" class = 'collapse'>
			<div id = "comment-5549" class = "comment">
				<p>I want to do this on autonomous system by using the system explaned here: http://rock-robotics.org/master/documentation/system/index.html, therefore i don't want user interaction. And i searching for a way HOW i can insert conditions...</p>
			</div>
			</div>
				<textarea id = "speech-3050" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-3050">
					<img id="start_img-3050" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-3050">Comment</button>
			<br><div id = "ans-3054"  class = "post">
				<h2>Answer</h2>
			<div id="vote-3054" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Such "conditioning" was existing in the pre-syskit days, and it got removed as it made the state machines considerably more complex. Usually, what starts as a simple condition becomes quickly something a lot more involved.</p>

<p>The best way is therefore to create a dedicated composition that would do the monitoring:</p>

<pre><code>class PipelineFinder &lt; Syskit::Composition
  argument :expected_heading
  add PipelineDetector::Task, :as =&gt; 'detector'
  def heading_within_tolerance?(current, tolerance)
    # Test for tolerance
  end
  task_script do
    # Don't know the name of the relevant port, so I am making it up
    reader = detector.pipeline_state_port.reader
    wait detector.align_auv_event
    if (data = reader.read_new) &amp;&amp; heading_within_tolerance?(data.yaw, tolerance)
      emit :success
    else
      emit :false_positive
    end
  end
end
</code></pre>

<p>Note that you could also attach the task script on the detector task in a separate action:</p>

<pre><code>describe('runs the pipeline detector but filters against an expected direction').
   required_arg('expected_heading')
def detect_pipeline_with_validation(arguments = Hash.new)
   detector = pipeline_detector_def
   expected_heading = arguments[:expected_heading]
   detector.task_script do
     # same script than up there, except that expected_heading
     # is in this case a local variable
   end
   detector
end
</code></pre>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-3054" data-toggle = "popover">
				<p>user name : sylvain.joyeux</p>
				<p> user reputation : 363</p>
				<p class = "tagcontent" id = "usertaginfo-3054">{'None': 20, 'kalman-filter': 0}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-3054">Load Comments</button></br>
			<div id = "commentsection-3054" class = 'collapse'>
			<div id = "comment-5552" class = "comment">
				<p>Regarding the compositions you mention, i have then to poll inside of the composition and emit a own-defined event for this?.

I would prefer the action_script way you proposed, is there a drawback from design point of view?.

I see the actions scripts more robust because they are checked during modeling only during runtime!??</p>
			</div>
			<div id = "comment-6576" class = "comment">
				<p>I now tried this solution, the problem is that poll is not defined for action_scripts. :-(</p>
			</div>
			<div id = "comment-6577" class = "comment">
				<p>Then you need to use a monitoring composition and integrate it into your state machine. One thing that bothers me: what is the semantic of the test ? Would it not be something that would make sense to put in the detector composition (having an optional expected_direction argument and a found_expected_pipeline event ?)</p>
			</div>
			<div id = "comment-6578" class = "comment">
				<p>Could do something like this (adding to the detector-cmp or create monitor cmp), but i had the impression that my use case is really mission-specific (more a workaround for the current-scenario). There are (again) multiple ways of doing it. Not sure what's in general the best. But i want to keep the compositions as simple as possible. Only a composition, not a "solving"-thing in general</p>
			</div>
			</div>
				<textarea id = "speech-3054" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-3054">
					<img id="start_img-3054" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-3054">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>