<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Using genetic algorithm for tuning controllers
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-9186" class = "post">
			<h2>Question</h2>
			<div id="vote-9186" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">8</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 373</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Using genetic algorithm for tuning controllers</h2>
<p>I've read some <a href="http://link.springer.com/chapter/10.1007%2F978-0-387-73137-7_14" rel="nofollow noreferrer">papers</a> for controlling nonlinear systems (e.g. nonlinear pendulum). There are several approaches for targeting nonlinear systems. The most common ones are <strong><a href="https://en.wikipedia.org/wiki/Feedback_linearization" rel="nofollow noreferrer">feedback linearizaing</a></strong>, <strong><a href="https://en.wikipedia.org/wiki/Backstepping" rel="nofollow noreferrer">backstepping</a></strong>, and <strong><a href="https://en.wikipedia.org/wiki/Sliding_mode_control" rel="nofollow noreferrer">sliding mode</a></strong> controllers. </p>

<p>In my case, I've done the theoretical and practical parts of controlling nonlinear model of a simple pendulum plus other manipulators problems in C++. For the pendulum, I've utilized a backstepping controller for solving the tracking task for the angular displacement and velocity. The results are </p>

<p>$$
\ddot{\theta} + (k/m) \dot{\theta} + (g/L) \sin\theta= u 
$$</p>

<p>where $m=0.5, k=0.0001, L=.2$ and $g=9.81$.</p>

<p><a href="https://i.stack.imgur.com/yo9LV.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/yo9LV.png" alt="Graph 1"></a></p>

<p><a href="https://i.stack.imgur.com/ljCHu.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/ljCHu.png" alt="Graph 2"></a></p>

<p>The results are good. However, tuning the controller is time consuming. The majority of papers use <em>genetic algorithms</em> for tuning their controllers such as PD, PID, and backstepping controllers. <em>I'm clueless in this field and I hope someone sheds some light on this concept, preferable if there is a MATLAB sample for at least controlling a simple pendulum.</em></p>

<p>So far I've designed a simple GUI in C++/Qt in order to tune the controller manually. In the below picture, the response of the controller for step function. </p>

<p><a href="https://i.stack.imgur.com/1MPVB.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/1MPVB.jpg" alt="Screenshot of GUI of the controller tuning application"></a> </p>

			</div>
			<div class = "userinfosection"  id = "userinfo-9186" data-toggle = "popover">
				<p>user name : CroCo</p>
				<p> user reputation : 1040</p>
				<p class = "tagcontent" id = "usertaginfo-9186">{'control': 18, 'pid': 4, 'slam': 16, 'manipulator': 3, 'mobile-robot': 14, 'dynamics': 6, 'errors': 2, 'data-association': 1, 'kinematics': 3, 'matlab': 6, 'kalman-filter': 21, 'motion-planning': 3, 'None': 41, 'noise': 24, 'theory': 1, 'localization': 14, 'microcontroller': 5, 'mapping': 5, 'sensor-error': 1, 'sensors': 7, 'quadcopter': 8, 'ekf': 26, 'simulation': 1, 'motion': 3}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-9186" class = 'collapse'>
			</div>
				<textarea id = "speech-9186" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-9186">
					<img id="start_img-9186" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-9186">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-9189"  class = "post">
				<h2>Answer</h2>
			<div id="vote-9189" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I am confused by what you are calling a genetic algorithm.  The PD, PID, <em>etc.,</em> controllers are not heuristic nor stochastic methods, and they are not based on evolutionary algorithms.  They are, instead, deterministic algorithms intended to allow placement of poles and zeroes of a system response to provide desired performance (error minimization, speed of response, settling time, stability, and disturbance rejection).  A good learning reference, in my opinion, is Kuo's <em>Automatic Control Systems</em> book.  You can find a less rigorous treatment in Raven's <em>Automatic Control Engineering</em> book.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-9189" data-toggle = "popover">
				<p>user name : SteveO</p>
				<p> user reputation : 2960</p>
				<p class = "tagcontent" id = "usertaginfo-9189">{'None': 222}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-9189">Load Comments</button></br>
			<div id = "commentsection-9189" class = 'collapse'>
			<div id = "comment-16254" class = "comment">
				<p>I'm not acquainted with the genetic algorithm (GA). I just saw some papers claim  that the tuning part of their controllers done by using GA. No further details in their papers regarding this matter. I don't know what the hell GA is and how can I utilize it.</p>
			</div>
			<div id = "comment-16285" class = "comment">
				<p>Using evolutionary methods for parameter tuning is a very common technique. I would consider it an alternative method to the analytical approaches you are describing.</p>
			</div>
			</div>
				<textarea id = "speech-9189" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-9189">
					<img id="start_img-9189" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-9189">Comment</button>
			<br><div id = "ans-9190"  class = "post">
				<h2>Answer</h2>
			<div id="vote-9190" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">9</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Genetic algorithms are a machine learning technique to remove the need for a user to 'fine tune' a system, and instead allow a computer to figure out how to tune the system. The benefits of this approach are that it frees up the researchers/users time and often can lead to a system that is tuned better than what the researcher/user would have been able to achieve themselves. </p>

<p>The general idea of using a genetic algorithm would follow some basic control flow as follow: </p>

<pre><code>Create_X_Number_Of_Random_Controllers()
while (Not_Yet_Satisfied_With_tuning)
    Score_Each_Controller_Based_On_Performance()
    Remove_Lowest_Performing_Controllers()
    Create_New_Controllers_By_Mixing_Best_Performers()
    Add_Slight_Randomness_For_Evolution()
Display_Top_Performer()
</code></pre>

<p>The best example I can easily show of this principle in practice is this 'game' that uses genetic evolution to design vehicles that are capable of driving over a course. The same idea applies to any system you want to fine tune without having to actual do any tuning yourself. 
Example: <a href="http://rednuht.org/genetic_cars_2/">http://rednuht.org/genetic_cars_2/</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-9190" data-toggle = "popover">
				<p>user name : beeedy</p>
				<p> user reputation : 91</p>
				<p class = "tagcontent" id = "usertaginfo-9190">{'None': 9}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-9190">Load Comments</button></br>
			<div id = "commentsection-9190" class = 'collapse'>
			<div id = "comment-16236" class = "comment">
				<p>If that is what @CroCo meant by using a genetic algorithm, then the Ziegler Nichols method of tuning would be a great candidate for implementing, because it is nicely procedural.</p>
			</div>
			<div id = "comment-16238" class = "comment">
				<p>I can't see what else @CroCo would have meant, but the problem with Ziegler Nichols is it still requires you to tune one of the components where as with a genetic algo you can change any aspect of the system and it will 'evolve' to match without the developer having to do any brute work</p>
			</div>
			<div id = "comment-16239" class = "comment">
				<p>Oh, I wasn't clear.  I meant letting the genetic algorithm drive changes to the tuning based on heuristics that match the Ziegler-Nichols process.</p>
			</div>
			<div id = "comment-16243" class = "comment">
				<p>This answer still stands as the general process to achieve that. Genetic Algorithms are an entire area of study and far to complex however to really explain in a short response, I recommend reading up on them however if you are interested in using them to tune your models!</p>
			</div>
			<div id = "comment-16247" class = "comment">
				<p>I'm picturing an ill bounded genetic algorithm that quite happily snaps the string when over tuning.</p>
			</div>
			<div id = "comment-16252" class = "comment">
				<p>There are usually two non-trivial parts to this: 1. Since you can't really do this with actual physical equipment, you have to build a highly accurate simulator. As long as its theoretical and purely mathematical then this part might not be so bad. 2. Figuring out how to score each genetically generated controller. Determining what is better tuned may be somewhat subjective as two competing controllers may each have pros and cons.</p>
			</div>
			<div id = "comment-16256" class = "comment">
				<p>@beeedy, yes that what I mean. I need to use genetic algorithms to auto-tune the controller. Do you know how this technique is used in Control systems?</p>
			</div>
			<div id = "comment-16275" class = "comment">
				<p>as @octopus mentioned, this is hard to achieve with actual physics equipment unless you are willing to allow a long period of time to let the computer physically control the device you are trying to tune, even then you need some 'guardian' program that monitors and scores each controller based on performance and verifies that it isn't going to damage the machine. All in all this is relatively complex task that will take a lot of reading on genetic algorithms to implement, this is no small task.</p>
			</div>
			</div>
				<textarea id = "speech-9190" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-9190">
					<img id="start_img-9190" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-9190">Comment</button>
			<br><div id = "ans-9209"  class = "post">
				<h2>Answer</h2>
			<div id="vote-9209" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Using evolutionary methods (GA is one of them) for parameter tuning is indeed a common method [1] in the control domain. Especially for non-linear systems, the analytic solutions for optimal parameters can be difficult to find. Evolutionary methods are one way to efficiently perform a search for near-optimal parameters. </p>

<p>A very successful and universal method that is widely used is <a href="https://en.wikipedia.org/wiki/CMA-ES" rel="nofollow">CMA-ES</a>. There are a large number of <a href="https://www.lri.fr/~hansen/cmaes_inmatlab.html" rel="nofollow">implementations</a> out there, including for MATLAB. I know that pole balancing in its various forms is often used as a benchmark. </p>

<p>Applying the algorithm is usually not that difficult. Rating the performance of your result - this is called the fitness function in EA - is usually the most involved part.</p>

<p>[1] P.J Fleming, R.C Purshouse, Evolutionary algorithms in control systems engineering: a survey, Control Engineering Practice, Volume 10, Issue 11, November 2002, Pages 1223-1241, ISSN 0967-0661, <a href="http://dx.doi.org/10.1016/S0967-0661(02)00081-3" rel="nofollow">http://dx.doi.org/10.1016/S0967-0661(02)00081-3</a>.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-9209" data-toggle = "popover">
				<p>user name : Jakob</p>
				<p> user reputation : 2519</p>
				<p class = "tagcontent" id = "usertaginfo-9209">{'ransac': 3, 'None': 210, 'computer-vision': 1, 'cameras': 1, 'c++': 3, 'slam': 12, 'rock': 1, 'i2c': 3, 'servos': 3, 'software': 1}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-9209" class = 'collapse'>
			</div>
				<textarea id = "speech-9209" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-9209">
					<img id="start_img-9209" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-9209">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>