<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>algorithm Simple Stereo Vision
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-7012" class = "post">
			<h2>Question</h2>
			<div id="vote-7012" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 643</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>algorithm Simple Stereo Vision</h2>
<p>I'm working in a project implementing a vision system. I'm a student and this is the first time I'm doing something like this, it has been a challenge.</p>

<p>I'm using a controller (Netduino+2, .Net MicroFramework) and a camera (CmuCam5 - Pixy) and for now it's working well. I'm communicating with the robot(Fanuc M430iA) using Modbus, and aquiring the data from the camera using I2C. </p>

<p>But, the next challenge is using 2 cameras to implement stereo vision and I'm not shure how to achieve that. I'm reading a lot about that and I understand the process and generally how it works, but I think my case is very specific.</p>

<p>My cameras detect the center of an object and give me the coordinates, so, I have that, and that's good. </p>

<p>What do you think it's the more reasonable approach?</p>

<p>(sorry for my english, let me know if I'm not being explicit, I'll edit the question if I see there's not enough information)</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-7012" data-toggle = "popover">
				<p>user name : J natas Br s</p>
				<p> user reputation : 33</p>
				<p class = "tagcontent" id = "usertaginfo-7012">{'stereo-vision': 2, 'None': 2, 'microcontroller': 2, 'cameras': 2, 'robotic-arm': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7012">Load Comments</button></br>
			<div id = "commentsection-7012" class = 'collapse'>
			<div id = "comment-10008" class = "comment">
				<p>I am not sure you can do stereo vision on a microcontroller like Arduino, it may have too small footprint in terms of both memory and computing power. I guess you need to step up to at least something like Raspberry Pi. Also, I am not sure OpenCV can run on Arduino.</p>
			</div>
			<div id = "comment-10009" class = "comment">
				<p>(it's a Netduino+2) Yes, you are correct. I was studying the OpenCV approach and I don't think I can adapt to .Net Microframework, so I'm thinkin on building myself the algorithm. Something simple.</p>
			</div>
			<div id = "comment-10010" class = "comment">
				<p>another thing. My cameras don's give me entire image frames. they just give me points coordinates</p>
			</div>
			<div id = "comment-10011" class = "comment">
				<p>@J natasBr s what sort of points coordinates, what sort of data are you working with?</p>
			</div>
			<div id = "comment-10012" class = "comment">
				<p>Center of the Blobs. (xx, yy), related to the camera's coordinate system</p>
			</div>
			<div id = "comment-10013" class = "comment">
				<p>If you mount two of the cameras a known distance apart with the cameras facing the same way (both straight forward from where they're mounted - perpendicular to the line between them) you should be able to use the Law Of Sines to get the distance to those blobs - though I think you also need to know the viewing angle of the camera lens.</p>
			</div>
			<div id = "comment-10014" class = "comment">
				<p>yes. that was my first approach, but I don't know the angle.
What I have is, for example: cameras 100mm appart, Cam1 : (50, 50) ; Cam2 : (10, 50). And that's it.</p>
			</div>
			<div id = "comment-10015" class = "comment">
				<p>@J natasBr s according to http://www.cmucam.org/projects/cmucam5/wiki/Can_I_replace_the_lens_on_Pixy it's 75-degrees</p>
			</div>
			<div id = "comment-10016" class = "comment">
				<p>What are the max and min x and y co-ordinates? divide each by the 75*, this gives you degrees per 'pixel'. If needed, transform the co-ordinates it gives you so that the 'origin' is in the center of the plane. This gives you the x-y co-ordinates of the blob from the center. Multiply each by the degrees per pixel which gives you the angle, you now have two angles and a side (the mounting distance) use Law Of Sines - that will give you the distance from each camera to the object, average it to get the distance from the robot (actually the camera mounting mid-point) to the object.</p>
			</div>
			<div id = "comment-10017" class = "comment">
				<p>That's really good information Scott, thank you. 
referencing to the center, I have x: -160 to 160, y: -100 to 100.

I will try do do it and let you know. (I suggest you post as an answer)</p>
			</div>
			</div>
				<textarea id = "speech-7012" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7012">
					<img id="start_img-7012" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7012">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-7013"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7013" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The first thing is to make sure that the cameras will get the coordinates of the object at the same time (I don't know if Pixy has a FREX or STROBE signal for synchronization), or that the object is not moving.</p>

<p>Then, have a look at OpenCV, it has a section on 3D calibration and reconstruction (i.e. find the depth of an object based on the coordinates of two pictures or frames, taken at the same time, from two different (known) angles).</p>

<p>As you start with the 2D coordinates and not the whole image, I guess you will have to dig in and adapt the examples (especially for the calibration part), but it might be a good place to start with</p>

<p>The official doc:
<a href="http://docs.opencv.org/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html" rel="nofollow">http://docs.opencv.org/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html</a></p>

<p>Other links worth checking:</p>

<p><a href="http://wiki.ros.org/camera_calibration/Tutorials/StereoCalibration" rel="nofollow">http://wiki.ros.org/camera_calibration/Tutorials/StereoCalibration</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7013" data-toggle = "popover">
				<p>user name : Kuzi</p>
				<p> user reputation : 41</p>
				<p class = "tagcontent" id = "usertaginfo-7013">{'None': 4}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7013" class = 'collapse'>
			</div>
				<textarea id = "speech-7013" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7013">
					<img id="start_img-7013" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7013">Comment</button>
			<br><div id = "ans-7036"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7036" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>As @Kuzi said, look into OpenCV for the camera calibration and you'll need to either sync your cameras or make sure things aren't moving.  You will probably want to do the camera calibration connecting your sensor to a PC.  Once you get the calibration parameters, then you can use them on your microcontroller.</p>

<p>To actually calculate the 3D position of the object, the following steps need to happen:</p>

<ul>
<li>Get (x,y) position on real image for each camera</li>
<li>Convert (x,y) position on real image to (x,y) position on ideal camera.  This uses the intrinsics camera calibration to compensate for lens distortion.  You will be running the distortion correction in reverse so you will probably need an iterative solution like Gauss-Newton</li>
<li>Calculate ray through (x,y) position in ideal camera to get ray in camera reference frame.  This is just the ray originating at (0,0,0) and going through (x,y,1).</li>
<li>Transform the ray from camera B into the reference frame for camera A using the extrinsics calibration which is just the transform between the cameras</li>
<li>Find the intersection of the 2 rays.  Typically, the rays won't quite intersect because of noise.  That means you will actually be finding the location on each ray where the rays get the closest and then probably averaging them.</li>
</ul>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7036" data-toggle = "popover">
				<p>user name : DrRoboto</p>
				<p> user reputation : 151</p>
				<p class = "tagcontent" id = "usertaginfo-7036">{'None': 12}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7036" class = 'collapse'>
			</div>
				<textarea id = "speech-7036" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7036">
					<img id="start_img-7036" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7036">Comment</button>
			<br><div id = "ans-7037"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7037" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>To further explain my comment, I've decided to turn it into an answer.</p>

<p>Using the law of sines to calculate distance.</p>

<p>First mount the cameras on the robot parallel like this --- ---   --- ---</p>

<p>  is the lens. Mount them 100mm apart - measuring from the lenses.</p>

<p>Second find the viewing angle of your camera, in this case 75*.</p>

<p>Third get data from the camera: Cam1 : (50, 50); Cam2 : (10, 50);</p>

<p>Fourth (optional depending on the co-ordinate system used) Normalize the data (transform the co-ordinate system) to center the origin and re-map your co-ordinates.</p>

<p>Fifth Calculate your degrees per division - take your viewing angle and the range of the supplied co-ordinate system and calculate how many degrees are represented per division.</p>

<p>Sixth multiply this Degrees per division by each of your co-ordinate values. To get the degrees from center line to the object for each camera.</p>

<p>Seventh using the Law of Sines you can calculate the distance from each camera to the object using both of the angles you calculated plus the distance between the camera lenses. Optionally average them to get the distance from the camera mounting mid-point to the object.</p>

<p>There are many optimizations that can be applied to this process, especially calibrating the camera lens but that's another question. I would say that errors do creep in and taking multiple readings and averaging the result can improve reliability.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7037" data-toggle = "popover">
				<p>user name : Scott Downey</p>
				<p> user reputation : 195</p>
				<p class = "tagcontent" id = "usertaginfo-7037">{'battery': 0, 'mobile-robot': 0, 'None': 5, 'power': 0, 'motor': 2}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7037" class = 'collapse'>
			</div>
				<textarea id = "speech-7037" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7037">
					<img id="start_img-7037" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7037">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>