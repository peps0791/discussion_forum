<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Difference between 3D Camera(using IR projection) and Stereo Camera?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-10312" class = "post">
			<h2>Question</h2>
			<div id="vote-10312" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 1251</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Difference between 3D Camera(using IR projection) and Stereo Camera?</h2>
<p>I am currently busy with a final year project which requires me to track people walking through a doorway.
I initially thought this may be possible using a normal camera and using some motion detection functions given in OpenCV, I have however come to the conclusion that the the camera is mounted too low for this to work effectively.(Height shown in the image below)</p>

<p><a href="https://i.stack.imgur.com/CZbkH.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/CZbkH.jpg" alt="enter image description here"></a></p>

<p>I have now been looking into using a 3D camera or a stereo camera to try and get around this problem.</p>

<p>I have seen similar examples where a Kinect(from Xbox 360) has been used to generate a depth map which is then processed and used to do the tracking, this was however done from a higher vantage point, and I found that the minimum operating range of the Kinect is 0.5m.</p>

<p>From what I have found, the Kinect uses an IR projector and receiver to generate its depth map, and have been looking at the Orbbec Astra S which uses a similar system and has a minimum working distance of 0.3m.</p>

<p>My question now:</p>

<p>What exactly would the difference be between the depth maps produced by a 3D camera that uses an IR projector and receiver, and a stereo camera such as the DUO/ZED type options?</p>

<p>I am just looking for some insight from people that may have used these types of cameras before</p>

<p>On a side note, am i going about this the right way? or should i be looking into Time of Flight Cameras instead? </p>

<p>----EDIT----:</p>

<p>My goal is to count the people moving into and out of the train doorway. I began this using OpenCV, initially with a background subtraction and blob detection method. This only worked for one person at a time and with a test video filmed at a higher vantage point as a "blob-merging" problem was encountered as shown in the left image below.</p>

<p>So the next method tested involved an optical flow method using motion vectors obtained from OpenCV's dense optical flow algorithm.
From which i was able to obtain motion vectors from the higher test videos and track them as shown in the middle image below, because of the densely packed and easily detected motion vectors it was simple to cluster them.</p>

<p>But when this same system was attempted with footage taken from inside a train at a lower height, it was unable to give a consistant output. My thoughts of the reasons for this was because of the low height of the camera, single camera tracking is able to function when there is sufficient space between the camera and the top of the person. But as the distance is minimized, the area of the frame that the moving person takes up becomes larger and larger, and the space to which the person can be compared is reduced (or atleast that is how I understand it). Below on the right you can see how in the image the color of the persons clothing is almost uniform, Optical flow is therefore unable to detect it as motion in both cases.</p>

<p><a href="https://i.stack.imgur.com/i8Rvu.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/i8Rvu.jpg" alt="enter image description here"></a></p>

<p>I only started working with computer vision a few months ago so please forgive me if I have missed some crucial aspects.</p>

<p>From what i have seen from research, most commercial systems make used of a 3D cameras, stereo cameras or Time-of-Flight cameras, but I am unsure as to how the specifics of each of these would be best suited for my application.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-10312" data-toggle = "popover">
				<p>user name : James Mallett</p>
				<p> user reputation : 23</p>
				<p class = "tagcontent" id = "usertaginfo-10312">{'stereo-vision': 4, 'None': 0, 'computer-vision': 4, 'cameras': 4, 'c++': 0, 'servomotor': 0, 'opencv': 0, 'motor': 0, 'stepper-motor': 0, 'openni': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10312">Load Comments</button></br>
			<div id = "commentsection-10312" class = 'collapse'>
			<div id = "comment-18458" class = "comment">
				<p>What exactly is your goal? Do you want to identity people? If so, by what property? Or just count them? Given it's the latter, what's the problem with the image that you posted? I see a white blob of pixels and a dark blue one in front of a static scene. What's the problem detecting those? Should be possible with OpenCV, I'd say.</p>
			</div>
			<div id = "comment-18468" class = "comment">
				<p>See above edit. Added history of use with OpenCV using single lens camera without success in desired system location.</p>
			</div>
			<div id = "comment-18471" class = "comment">
				<p>Wow, great edit +1. My experience with computer vision is very limited, so I just leave another comment: my money would still be on the blob detection. I guess that it should be possible to keep the blobs separate by taking the likely different color of clothing  into account. Depending on how many images you have, calculating the middle of the blob and filtering its movement (think kalman filter) could give enough information to separate blobs even if they merge in one image.</p>
			</div>
			</div>
				<textarea id = "speech-10312" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10312">
					<img id="start_img-10312" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10312">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-10315"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10315" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>"3D camera" is a generalisation that covers sensors that can observe a point-cloud or depth map of the scene they are observing. 
Some 3D cameras use a projector (via various ways) to improve the resolution and/or reduce noise of these sensors.</p>

<p>The fact that the projector is IR is not important, it could be a red laser projector instead, but IR is used so that humans don't see the projection. Obviously if you use an IR projector you need an IR camera to observe the projection.</p>

<p>The projector will project a pattern that is either:</p>

<ul>
<li>A texture (not necessarily a pattern) projected to the scene to give better features for stereo-vision by imposing texture on smooth areas (which is problematic for calculating stereo disparity).</li>
<li>A pattern that is coded, which is decoded to produces a depth map.

<ul>
<li>Various pattern types can be used (time-multiplexed, spatially-coded, direct-coded or a mixture)</li>
</ul></li>
</ul>

<p>A good example of both of these is the Intel Realsense F200 (coded-light) and the R200 (stereo vision).</p>

<p>Aside: You should start a separate question for your application, and narrow down the scope of your question.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10315" data-toggle = "popover">
				<p>user name : Gouda</p>
				<p> user reputation : 632</p>
				<p class = "tagcontent" id = "usertaginfo-10315">{'control': 0, 'None': 39, 'computer-vision': 1, 'calibration': 1, 'cameras': 1, 'kalman-filter': 0, 'jacobian': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-10315" class = 'collapse'>
			</div>
				<textarea id = "speech-10315" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10315">
					<img id="start_img-10315" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10315">Comment</button>
			<br><div id = "ans-10317"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10317" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>This isn't an answer so much as a series of questions to get you to consider an appropriate solution. </p>

<p>I will, as usual :-), echo @BendingUnit22 and @Gouda - you appear to be fixated on a particular method of solution. This can be like, "What's a more fuel efficient way to buy groceries, a jet or a helicopter?" Well, can you just walk? If you go for a new sensor you'll need to learn to use it, which can be very time intensive. It's a color camera - can you split the image into R/G/B components and then do blob detection?</p>

<p>More importantly, consider your problem now: Two objects (people) get close together, and your blobs merge, and you can't tell them apart. What are you expecting is going to change when you get a depth component? The people still get close, and if they touch going through the door, then you now have a two-person-wide volume. This is exactly the same as the image blobs merging, except now you have an entire other dimension to work with. </p>

<p>If your primary issue is that you think the camera is mounted too low, why not just mount it higher? It would seem this would be dramatically simpler than purchasing and learning a new depth video system. </p>

<p>To answer your question specifically, any video system that gives depth should give video and depth. There will be differences in cost, resolution, accuracy, etc., but ultimately you should still get RGB+D. The Kinect uses <a href="https://en.wikipedia.org/wiki/Structured_light" rel="nofollow">structured light</a> to get the depth map, stereo cameras use <a href="https://en.wikipedia.org/wiki/Parallax" rel="nofollow">parallax</a>, etc., but whatever the method to get the depth, the output is (generally) the same. </p>

<p>But again, to reiterate - consider what this system is actually going to get you and evaluate your current options again. There's almost certainly an easier way to do this. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10317" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-10317">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10317">Load Comments</button></br>
			<div id = "commentsection-10317" class = 'collapse'>
			<div id = "comment-18483" class = "comment">
				<p>I think the doorway that the camera is mounted to limits the height. Mounting it higher up is possible, but that means mounting it outside the door frame, which might reduce the applicability of the solution: For a building, the camera could be mounted higher up on the wall above the door, but it wouldn't be facing straight down or its view would be occluded partly by the wall. In transportation (like bus or tram), there's often not much above the doors to mount the camera to. A camera in the door frame seems to be a limiting but necessary requirement.</p>
			</div>
			<div id = "comment-18501" class = "comment">
				<p>@BendingUnit22 That is correct, the images of in the train doorway in my original post are with the camera being mounted as high as i could possibly get it. I do see the point that is being made by Chuck though and will definitely spend some time looking into trying to solve the problem with what i currently have.</p>
			</div>
			</div>
				<textarea id = "speech-10317" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10317">
					<img id="start_img-10317" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10317">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>