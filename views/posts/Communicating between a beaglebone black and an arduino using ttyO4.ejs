<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Communicating between a beaglebone black and an arduino using ttyO4
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-6314" class = "post">
			<h2>Question</h2>
			<div id="vote-6314" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 1945</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Communicating between a beaglebone black and an arduino using ttyO4</h2>
<p>I'm trying to get an arduino to talk with a beaglebone black. 
I have followed <a href="http://hipstercircuits.com/enable-serialuarttty-on-beaglebone-black/" rel="nofollow">this</a> tutorial for getting ttyO4 open on the BBB and used the following command on to set the serial line correctly: </p>

<p>wiring is set up according to <a href="http://www.instructables.com/id/How-to-make-a-BeagleBone-and-an-Arduino-communicat/" rel="nofollow">this</a> tutorial. 
    stty -F /dev/ttyO4 cs8 9600 ignbrk -brkint -imaxbel -opost -onlcr -isig -icanon -iexten -echo -echoe -echok -echoctl -echoke noflsh -ixon -crtscts</p>

<p>next data is sent using the following method: </p>

<pre><code>echo s123 &gt; /dev/ttyO4
</code></pre>

<p>the arduino uses the followingvoid loop(){
 code to check for serial communication:</p>

<pre><code>#include &lt;SPI.h&gt;

void setup(){ //////////////SETUP///////////////////////
  Serial.begin(9600);
}
void loop(){
      if(Serial.available()&gt;=4){
         digitalWrite(12, HIGH);
         delay(1000);               // wait for a second
         digitalWrite(12, LOW);   // turn the LED on (HIGH is the voltage level)
         delay(1000);               // wait for a second
         digitalWrite(12, HIGH);
         byte b1,b2,b3,b4; 
         b1=Serial.read();
         }
    }
}
</code></pre>

<p>However it seems no message is received. It does not give any error either. </p>

<p>As an alternative I have also tried a variant of the code suggested in the wiring tutorial resulting in the following code:</p>

<pre><code>import sys
from bbio import *


Serial2.begin(9600)
for arg in sys.argv:
    print arg
    Serial2.write(arg)
    delay(5)
</code></pre>

<p>called with <code>pyton test s123</code> this printed s123 but the arduino remained silent. 
Edit I have now also tried to exactly follow the wiring tutorial so that gave me the following sketch: </p>

<pre><code>char inData[20]; // Allocate some space for the string
char inChar=-1; // Where to store the character read
byte index = 0; // Index into array; where to store the character

void setup() {
  Serial.begin(9600);
  pinMode(13, OUTPUT);   // digital sensor is on digital pin 2
  digitalWrite(13, HIGH);
  delay(2000);
  digitalWrite(13, LOW);
  delay(500);
}


void loop()
{
  Serial.write("A");
  digitalWrite(13, HIGH);
  delay(100);
  digitalWrite(13, LOW);
  delay(100);
  if (Comp("A")==0) {
      digitalWrite(13, HIGH);
      delay(1000);
      digitalWrite(13, LOW);
      delay(500);
  }
}

char Comp(char* This) {
    while (Serial.available() &gt; 0) // Don't read unless
                                   // there you know there is data
    {
        if(index &lt; 19) // One less than the size of the array
        {
            inChar = Serial.read(); // Read a character
            inData[index] = inChar; // Store it
            index++; // Increment where to write next
            inData[index] = '\0'; // Null terminate the string
        }
    }

    if (strcmp(inData,This)  == 0) {
        for (int i=0;i&lt;19;i++) {
            inData[i]=0;
        }
        index=0;
        return(0);
    }
    else {
        return(1);
    }
}
</code></pre>

<p>and on the BBB we turn on the echo script with</p>

<pre><code>/PyBBIO/examples$ sudo python serial_echo.py
</code></pre>

<p>The effect remains that there is no error but also no data delivery. </p>

			</div>
			<div class = "userinfosection"  id = "userinfo-6314" data-toggle = "popover">
				<p>user name : Thijser</p>
				<p> user reputation : 203</p>
				<p class = "tagcontent" id = "usertaginfo-6314">{'control': 1, 'None': 1, 'manipulator': 0, 'usb': 7, 'power': 6, 'simulator': 0, 'communication': 1, 'arduino': 3, 'c++': 4, 'simulation': 0, 'servomotor': 1, 'kinematics': 0, 'servos': 1, 'beagle-bone': 13, 'linux': 4, 'serial': 2, 'ros': 3, 'gazebo': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-6314">Load Comments</button></br>
			<div id = "commentsection-6314" class = 'collapse'>
			<div id = "comment-9100" class = "comment">
				<p>Please edit your question and provide minimal compilable programs that exhibit the problem.  I presume the problem is something in the arduino code but since the arduino code shown in the question is neither complete nor compilable (and is different from the tutorial's code) it's difficult to say what the problem is.</p>
			</div>
			<div id = "comment-9101" class = "comment">
				<p>I use the wiring from one tutorial and tried to turn the gates open using the other tutorial.The arduino code should now compile. and is reasonably minimal.</p>
			</div>
			<div id = "comment-9108" class = "comment">
				<p>Please include `setup ()` and any declarations also -- ie show a whole arduino sketch that you used.  That will allow people to run tests and diagnose problems.  Also the built-in LED is on 13 not 12 so say if you wired an extra LED or something.</p>
			</div>
			<div id = "comment-9109" class = "comment">
				<p>OK I have included setup and declarations.</p>
			</div>
			</div>
				<textarea id = "speech-6314" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6314">
					<img id="start_img-6314" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6314">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-6319"  class = "post">
				<h2>Answer</h2>
			<div id="vote-6319" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The code shown below fixes one problem with the code in the original post: pin 12 was not declared as an output pin.   By default, arduinos start up with all IO pins set as inputs.  Given this, the <code>digitalWrite(12, ...)</code> calls in OP's <code>loop()</code> do nothing more than turn off and on the  input pullup setting on pin 12. </p>

<p>In other words, arduino serial reception may be working ok in your setup, but the indication mechanism   blinking an LED or whatever via pin 12   was not working.</p>

<p>Note, in tests I ran, I wired from digital pin 12 on a Funduino mega (clone of an arduino mega) to the base of a transistor that switches power to an LED.  Sending the board a string of <em>k</em> characters via the arduino-ide serial monitor caused the LED to flash <em>k</em> times (or <em>k-3</em> the first time, due to the <code>Serial.available()&gt;=4</code> test).</p>

<pre><code>#include &lt;SPI.h&gt;

void setup(){   /////////SETUP///////////////
  Serial.begin(9600);
  pinMode(12, OUTPUT);
}
void loop(){
  if(Serial.available()&gt;=4){
    digitalWrite(12, HIGH);
    delay(500);        // wait halfsecond
    digitalWrite(12, LOW); // turn the LED on (HIGH is the voltage level)
    delay(500);        // wait halfsecond
    digitalWrite(12, HIGH);
    byte b1,b2,b3,b4; 
    b1=Serial.read();
  }
}
</code></pre>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-6319" data-toggle = "popover">
				<p>user name : James Waldby - jwpat7</p>
				<p> user reputation : 1856</p>
				<p class = "tagcontent" id = "usertaginfo-6319">{'None': 134}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-6319">Load Comments</button></br>
			<div id = "commentsection-6319" class = 'collapse'>
			<div id = "comment-9110" class = "comment">
				<p>Good point but the problem persists. Do you have any other suggestions?</p>
			</div>
			<div id = "comment-9113" class = "comment">
				<p>Do you have access to an oscilloscope or a logic analyzer?  How many arduino boards do you have and how many beaglebones?  With a scope or analyzer you can test whether serial data is sent, whether level shifter is working, etc.  With multiple identical boards you can run simpler tests (no level shifters needed).  Without test equipment or multiple boards it's more difficult to isolate problems.  Note, to check the serial link in part, consider having the arduino transmit continuously and use serial input shell commands on BBB for testing.</p>
			</div>
			<div id = "comment-9119" class = "comment">
				<p>I have 2 arduino's and can probably obtain an oscilloscope if I need one.</p>
			</div>
			</div>
				<textarea id = "speech-6319" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6319">
					<img id="start_img-6319" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6319">Comment</button>
			<br><div id = "ans-6330"  class = "post">
				<h2>Answer</h2>
			<div id="vote-6330" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>In this answer, I will outline some techniques for diagnosing <a href="http://en.wikipedia.org/wiki/RS-232" rel="nofollow">RS232</a>-style serial communication problems.</p>

<p>For a two-way serial communication link between two devices to work, at the most basic level we need a connection from  TxD on device 1 to RxD on device 2 and a connection from  TxD on device 2 to RxD on device 1.</p>

<p>Voltage or current level conversions may be needed; for example, if device 1 uses -12 V for mark and +12 V for space while device 2 uses +3.3 V for mark and 0 V for space, voltage inversion/scaling/shifting is an obvious requirement.</p>

<p>For the OP's case, 3.3 V at the Beaglebone needs to be translated to or from 5.0 V at the Arduino.  Note that Arduinos with an 8 MHz crystal can operate at 3.3 V and may have a 3.3 V regulator rather than a 5 V regulator.   Use of 3.3 V on the Arduino would allow dropping out the voltage converter board shown in the OP, ie would remove one possible problem source.</p>

<p>If you have a 3.3 V power supply, you can attach that to Arduino Vcc, but don't attach more than one power source at once.  Ie, if you attach 3.3 V to Vcc, don't plug in a USB cord, and don't hook +RAW or the power jack to anything.</p>

<p>The RS232 standard provides several control lines [eg request to send (RTS), clear to send (CTS), data terminal ready (DTR), and data set ready (DSR)] which could be discussed in a comprehensive treatise on diagnosing RS232 problems but won't be discussed at any length here.  A <a href="http://beaglebone.cameon.net/home/serial-ports-uart" rel="nofollow">Beaglebone Serial ports / UART</a> webpage on beaglebone.cameon.net shows pin numbers for control lines, eg:</p>

<pre><code>           RX      TX     CTS     RTS     Device
UART4    P9_11   P9_13   P8_35   P8_33   /dev/ttyO4 
</code></pre>

<p>It may be necessary to jumper CTS high or low.</p>

<p>To recap:  We need to connect TxD, RxD on device 1 to RxD, TxD on device 2.  To make that connection, we need to identify the TxD and RxD pins on each device.  Beaglebone and Arduino devices may have several sets of TxD, RxD pairs.  One of the best, quickest, and most-certain ways to check if you are using the correct pair (eg, TX0,RX0 instead of TX1,RX1 on an Arduino Mega, or UART4 instead of UART3 or UART5 on a Beaglebone) and have properly enabled it is to run a program that continuously sends a pattern of data to TxD, and verify with an oscilloscope, logic analyzer, logic probe, or LED that the expected data pattern appears at the expected pin.</p>

<p>If you are using a scope, the program should send a simple and steady stream of data at a reasonably high datarate, like 9600 bps.  Eg, run a program like <code>while 1: send 'U'</code> and check that your TxD pin is toggling at the right rate and other pins aren't.</p>

<p>If you are using an LED, make it not too bright (eg, 2K -20K  dropping resistor) so you can look closely at the light; make it red or amber so it will light up ok on 3.3 V; use a low datarate (300 bps) so you can see flickering bits; and use a repetition pattern obvious to the eye; eg:</p>

<pre><code>while 1:
   send '@'*60    # Ie, send a string of 60 @ signs
   wait 1 sec
</code></pre>

<p>On the Beaglebone, if you don't find any output on Tx4, revise your test program to output on Tx0 (which I think is automatically enabled and available in userspace) and use that to verify that your test program and probe are working.  If it works ok on Tx0 but not on Tx4, look for additional web information about enabling  Beaglebone serial ports and making them available to the user.</p>

<p>After you have verified that output works on some TxD pins with no voltage shifter attached, attach the shifter and repeat the test.  If successful, also test the outputs of the voltage shifter.  Then attach RxD of the other device to shifter output and verify that the desired data pattern is arriving at that RxD pin.</p>

<p>If you are using a scope, you'll have seen whether voltages are correct (ie 0 and +3.3 or +5.0) at each stage of each connection.  If you are using an LED probe, you may be able to tell if voltage at one point is more than at another; but you might also try running data patterns with more zeroes (eg long strings of <code>\0</code>), or more ones (long strings of <code>0x7F</code> or <code>0xFF</code> characters) and using a voltmeter to estimate voltages.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-6330" data-toggle = "popover">
				<p>user name : James Waldby - jwpat7</p>
				<p> user reputation : 1856</p>
				<p class = "tagcontent" id = "usertaginfo-6330">{'None': 134}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-6330" class = 'collapse'>
			</div>
				<textarea id = "speech-6330" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6330">
					<img id="start_img-6330" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6330">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>