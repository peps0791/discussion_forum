<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>PD controller in C#
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-4271" class = "post">
			<h2>Question</h2>
			<div id="vote-4271" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 387</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>PD controller in C#</h2>
<p>I am currently building a line-following mobile robot. I've done all my image processing work in C#, and now I am in the control phase. I am looking for a PD controller program written in C# to start with. I've searched a lot but without success. My robot is not an Arduino based, it has a motherboard with a Core i3 CPU, and I am using a Camera not an LDR sensor.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-4271" data-toggle = "popover">
				<p>user name : Bouzenzel</p>
				<p> user reputation : 101</p>
				<p class = "tagcontent" id = "usertaginfo-4271">{'control': 0, 'None': 0, 'algorithm': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4271">Load Comments</button></br>
			<div id = "commentsection-4271" class = 'collapse'>
			<div id = "comment-6831" class = "comment">
				<p>At the risk of sounding pedantic, did you try looking for a "PD controller *algorithm*"?</p>
			</div>
			</div>
				<textarea id = "speech-4271" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4271">
					<img id="start_img-4271" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4271">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-4272"  class = "post">
				<h2>Answer</h2>
			<div id="vote-4272" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You may take a look at this library running on Arduino in 'standard' C.  The author has a line by line explanation on his blog. Hence, easy to change to other system as needed.  See the blog for the autotune utility too.</p>

<p>PID
<a href="http://playground.arduino.cc/Code/PIDLibrary" rel="nofollow">http://playground.arduino.cc/Code/PIDLibrary</a></p>

<p>Full description by author
<a href="http://brettbeauregard.com/blog/2011/04/improving-the-beginners-pid-introduction/" rel="nofollow">http://brettbeauregard.com/blog/2011/04/improving-the-beginners-pid-introduction/</a></p>

<p>By the way, you need analogue reading (no just on and off) on the line. That is, analogue of 512 out of 1023 menas the sensor is at 50% edge of the line.</p>

<p>Advanced use can detect the analogue signal from the sensor diode,
giving an continuous reading on the "percentage of hitting the
white/black line".  (says, n% of voltage is, as tested by experiment,
is 60% on line and 40% outside the line).  This analogue input can use
PID control to provide smooth and continuous (no just on and off) and
provide best optimal drive speed as in the enclosed video.</p>

<p>This is 3PI, showing the analogue reading from 5 sensors, note the
initial spinning for the robot to calibrate through n% of crossing the
line and analogue reading from sensors.  If 2 sensors reading 50%, the
line is at the middle between the 2 sensors.
<a href="https://www.youtube.com/watch?v=ylyRi1Qlbl0&amp;feature=player_embedded" rel="nofollow">https://www.youtube.com/watch?v=ylyRi1Qlbl0&amp;feature=player_embedded</a></p>

<p>See page 18 pf 3pi manual  <a href="http://www.pololu.com/docs/pdf/0J21/3pi.pdf" rel="nofollow">http://www.pololu.com/docs/pdf/0J21/3pi.pdf</a>  for a very clever use of IO pins.</p>

<p>The sensor can be read WITHOUT ADC converter.  This method is widely
used in mass produced consumer electronic, as i worked for factory,
where high resolution (16 bits) is needed and the reading speed is ms
range or slower (1 to 10ms or slower). MCU only has 10 to 12 bits high
speed ADC and this circuit give higher resolution.</p>

<p>Fast example</p>

<p>Product
<a href="https://www.youtube.com/watch?v=6ENIiMv7LvM" rel="nofollow">https://www.youtube.com/watch?v=6ENIiMv7LvM</a></p>

<p>Hope this helps</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-4272" data-toggle = "popover">
				<p>user name : EEd</p>
				<p> user reputation : 359</p>
				<p class = "tagcontent" id = "usertaginfo-4272">{'None': 16, 'laser': 3, 'pid': 1, 'motor': 1, 'untagged': 0, 'pwm': 1}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4272">Load Comments</button></br>
			<div id = "commentsection-4272" class = 'collapse'>
			<div id = "comment-6814" class = "comment">
				<p>Thanks for the help i appreciate it, but i missed to clarify that am not working in an Arduino based robot, but am working on a computer motherboard based robot, with Core I3 CPU, plus am not using a LDR sensors but am using a camera ...</p>
			</div>
			<div id = "comment-6816" class = "comment">
				<p>Thanks for clarification. You may consider using webcam, within budget, choose one with highest frame rate at says, 640 X 480 resolution, no need for too high res as slower frame rate. Consider software library like OpenCV. My posting 2 weeks ago on another topic has opencv learning information, etc.  The sensing part is functionally 'same' as above and gives an analogue percentage value relative to line position. The PID part is same for PC or Arduino as in C language.</p>
			</div>
			<div id = "comment-6817" class = "comment">
				<p>By the way, for information, LDR (CdS) is a bit slow (ms to tens of ms). Photo diode is popular choice as fast, wide variety of well controller beam acceptance angle (with/without build-in lens) and widely available due to mass manufactured for appliance remote control, etc.    For information, camera is good as easily start and widely available. For best performance (may be phase 2 after camera), consider TSL1401 which give 10,000 update per second, but, needs IC chip level hardware interfacing. There are many open source web example using Arduino and similar MCU for those need extreme speed</p>
			</div>
			<div id = "comment-6819" class = "comment">
				<p>thanks for the infos, in fact i am using a Full HD Logitech camera with 30 FPS with pan and tilt capabilities, am using EmguCV rather than OpenCV, but they are the same one with C++ the other with C# ...</p>
			</div>
			</div>
				<textarea id = "speech-4272" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4272">
					<img id="start_img-4272" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4272">Comment</button>
			<br><div id = "ans-4274"  class = "post">
				<h2>Answer</h2>
			<div id="vote-4274" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Your problem is not the <a href="https://en.wikipedia.org/wiki/PID_controller" rel="nofollow noreferrer">P[I]D controller</a>, but extracting control parameters from your system. A PID controller by itself is something like this (assuming a periodic control task):</p>

<pre><code>/* 1. get current position */
cur_position = get_current_position();

/* 2. calculate error */
err = goal_position - cur_position;

/* 3. calculate the output */
proportional = Kp * err;
derivative = Kd * (err - last_err);
integral = Ki * (last_sum + err);
output = proportional + derivative + integral;

/* 4. keep history */
last_sum += err;
last_err = err;

/* 5. apply control output */
apply_control_output(output);
</code></pre>

<p>where <code>last_sum</code> and <code>last_err</code> are persistent (they are defined outside the scope of the control loop, e.g. they are global or are a class member or on stack of caller who's calling the control task in a loop). In a PD controller, <code>Ki</code> is zero.</p>

<p>Now steps 2 through 4 are very simple and probably that code runs on any C-derived language without modification. Needless to say, the control parameters <code>Kp</code>, <code>Kd</code> and <code>Ki</code> need to be tuned to your application (which is a problem of its own, but in this case you can just fiddle with it to get a good idea (hint: <code>Ki</code> is really small)). The problem is thus steps 1 and 5. Step 1 depends on your input and step 5 depends on your output.</p>

<p>In step 1, you need to get an image from your camera, process it and understand how far off you are from the line. That would be your position. Note that you may also like to extract the direction of the line, in which case steps 2 through 4 could be done on 2D data! But PID rather sucks anyway and a line-following robot is not a serious application either, so you may not want to bother with that.</p>

<p>Let's take an example.  Imagine you see the following image on your camera:</p>

<p><img src="https://i.stack.imgur.com/qABCO.png" alt="enter image description here"></p>

<p>One simple way to calculate your position with respect to the line would be to take the distance <code>d</code> from the center of the image to the line that needs to be followed (or to its tangent if its curved):</p>

<p><img src="https://i.stack.imgur.com/bJgSU.png" alt="enter image description here"></p>

<p>In this case, your <code>cur_position</code> would be <code>d</code> (which would be negative if it's on the other side of the line) and your <code>goal_position</code> would be 0.</p>

<p>This is a very simplistic solution and likely the robot may move in a weird way, since it doesn't take direction into account. If you think of the robot position as the pair of data containing distance from line and direction of line (its angle with respect to a vertical line), your goal would also be to make that <code>(0, 0)</code>. This still doesn't take non-smooth lines in consideration.</p>

<p>That done, step 5 remains. Step 5 takes the output of the controller and makes the robot follow it. This of course depends on how the robot acts. For example, if your robot has two speed-controllable wheels in the front and a passive omnidirectional one in the back for balance, then you need to tell the motors turning the wheels to maintain what speed.</p>

<p>For example, if the <code>output</code> parameter is positive, it may mean that you are on the right side of the line. What you need would be then to turn left. To do that, you can set a higher speed for the right wheel and a lower speed. The higher the <code>output</code>, the higher the ratio of speed between the two wheels.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-4274" data-toggle = "popover">
				<p>user name : Shahbaz</p>
				<p> user reputation : 2615</p>
				<p class = "tagcontent" id = "usertaginfo-4274">{'None': 193, 'usb': 12, 'distributed-systems': 7, 'microcontroller': 1, 'embedded-systems': 7, 'servomotor': 1, 'platform': 18, 'can': 1, 'machine-learning': 12, 'real-time': 18, 'mobile-robot': 1, 'rs232': 12, 'software': 20}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4274">Load Comments</button></br>
			<div id = "commentsection-4274" class = 'collapse'>
			<div id = "comment-6818" class = "comment">
				<p>thanks for clarifying the approach, but i have a question, what are the techniques to obtain the center of the black line ?</p>
			</div>
			<div id = "comment-6820" class = "comment">
				<p>I thought "you've done your image processing" already? I'm not an expert in image processing. Feel free to ask another question specifically on that!</p>
			</div>
			<div id = "comment-6827" class = "comment">
				<p>Yes i've done the most part but i still sicked with this question, i will post it as a separate one ...</p>
			</div>
			</div>
				<textarea id = "speech-4274" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4274">
					<img id="start_img-4274" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4274">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>