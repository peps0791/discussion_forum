<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Non-markovian problems~approaches in robotics
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-5223" class = "post">
			<h2>Question</h2>
			<div id="vote-5223" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 55</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Non-markovian problems~approaches in robotics</h2>
<p>As far as i can tell, the markov assumption is quite ubiquitous in probabilistic methods for robotics and i can see why.  The notion that you can summarize all of your robot's previous poses with its current pose makes many methods computationally tractable.</p>

<p>I'm just wondering if there are any classic examples of problems in robotics where the markov assumption cannot be used at all.  Under what circumstances is the future state of the robot necessarily dependent on the current and at least some past states?   In such non-markovian cases, what can be done to alleviate the computational expense?  Is there a way to minimize the dependence on previous states to the previous $k$ states, where $k$ can be chosen as small as desired?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-5223" data-toggle = "popover">
				<p>user name : Paul</p>
				<p> user reputation : 704</p>
				<p class = "tagcontent" id = "usertaginfo-5223">{'control': 6, 'occupancygrid': 1, 'pid': 3, 'slam': 14, 'design': 0, 'motor': 5, 'dynamics': 11, 'probability': 1, 'accelerometer': 4, 'mechanism': 3, 'differential-drive': 1, 'kalman-filter': 6, 'actuator': 1, 'reference-request': 8, 'None': 30, 'inverse-kinematics': 3, 'mapping': 1, 'sensors': 10, 'quadcopter': 4, 'motion': 3, 'particle-filter': 4, 'sonar': 4, 'balance': 12, 'automatic': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-5223">Load Comments</button></br>
			<div id = "commentsection-5223" class = 'collapse'>
			<div id = "comment-8016" class = "comment">
				<p>"Under what circumstances is the future state of the robot necessarily dependent on the current and at least some past states?" Such as if the robot were turned off, and moved to a different position before being turned back on?</p>
			</div>
			</div>
				<textarea id = "speech-5223" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5223">
					<img id="start_img-5223" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5223">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-5244"  class = "post">
				<h2>Answer</h2>
			<div id="vote-5244" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Memory of the past is required whenever failures and/or inadequacy arise in the perception layer of the robot thus affecting significantly its current representation of the world, forcing eventually to apply some sort of backtracking strategies.</p>

<p>Quoting <em>S.D Whitehead and Long-Ji Lin</em> in their paper "<a href="http://www.sciencedirect.com/science/article/pii/000437029400012P" rel="nofollow">Reinforcement learning of non-Markov decision processes</a>":</p>

<blockquote>
  <p>These non-Markov tasks are commonly referred to as <em>hidden state tasks</em>, since they occur whenever it is possible for a relevant piece of information to be <em>hidden</em> (or missing) from the agent s representation of the current situation.</p>
  
  <p>Hidden state tasks arise naturally in the context of autonomous learning robots. The
  simplest example of a hidden state task is one which occurs when the agent s sensors
  are inadequate for the task at hand. Suppose a robot is charged with the task of sorting
  blocks into bins according to their color, say Bin-l for red, Bin-2 for blue. If the robot s sensors are unable to distinguish red from blue, then for any given block it can do no better than guess a classification. If there are an equal number of blocks of each
  color, then guessing can do no better than chance. On the other hand, if the robot can detect color, it can easily learn to achieve 100% performance. The former case corresponds to a non-Markov decision problem, since relevant information is missing
  from the agent s representation. The latter case is Markov since once a color sense is
  available the information needed to achieve optimal performance is always available.
  In general, if a robot s internal representation is defined only by its immediate sensor
  readings, and if there are circumstances in which the sensors do not provide all the
  information needed to uniquely identify the state of the environment with respect to the
  task, then the decision problem is non-Markov.</p>
</blockquote>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-5244" data-toggle = "popover">
				<p>user name : Ugo</p>
				<p> user reputation : 1482</p>
				<p class = "tagcontent" id = "usertaginfo-5244">{'None': 99}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-5244">Load Comments</button></br>
			<div id = "commentsection-5244" class = 'collapse'>
			<div id = "comment-8040" class = "comment">
				<p>If the sensors are not "up to the task", how can it even be possible to proceed with the task at all?  It seems impossible.</p>
			</div>
			<div id = "comment-8044" class = "comment">
				<p>Failures can invalidate current measurements making a recovery system that can look at the past mandatory, and, most of all, uncertainties can always take place so that robustness can be increased only by means of some sort of memory. Then, to be honest, the Markov property in control theory is never ensured: just consider the simple case of *filtering* itself.</p>
			</div>
			</div>
				<textarea id = "speech-5244" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5244">
					<img id="start_img-5244" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5244">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>