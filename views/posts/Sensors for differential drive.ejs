<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Sensors for differential drive
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-854" class = "post">
			<h2>Question</h2>
			<div id="vote-854" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">6</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 2061</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Sensors for differential drive</h2>
<p>I have the following chassis along with an Arduino and a motor shield. <img src="https://i.stack.imgur.com/DgPKZ.jpg" alt="Robot Chassis"></p>

<p>I'm in the process of developing a tracking mechanism for use with differential drive.</p>

<p>Normally, a photo reflector can be placed adjacent to the wheel that will reflect when each <em>spoke</em> passes through therefore allowing code to be written that will accurately measure each wheels position.</p>

<p>The problem I have is that you cannot see the wheels from inside the chassis, only small holes for the driveshaft. Placing sensors on the outside would look ridiculous and a wall crash would cause havoc.</p>

<p>Would I be able to use a photo reflector on the gears (as shown) if I accurately placed it to count each spoke on the gear itself? I'm a bit hesitant though because even a small bump could misalign the sensor - again causing havoc.</p>

<p>So does any one have an idea on how to track the wheel movements?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-854" data-toggle = "popover">
				<p>user name : Marko</p>
				<p> user reputation : 184</p>
				<p class = "tagcontent" id = "usertaginfo-854">{'quadcopter': 6, 'None': 0, 'gps': 6, 'two-wheeled': 6, 'arduino': 12}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-854">Load Comments</button></br>
			<div id = "commentsection-854" class = 'collapse'>
			<div id = "comment-2121" class = "comment">
				<p>Is the goal of the tracking to determine how far you've travelled, or something more simple like making sure both motors turn at the same rate?</p>
			</div>
			<div id = "comment-2122" class = "comment">
				<p>Is there anywhere inside, that can measure the rotation of the gear wheels?</p>
			</div>
			<div id = "comment-2126" class = "comment">
				<p>@Ian, it's to measure distance, direction and use it for autonomous driving.</p>
			</div>
			<div id = "comment-2127" class = "comment">
				<p>@Andrew there is room but not a whole lot. I'm now looking at this option as well. Basically I could put a sticker like on this link and measure that? http://letsmakerobots.com/node/24031</p>
			</div>
			<div id = "comment-2128" class = "comment">
				<p>If you want to go the *hack it yourself* route, the [first part of my answer](http://robotics.stackexchange.com/a/779/37) to [Building a controllable  knob ](http://robotics.stackexchange.com/q/777/37) might be of use.</p>
			</div>
			<div id = "comment-2130" class = "comment">
				<p>@MarkBooth that's a nice concept!</p>
			</div>
			</div>
				<textarea id = "speech-854" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-854">
					<img id="start_img-854" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-854">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-855"  class = "post">
				<h2>Answer</h2>
			<div id="vote-855" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Are the wheels essentially hollow except for the spokes? If they were, it would seem to me like adding a small hole a little offset from the front axle (the wheel without gears) would be a good place to put a light detector. Of course that would not work too well in the dark.</p>

<p>Each spoke, or more properly tooth on the gear, while technically would be correct, as you indicated may be hard to accomplish due to size.</p>

<p>Does the non-gear wheels axle come into the chassis? Could you add an optical encoder there? Possibly by making the axle fixed to the wheel but pass through some sort of bearing.</p>

<p>I've never experimented with odometry with tracks, but I assume due to their increased slippage, you will have to deal with greater errors than plain wheels during turns. Have you considered that?</p>

<p>In any case, I think you are going to have to do some 'customization' to get what you want.</p>

<p>I could not find that chassis at Pololu. Is it an older model?</p>

<p>Ah I see now where it has been replaced. The newer chassis has <a href="http://www.pololu.com/catalog/product/1551" rel="nofollow noreferrer">encoders</a> as an option.</p>

<p><img src="https://i.stack.imgur.com/KMh7D.jpg" alt="enter image description here"></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-855" data-toggle = "popover">
				<p>user name : Spiked3</p>
				<p> user reputation : 1881</p>
				<p class = "tagcontent" id = "usertaginfo-855">{'None': 125}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-855">Load Comments</button></br>
			<div id = "commentsection-855" class = 'collapse'>
			<div id = "comment-2119" class = "comment">
				<p>thanks for your elaborate answer. I haven't really given much thought to the slippage issue and am only starting out with robotics/electronics so I picked up this chassy from a local electronics store. The axle from the *back* wheels does come through so I could potentially add a closely spaced propeller? along with an IR photo reflector. Not entirely confident it would work but it may be worth a try. Another alternative I just thought of, can you see the small screw hole on the top RHS *bumper*? Would putting an IR sensor pointed at the tracks be able to pick up the treads?</p>
			</div>
			<div id = "comment-2123" class = "comment">
				<p>You want to add something like [this](http://www.robotshop.com/lynxmotion-qme-01-quadrature-encoder.html?utm_source=google&utm_medium=base&utm_campaign=jos), but there must be a less expensive version some where.</p>
			</div>
			<div id = "comment-2124" class = "comment">
				<p>Pointing an IR sensor might work, but it would take some programming (and processor time) to accomplish. How much of the track motion is vibration versus movement? The programming would be much easier if you placed a hole that the track teeth alternately covered up then exposed, and detected just light through that hole. You still have to program some, but I would think it would be much less complicated. It is not going to be as accurate as a purpose built encoder, but should be ok for just learning.</p>
			</div>
			<div id = "comment-2125" class = "comment">
				<p>I always plug LEGO when I can. LEGO Mindstorms are perfect for this kind of thing, and are \$250. Now that a new version has been announced for mid-year, probably less then \$250. Their motors include encoders.</p>
			</div>
			</div>
				<textarea id = "speech-855" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-855">
					<img id="start_img-855" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-855">Comment</button>
			<br><div id = "ans-856"  class = "post">
				<h2>Answer</h2>
			<div id="vote-856" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>One alternative to sensing the wheel movement is to actually track the vehicle movement over ground. I know that some people have done it using <a href="https://www.sparkfun.com/products/10105" rel="nofollow">optical mouse sensors</a>. The results will depend on the type of underground you are expecting. The upside is however that you track the actual vehicle movement, which is what you are really interested in.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-856" data-toggle = "popover">
				<p>user name : Jakob</p>
				<p> user reputation : 2519</p>
				<p class = "tagcontent" id = "usertaginfo-856">{'ransac': 3, 'None': 210, 'computer-vision': 1, 'cameras': 1, 'c++': 3, 'slam': 12, 'rock': 1, 'i2c': 3, 'servos': 3, 'software': 1}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-856">Load Comments</button></br>
			<div id = "commentsection-856" class = 'collapse'>
			<div id = "comment-2120" class = "comment">
				<p>Nice idea @Jakob but the robot will be going over all sorts of terrain so an optical mouse sensor wouldn't work :(</p>
			</div>
			<div id = "comment-2129" class = "comment">
				<p>It's a shame the linked to board has been retired from the sparkfun catalog (and elsewhere too after a quick search).</p>
			</div>
			</div>
				<textarea id = "speech-856" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-856">
					<img id="start_img-856" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-856">Comment</button>
			<br><div id = "ans-859"  class = "post">
				<h2>Answer</h2>
			<div id="vote-859" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Typically, tracking the position and orientation of a vehicle is not accomplished by looking at the wheels &mdash; it's done with navigation sensors.  If you were attempting to have closed-loop control (i.e. servo control) of your motors then wheel-mounted position sensors might be appropriate.  But if the goal is to support "autonomous driving", then I don't think position sensors will suffice.  </p>

<p>Put simply, any non-flat terrain or slippage of the tracks would ruin your accuracy.</p>

<p>Instead, I would suggest one or more of the following navigation sensors:</p>

<ul>
<li>Compass</li>
<li>GPS</li>
<li>Inertial navigation system</li>
<li>Acoustic or laser rangefinder</li>
<li>Acoustic beacons and triangulation</li>
</ul>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-859" data-toggle = "popover">
				<p>user name : Ian</p>
				<p> user reputation : 9640</p>
				<p class = "tagcontent" id = "usertaginfo-859">{'planning': 10, 'None': 809, 'power': 1, 'algorithm': 10, 'battery': 1, 'slam': 7, 'coverage': 10, 'mobile-robot': 9, 'sensors': 9}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-859">Load Comments</button></br>
			<div id = "commentsection-859" class = 'collapse'>
			<div id = "comment-2131" class = "comment">
				<p>The bot will definitely have GPS at some stage but I am first looking at a simple means of navigating the bot and controlling direction using input from the encoders. If I can somehow use a Compass to do error detection and correction along with the GPS data then that would be the optimal solution. But I think encoders are a good 'starting point'. +1</p>
			</div>
			<div id = "comment-2146" class = "comment">
				<p>I think "navigation" is a strong word for what you are attempting.  Maybe "maneuvering" would be a better word, because you'll only be able to make rough estimates on your movements.  To put it another way (by analogy): if navigation was illustration, then what you'll be able to do is [blind contour drawing](https://www.google.com/search?q=blind+contour+drawing&tbm=isch) -- reminiscent, but not accurate.</p>
			</div>
			</div>
				<textarea id = "speech-859" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-859">
					<img id="start_img-859" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-859">Comment</button>
			<br><div id = "ans-860"  class = "post">
				<h2>Answer</h2>
			<div id="vote-860" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I put together encoders for this exact chassis.  Rather than reflecting ones, I used slot ones.  I thought I could work off the hole in the white gear, but it turns out the plastic is pretty transparent to IR, so I ended up using some black electical tape (high tech, I know) to make opaque regions on the gear.  </p>

<p>After building two encoders, I discovered there's a similar product online: <a href="http://arduino-direct.com/sunshop/index.php?l=product_detail&amp;p=202" rel="nofollow noreferrer">LightBeam OptoInterrupter Module</a></p>

<p>For my first robot, I m just using a rough encoder, with 4 counts per wheel revolution.  Here's my description from <a href="http://www.mcgurrin.com/robots/?tag=wheel-encoder-electronics" rel="nofollow noreferrer">my blog</a>: </p>

<p>In looking in the chassis, there s not a lot of room. As a result, I decided I d use a small transmissive sensor, rather than a reflective sensor.  Both have an IR emitter and an IR photo detector.  For reflective units, they both face the same direction, and the detector measure IR reflected back to the sensor.  For a transmissive or interrupt sensor, the two units are separated by a gap, and the detector picks up IR passing through the gap. So far, so good.</p>

<p>I ended up using Vishay transmissive optical sensors (model TCST1202) I purchased from DigiKey.  I wired them up based on the circuit posted by Aniss1001 in the  <a href="http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1257038219" rel="nofollow noreferrer">Homemade wheel encoder</a>  thread on the Arduino forum.</p>

<p><img src="https://i.stack.imgur.com/ZERQr.png" alt="Encoder circuit diagram - for a different encoder, but it worked fine"></p>

<p>I built the circuit on a prototyping breadboard for testing and got a surprise.  The circuit worked fine, but the gear is transparent to IR!  It turns out that nylon and most plastics used for inexpensive gears are pretty transparent to IR.  I first tried creating an opaque section with a black marker, but while that worked on paper, it didn t adhere well enough to the gear.  I ended up using a piece of black tape.  Once that worked, I cut some small circuit boards down to size and built the encoders, practicing my soldering skills.</p>

<p>I just used hot glue to mount the encoders.  The encoder boards stick up above the chassis base, so I m using standoffs to raise the plastic plate with the Romeo controller and other devices.  Here s a picture of one of the encoders before mounting,, and then mounted on the chassis:</p>

<p><img src="https://i.stack.imgur.com/WUt0F.jpg" alt="Homemade wheel encoder"></p>

<p><img src="https://i.stack.imgur.com/8Jo7F.jpg" alt="Mounted encoder"></p>

<p>Hope this helps!</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-860" data-toggle = "popover">
				<p>user name : ViennaMike</p>
				<p> user reputation : 353</p>
				<p class = "tagcontent" id = "usertaginfo-860">{'None': 15, 'sensors': 11, 'compass': 11}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-860">Load Comments</button></br>
			<div id = "commentsection-860" class = 'collapse'>
			<div id = "comment-2132" class = "comment">
				<p>This definitely helps. Can't wait to finish work and go build it!! Accepting this, thank you so much!</p>
			</div>
			<div id = "comment-2133" class = "comment">
				<p>Just to confirm, because the gears are transparent, the IR light is able to pass through the white portion of the printed graphic but not the black?</p>
			</div>
			<div id = "comment-2134" class = "comment">
				<p>In my case, I didn't use a printed graphic but pieces of black tape, leaving only the white gear on the rest.  Paper, depending on it's nature and thickness, will block some of the IR even if white (the encoder wheel patterns you've seen are for reflective sensors like you were originally thinking of). I don't know if a single layer of white paper (plus whatever adhesive you used) would block most of the IR.  I played it safe by cutting strips of tape.</p>
			</div>
			<div id = "comment-2135" class = "comment">
				<p>OK that I can test - just confirming that the IR signal DOES go through the gears and is picked up by the receiver. Even if I do print it out I could always cut the white portion out to make sure the signal goes through.</p>
			</div>
			<div id = "comment-2136" class = "comment">
				<p>Sorry for the confusion - I thought you were using one of these sensors but I've just checked the linked product and it seems that it's different. I was looking at this</p>
			</div>
			<div id = "comment-2137" class = "comment">
				<p>http://www.mindkits.co.nz/store/sensors/photo-interrupter-gp1a57hrj00f</p>
			</div>
			<div id = "comment-2138" class = "comment">
				<p>That one you link to IS the same general type I used.  The specific one I used is at http://www.vishay.com/docs/83764/tcst1103.pdf, but no reason others won't work.</p>
			</div>
			</div>
				<textarea id = "speech-860" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-860">
					<img id="start_img-860" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-860">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>