<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How do I select the best configuration for a known workspace, load and task?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-900" class = "post">
			<h2>Question</h2>
			<div id="vote-900" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 186</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How do I select the best configuration for a known workspace, load and task?</h2>
<p>Given workspace constraints, load and task to be done, how do I select the best configuration of my robot? How do I select between a cartesian or Scara robot for instance? How do I select a manipulator? How do I determine how many axes that I need?</p>

<p>Most of what I have seen is based on experience, rules of thumb and readily available standard devices, but I would like a more formal answer to quantify my choice. Is there some technique (genetic algorithm?) which describes the task, load, workspace, budget, speed etc. and rates and selects an optimal robot configuration or maybe even multiple configurations? How can I be mathematically ensure I ultimately chose the optimal solution?</p>

<p>The only thing I found online was a thesis from 1999 titled <a href="http://darwin2k.sourceforge.net/thesis.pdf" rel="nofollow"><em>Automated Synthesis and Optimization of Robot Configurations: An Evolutionary Approach</em></a> (pdf, <a href="http://scholar.google.co.uk/scholar?hl=en&amp;q=CMU-RI-TR-99-43&amp;btnG=&amp;as_sdt=1,5&amp;as_sdtp=" rel="nofollow">CMU-RI-TR-99-43</a>). It is a synthesis and optimization tool called <a href="http://darwin2k.sourceforge.net/" rel="nofollow">Darwin2K</a> presented in a thesis written by Chris Leger at CMU. I am surprised no one has updated it or created a tool similar to it.</p>

<p>To provide some context for my question, we are developing a robot to assist the elderly with domestic tasks. In this instance, the robot identifies and picks food items from a previously stored and known location. The hand opens the package and place it in the oven. The pick and place locations are fixed and nearby so the robot is stationary.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-900" data-toggle = "popover">
				<p>user name : KitchenBot</p>
				<p> user reputation : 11</p>
				<p class = "tagcontent" id = "usertaginfo-900">{'None': 0, 'manipulator': 2, 'theory': 2, 'algorithm': 2, 'industrial-robot': 2, 'design': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-900">Load Comments</button></br>
			<div id = "commentsection-900" class = 'collapse'>
			<div id = "comment-2197" class = "comment">
				<p>Could you add some context or tags to your question that indicate what sort of robot you are working with?  I gather that this is not a vehicle, but is there a specific name for the type of system that this robot is a part of?</p>
			</div>
			<div id = "comment-2199" class = "comment">
				<p>Yes, sorry I was not clearer. We are developing a robot to assist the elderly with domestic tasks. In this instance, the robot identifies and picks food items from a previously stored and known location. The hand opens the package and place it in the oven. The pick and place locations are fixed and nearby so the robot is stationary.</p>
			</div>
			<div id = "comment-2200" class = "comment">
				<p>@KitchenBot - On stack exchange comments are intended to help make questions and answers better, so rather than replying to a question by posting a comment, it is better to add the information to your answer. That way, once the clarification has been supplied, the comment asking for that clarification can be tidied up (deleted) rather than distracting from the question. See my edit to see what I mean.</p>
			</div>
			</div>
				<textarea id = "speech-900" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-900">
					<img id="start_img-900" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-900">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-903"  class = "post">
				<h2>Answer</h2>
			<div id="vote-903" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I'll just show why heuristics and experience are relevant in this problem by showing that is nearly impossible to solve optimally.  Note, genetic algorithms cannot necessarily always solve a problem optimally, they are just another heuristic-based search.</p>

<ol>
<li><p><strong>Defining the manipulator</strong>
Let's simplify things. According to <a href="http://books.google.com/books/about/Introduction_to_Robotics.html?id=MqMeAQAAIAAJ" rel="nofollow">Craig 2005</a>, robot manipulators can be reasonably decomposed into <a href="http://en.wikipedia.org/wiki/Prismatic_joint" rel="nofollow">prismatic</a> and <a href="http://en.wikipedia.org/wiki/Revolute_joint" rel="nofollow">revolute</a> joints. Each such joint is <a href="http://en.wikipedia.org/wiki/Degrees_of_freedom_%28mechanics%29" rel="nofollow">one degree of freedom</a> in your <em>input</em> space. That is, a hand on the end of the robot can be specified by a vectors of length $N$, where the robot has $N$ joints of types prismatic or revolute. OK. we can now specify the manipulator position. The set of all possible configurations is called the <a href="http://en.wikipedia.org/wiki/Configuration_space" rel="nofollow"><em>configuration space</em></a>. Let's assume we know this completely, as you stated.</p></li>
<li><p><strong>Defining the task</strong>
Let's assume that the task consists of moving the manipulator through a series of stages. For example, suppose the manipulator must drill 30 holes in a sheet, then place the sheet on a pallet, or whatever. Since we have the manipulator positions as a vector of length $N$, we can specify each task as a desired position, $X_1, X_2 ... X_M$ for task length $M$. What we've just done is specified a series of points in the <em>configuration space</em> which we defined above. </p></li>
</ol>

<p>OK break time to verify the terminology if anyone is confused. Watch this <a href="https://www.youtube.com/watch?v=ciSaT0eH5cY" rel="nofollow">video</a>. The robot has 3 degrees of freedom (each rotation point), so the configuration space is all sets of 3 real numbers (in the range 0-$2\pi$, corresponding to the 3 angles of the 3 revolute joints). The task is to cause the end-effector (the pen) to visit all points on a circle. If this isn't clear, I can clarify.</p>

<ol>
<li><p><strong>Defining the cost</strong> Now that we know the configuration space and the series of points, let's talk about cost. The cost is typically the force exerted by the joints. So suppose (a huge assumption), that we can model this directly as $f(X_1,X_2)$, a function which returns the energy to go from state $1$ to $2$. If we're lucky, the function is a <a href="http://en.wikipedia.org/wiki/Metric_%28mathematics%29" rel="nofollow"><em>metric</em></a>. If not, it defines <a href="http://en.wikipedia.org/wiki/Complete_graph" rel="nofollow">a complete graph with $N\choose 2$</a> links (the cost to go from any state to any other state).</p></li>
<li><p><strong>Defining the problem</strong> Find the optimal ordering of manipulator states and paths between manipulator states to minimize the cost, $f(X_i,X_{i+1})$ for each sequential task $i$. This is clearly a Travelling Salesperson Problem <a href="http://en.wikipedia.org/wiki/Travelling_salesman_problem" rel="nofollow">(See: TSP)</a>. Since TSP is <a href="http://en.wikipedia.org/wiki/NP-hard" rel="nofollow">NP-Hard</a>, this problem is <a href="http://en.wikipedia.org/wiki/NP-complete#Formal_definition_of_NP-completeness" rel="nofollow">NP-Complete</a>*.</p></li>
</ol>

<p>What does the above mean? Well, for a <em>given</em> robot design, we have arrive at an NP-Complete problem to derive the optimal task sequence: movements, manipulator positions, etc. To optimize the <em>robot itself</em> is even more difficult. First, we have to search over all possible robot configurations (subject to what??), and for each, solve an NP-Complete problem. The best result is the robot configuration we want.  For a small-dimensional workspace (say one joint, or $N=1$), and a simple task (say a small number of possitions like $M$=3 or so) this is not too difficult. However, in general, $N$ is unbounded, and $M$ is large. </p>

<p>Even if there is some <em>ordering</em> property on $N$, like a robot of 2 joints is better than a robot of 1 joints, etc, you still have to do $\log(n^\star)$ TSP solutions, where $n^\star$ is the perfect number of robot joints. Remember a TSP solution is incredibly difficult to solve optimally. This gets even worse if we want to say "Well, what about two arms with two joints versus one arm with four joints."  I don't want to talk about that complexity ... It's exploding.</p>

<p><em><strong>So, because you can't solve it perfectly using computers, people pay big money to have an experienced engineer do it for them. Win-win?</em></strong></p>

<p>*well not really, but along the way we show a polynomial time reduction, so it sorta counts.</p>

<hr>

<p><strong>EDIT</strong> What we actually did here was describe the algorithm to select the optimal manipulator design. That should answer your first question. However, it is computationally infeasible to run on a computer, and so heuristics and other design choices are necessary, that should answer your second question.</p>

<p>What this means: We're also having this problem in our lab. Manipulators are very expensive, and we want one that is <em>just</em> good enough to perform some task. What we converged to was an extremely minimal set of joints for each task, instead of one large and capable manipulator for all tasks. My advice: I would design the robot based on budget and programmability, rather than trying to make a claim about the optimal configuration.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-903" data-toggle = "popover">
				<p>user name : Josh Vander Hook</p>
				<p> user reputation : 3960</p>
				<p class = "tagcontent" id = "usertaginfo-903">{'None': 345}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-903" class = 'collapse'>
			</div>
				<textarea id = "speech-903" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-903">
					<img id="start_img-903" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-903">Comment</button>
			<br><div id = "ans-906"  class = "post">
				<h2>Answer</h2>
			<div id="vote-906" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The answer by <a href="https://robotics.stackexchange.com/a/903/37">Josh is excellent</a> but here is an industrial perspective.</p>

<p>In my experience, industrial robot design always starts with the requirements of the load and the design decisions ripple back from there.</p>

<p>You need to look at the size, shape and weight of the object (or objects) to be manipulated, how fast you need to move the object and how accurate the control needs to be. Then you can marry this with details of <em>how</em> the object is to be moved. At each stage you work out the worst case and give yourself a little <em>wriggle room</em> in case something doesn't perform up to spec.</p>

<p>Although you can attempt to use <em>average case</em> rather than <em>worst case</em>, it is risky to do so. Just because you think that no-one will ever drive both axis A and B to it's full extent at the same time, doesn't mean that someone won't <em>accidentally</em> try to do it, and if arm AB isn't able to carry the weight in this configuration, it could be dangerous, both to the machine and any people nearby.</p>

<p>If you are lucky, your mechanical designer has access to not only <a href="http://en.wikipedia.org/wiki/Computer-aided_design" rel="nofollow noreferrer">CAD tools</a>, but also <a href="http://en.wikipedia.org/wiki/Computer-aided_engineering" rel="nofollow noreferrer">CAE tools</a> such as <a href="http://en.wikipedia.org/wiki/Finite_element_method" rel="nofollow noreferrer">Finite Element Analysis</a>, but many small, specialist robotics firms can't afford expensive CAE systems and rely entirely on experience, judgement and judicious <a href="http://en.wikipedia.org/wiki/Overengineering" rel="nofollow noreferrer">overengineering</a>.</p>

<p>Even where a company does have access to CAE tools, they will often be used sparingly. Since it is unfeasible to simulate the whole of a complex system in one go, subsystems are instead analysed independently of each other.</p>

<p>Ultimately as with many aesa of expertise, there is no one-size-fits-all robotics solution. Every requirement has implications on a whole bunch of desi for </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-906" data-toggle = "popover">
				<p>user name : Mark Booth</p>
				<p> user reputation : 3037</p>
				<p class = "tagcontent" id = "usertaginfo-906">{'control': 7, 'quadcopter': 2, 'None': 258, 'tuning': 7, 'uav': 2, 'design': 2, 'stepper-motor': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-906">Load Comments</button></br>
			<div id = "commentsection-906" class = 'collapse'>
			<div id = "comment-2201" class = "comment">
				<p>Thanks for the answers. I was hoping for something a bit more automated adn graphical. The only thing I found online was this paper from 1999. It is a synthesis and optimization tool called Darwin2K presented in a thesis written by Chris Leger at CMU. http://darwin2k.sourceforge.net/thesis.pdf I am surprised no one has updated it or created a tool similar to it.</p>
			</div>
			<div id = "comment-2220" class = "comment">
				<p>Thank you. I am new to this so I am just getting the hang of it.</p>
			</div>
			<div id = "comment-2221" class = "comment">
				<p>@KitchenBot - No problem, we were all new on stack Exchange once, and it is a different way of doing things to that which most people are used to. Feel free to tidy up (delete) your comments when they are no longer relevant.</p>
			</div>
			</div>
				<textarea id = "speech-906" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-906">
					<img id="start_img-906" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-906">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>