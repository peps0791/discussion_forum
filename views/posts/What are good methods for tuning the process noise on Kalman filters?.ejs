<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>What are good methods for tuning the process noise on Kalman filters?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-18" class = "post">
			<h2>Question</h2>
			<div id="vote-18" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">15</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 2737</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>What are good methods for tuning the process noise on Kalman filters?</h2>
<p>Most often tuning the Kalman filter noise matrices is done by trial and error or domain knowledge. Are there more principled ways for tuning all the Kalman filter parameters?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-18" data-toggle = "popover">
				<p>user name : Chris Mansley</p>
				<p> user reputation : 464</p>
				<p class = "tagcontent" id = "usertaginfo-18">{'odometry': 15, 'None': 24, 'kalman-filter': 15, 'localization': 15}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-18" class = 'collapse'>
			</div>
				<textarea id = "speech-18" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-18">
					<img id="start_img-18" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-18">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-105"  class = "post">
				<h2>Answer</h2>
			<div id="vote-105" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">10</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You can get experimental data, and perform some statistical analysis to determine the process noise (noise between time steps), and sensor noise (compared to a ground truth).</p>

<p>To get the ground truth for sensor noise, you either need a more accurate sensor, or else experimentally test while keeping the state of interest at a known (usually fixed) value.</p>

<p>If you do not have experimental data, you can use the datasheets or specifications for each sensor to determine its noise. The process noise would be more difficult in this instance, but you may be able to guess at its value by assuming a certain amount of noise due to, for example, an actuator, if the actuator is the primary source of process noise.</p>

<hr>

<p>Another way is to consider the maximum settling time allowed for estimation. This will determine the ratio between the process noise and sensor noise. This allows you to have the maximum filtering effect while meeting your settling time requirements.</p>

<p>Note that this does not provide a good way to tune the ratio between different sensors, or between different states, so is not perfect.</p>

<hr>

<p>Basically, if you have experimental data, you can obtain optimal performance. Otherwise, you can only calculate process noise based by assuming the likely noise of the dominant contributor to process noise, or by determining what minimum performance is required (which is not optimal, but at least gets what is needed).</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-105" data-toggle = "popover">
				<p>user name : ronalchn</p>
				<p> user reputation : 2449</p>
				<p class = "tagcontent" id = "usertaginfo-105">{'None': 187, 'two-wheeled': 20, 'inverse-kinematics': 15, 'interrupts': 5, 'microcontroller': 13, 'wiring': 7, 'c': 8, 'avr': 5, 'brushless-motor': 2, 'joint': 15, 'kinematics': 15, 'hall-sensor': 2, 'mobile-robot': 20, 'arm': 15}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-105" class = 'collapse'>
			</div>
				<textarea id = "speech-105" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-105">
					<img id="start_img-105" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-105">Comment</button>
			<br><div id = "ans-1972"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1972" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>In the field of machine learning, we look at a Kalman filter as an inference algorithm on a latent variable model. The measurements are visible, but the true state is hidden. You now want to infer the true states.</p>

<p>As usual, this method relies on a set of parameters and -- in principle -- the way to obtain the best point-estimate for the parameters is to look at the likelihood for the data (given the parameters) and optimising your parameters to obtain the maximum value. This gives you the maximum likelihood estimate.</p>

<p>Unfortunately, in the case of the Kalman filter, this approach is not so easy and intractable to do in closed form. This is because we do not observe the hidden states. Therefore, one has to apply some tricks. One of them is to use the Expecation Maximisation (EM) Algorithm, which is an iterative approach: In the first step, you calculate the most likely value for your hidden states (the expected value) under your current parameters. In the second step, you keep the hidden states fixed and optimise the parameters to obtain the solution with highest likelihood. These steps are repeated until convergence.</p>

<p>You can read up on the general concept of EM in a whole bunch of text books on machine learning (only one example: <a href="http://web4.cs.ucl.ac.uk/staff/D.Barber/pmwiki/pmwiki.php?n=Brml.HomePage" rel="nofollow">"Bayesian Reasoning and Machine Learning"</a> by David Barber). The process of inferring the parameters for linear dynamical systems (which gives you the Kalman filter type of model) is well described in a <a href="http://www.gatsby.ucl.ac.uk/~zoubin/papers/tr-96-2.pdf" rel="nofollow">tech report by Zoubin Ghahramani and Geoffrey Hinton</a>.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1972" data-toggle = "popover">
				<p>user name : Edgar</p>
				<p> user reputation : 111</p>
				<p class = "tagcontent" id = "usertaginfo-1972">{'None': 1}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1972" class = 'collapse'>
			</div>
				<textarea id = "speech-1972" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1972">
					<img id="start_img-1972" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1972">Comment</button>
			<br><div id = "ans-7248"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7248" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You might want to read <a href="http://www.nt.ntnu.no/users/skoge/prost/proceedings/npc07/DTU/dtu10.pdf" rel="nofollow">"A Tool for Kalman Filter Tuning"</a> by
Bernt M.  kesson, et. al.  It describes the autocovariance least-squares (ALS) method.  </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7248" data-toggle = "popover">
				<p>user name : Rob Frohne</p>
				<p> user reputation : 1</p>
				<p class = "tagcontent" id = "usertaginfo-7248">{'None': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7248" class = 'collapse'>
			</div>
				<textarea id = "speech-7248" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7248">
					<img id="start_img-7248" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7248">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>