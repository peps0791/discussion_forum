<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How is PIV control performed?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1032" class = "post">
			<h2>Question</h2>
			<div id="vote-1032" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">12</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 3460</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How is PIV control performed?</h2>
<p>I'm considering experimenting with PIV control instead of PID control. Contrary to PID, PIV control has very little explanation on the internet and literature. There is almost a single source of information explaining the method, which is a <a href="http://parkermotion.com/whitepages/ServoFundamentals.pdf">technical paper by Parker Motion</a>. </p>

<p>What I understand from the control method diagram (which is in Laplace domain) is that the control output boils down to the sum of:</p>

<ul>
<li>Kpp*(integral of position error)</li>
<li>-Kiv*(integral of measured velocity)</li>
<li>-Kpv*(measured velocity)</li>
</ul>

<p>Am I correct? Thank you. </p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1032" data-toggle = "popover">
				<p>user name : Ayberk  zg r</p>
				<p> user reputation : 230</p>
				<p class = "tagcontent" id = "usertaginfo-1032">{'control': 12, 'pid': 18, 'None': 2, 'servos': 18}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1032">Load Comments</button></br>
			<div id = "commentsection-1032" class = 'collapse'>
			<div id = "comment-2421" class = "comment">
				<p>I have never heard of such thing and, to be honest, the acronym is quite weird. If you are talking about position control, wouldn't the velocity be the same as the derivative? What I find interesting is that the integral of the position error isn't there, so it's as if you had a PD controller with two sources of position information (measured position and the integral of velocity). Could you link the article so we can answer your question?</p>
			</div>
			<div id = "comment-2422" class = "comment">
				<p>PIV control is explained here: http://www.parkermotion.com/whitepages/ServoFundamentals.pdf</p>
			</div>
			<div id = "comment-19018" class = "comment">
				<p>This is basically a form of cascaded controllers.  Explained a little here: https://en.wikipedia.org/wiki/PID_controller#Cascade_control</p>
			</div>
			</div>
				<textarea id = "speech-1032" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1032">
					<img id="start_img-1032" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1032">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1034"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1034" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>It seems to me like there are three basic differences between the classic PID topology and the so-called PIV topology mentioned in the white paper:</p>

<ol>
<li>Desired velocity is assumed to be proportional to position error, the $K_p$ term regulates this.</li>
<li>The integral error gain $K_i$ works to remove steady state errors in velocity, not position. That is essentially the same thing, however, due to item #1.</li>
<li>The velocity estimate is fed directly through the $K_v$ term (instead of considering the derivative of position error).</li>
</ol>

<p>In the paper they claim that the main advantage of this topology is that it is easier to tune.</p>

<p>The output of the controller is formed as follows:</p>

<p>$e_\theta=\theta^*-\theta\\
e_\omega = (K_pe_\theta-\hat{\omega})\\
\text{output} = \int K_ie_\omega dt - K_v\hat{\omega}$</p>

<p>Of course, since you will probably be programming this, the integral is replaced by an accumulator variable as follows:</p>

<p>$e_\theta=\theta^*-\theta\\
e_\omega = (K_pe_\theta-\hat{\omega})\\
\text{integral} = \text{integral} + K_ie_\omega \Delta t \\
\text{output} = \text{integral} - K_v\hat{\omega}$</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1034" data-toggle = "popover">
				<p>user name : georgebrindeiro</p>
				<p> user reputation : 1266</p>
				<p class = "tagcontent" id = "usertaginfo-1034">{'computer-vision': 9, 'None': 98, 'slam': 9}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1034">Load Comments</button></br>
			<div id = "commentsection-1034" class = 'collapse'>
			<div id = "comment-2424" class = "comment">
				<p>The estimated angular velocity $\hat{\omega}$ has its own coefficient $K_{pv}$ right?</p>
			</div>
			<div id = "comment-2425" class = "comment">
				<p>I am also guessing that PIV is not very useful in practice therefore not popular.</p>
			</div>
			<div id = "comment-2426" class = "comment">
				<p>Yes, you're right, I forgot to add that. I don't know if the problem is how useful it is... It's just not seen in the standard literature, although it's justifiable. It's probably something that was developed internally because it suited their needs, but it's not all that different from PID.</p>
			</div>
			<div id = "comment-2552" class = "comment">
				<p>we are using PIV to regulate a wheel on a legged-wheel system. Due to the (irregular) shape of the wheel, position is important. However, in normal situations, you want to regulate the speed. PIV was taking both into account and yields better results than PID.</p>
			</div>
			<div id = "comment-19019" class = "comment">
				<p>@Ayberk zg r Virtually all commercial motion control systems use some variation of cascading PID controllers with some similarity to this.  E.g. Parker, Baldor, ACS, Copely, ACS, Delta-Tau ...  This sort of proportional gain only position loop over a PI velocity loop is very common but different vendors certainly have their own slight variations.  A system will usually have a current loop as well and various feed-forward components.  It's true that in hobbyist circles it is less popular IMO because performance is less of a concern vs. simplicity.</p>
			</div>
			</div>
				<textarea id = "speech-1034" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1034">
					<img id="start_img-1034" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1034">Comment</button>
			<br><div id = "ans-1125"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1125" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>In industry, this type of control is still generally referred to as PID control and I've seen many applications of it. It's main benefit stems from the fact that it removes the "derivative kick" caused by an abrupt change in set point and thus is useful for applications where set point tracking is most important (rather than fast disturbance rejection). See <a href="http://www.controlguru.com/wp/p76.html" rel="nofollow">http://www.controlguru.com/wp/p76.html</a>.</p>

<p>Image showing difference in derivative kick of PID and PIV
<a href="http://controlguru.com/wp-content/uploads/2015/08/pidkickbig.jpg" rel="nofollow">http://controlguru.com/wp-content/uploads/2015/08/pidkickbig.jpg</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1125" data-toggle = "popover">
				<p>user name : ddevaz</p>
				<p> user reputation : 503</p>
				<p class = "tagcontent" id = "usertaginfo-1125">{'None': 34}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1125">Load Comments</button></br>
			<div id = "commentsection-1125" class = 'collapse'>
			<div id = "comment-18996" class = "comment">
				<p>FYI, the second link is broken...</p>
			</div>
			</div>
				<textarea id = "speech-1125" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1125">
					<img id="start_img-1125" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1125">Comment</button>
			<br><div id = "ans-1359"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1359" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>A PID loop and a so-called PIV loop with equal gains should have the same response to a disturbance, so I'm not sure why the claim that the disturbance response is better or worse.</p>

<p>As mentioned, the derivative "kick" will be less, which can be a good thing if you give the thing sharp inputs.</p>

<p>In addition, there can be some benefits as the thing comes out of integrator saturation, depending on how you implement your anti-windup.</p>

<p>Mostly, the so-called PIV loop is just a way of affecting the zeros of the closed-loop transfer function.  It's a special case of a more general scheme where your controller output is (in Laplace notation) 
$$Y(s)=\frac{k_{fi}U(s) - k_{bi}X(s)}{s} + \left(k_{fp}U(s) - k_{bp}X(s)\right) + \left(k_{fd}U(s) - k_{bd}X(s)\right)s$$ 
where $Y$ is the controller output, $U$ is the system command and $X$ is the controlled variable, while the various $k_{xx}$ are forward and backward integral, derivative, and proportional gains.  In this scheme you tune the various feedback gains ($k_{bx}$) to get the loop (and hence disturbance) response that you want, and you tune the forward gains ($k_{fx}$) to improve the response to a command change, by whatever criteria you have for "better".</p>

<p>Setting all the forward and reverse gains equal gets you a plain ol' PID, while setting $k_{bp}=0$ and  $k_{bd}=0$ gets you the so-called "PIV" controller.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1359" data-toggle = "popover">
				<p>user name : TimWescott</p>
				<p> user reputation : 1336</p>
				<p class = "tagcontent" id = "usertaginfo-1359">{'None': 107}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1359">Load Comments</button></br>
			<div id = "commentsection-1359" class = 'collapse'>
			<div id = "comment-19020" class = "comment">
				<p>Are you sure Tim?  See here page 3-26 http://web.stanford.edu/class/archive/ee/ee392m/ee392m.1056/Lecture3_BasicFeedback.pdf which is essentially the same configuration...  So you're saying this is equivalent to a "plain ol'" PID loop over position?  At the very least you'd think what's inside the "velocity" estimator box matters.  And if they're equivalent why does everyone seem to bother with cascading controllers for motion control?</p>
			</div>
			</div>
				<textarea id = "speech-1359" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1359">
					<img id="start_img-1359" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1359">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>