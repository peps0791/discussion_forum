<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>position control for linear model of quadrotor (problem with tracking task)
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-7331" class = "post">
			<h2>Question</h2>
			<div id="vote-7331" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 236</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>position control for linear model of quadrotor (problem with tracking task)</h2>
<p>Lately, if you notice I have posted some questions regarding position tracking for nonlinear model. I couldn't do it. I've switched to linear model, hope I can do it. For regulation problem, the position control seems working but once I switch to tracking, the system starts oscillating. I don't know why. I have stated what I've done below hope someone guides me to the correct path. </p>

<p>The linear model of the quadrotor is provided <a href="http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=6915128" rel="nofollow noreferrer">here</a> which is </p>

<p>$$
\begin{align}
\ddot{x}    &amp;= g \theta \ \ \ \ \ \ \ \ \ \ (1)\\
\ddot{y}    &amp;= - g \phi \ \ \ \ \ \ \ \ \ \ (2)\\
\ddot{z}    &amp;= \frac{U_{1}}{m} - g \\
\ddot{\phi} &amp;= \frac{L}{J_{x}} U_{2} \\
\ddot{\theta} &amp;= \frac{L}{J_{y}} U_{2} \\
\ddot{\psi} &amp;= \frac{1}{J_{z}} U_{2} \\
\end{align}
$$</p>

<p>In this <a href="http://link.springer.com/article/10.1007%2Fs10846-012-9789-z" rel="nofollow noreferrer">paper</a>, the position control based on PD is provided. In the aforementioned paper, from (1) and (2) the desired angles $\phi^{d}$ and $\theta^{d}$ are obtained, therefore, </p>

<p>$$
\begin{align}
\theta^{d}  &amp;= \frac{\ddot{x}^{d}}{g}  \\
\phi^{d}    &amp;= - \frac{\ddot{y}^{d}}{g}
\end{align}
$$</p>

<p>where </p>

<p>$$
\begin{align}
\ddot{x}^{d} &amp;= Kp(x^{d} - x) + Kd( \dot{x}^{d} - \dot{x} ) \\
\ddot{y}^{d} &amp;= Kp(y^{d} - y) + Kd( \dot{y}^{d} - \dot{y} ) \\
U_{1} &amp;= Kp(z^{d} - z) + Kd( \dot{z}^{d} - \dot{z} ) \\
U_{2} &amp;= Kp(\phi^{d} - \phi) + Kd( \dot{\phi}^{d} - \dot{\phi} ) \\
U_{3} &amp;= Kp(\theta^{d} - \theta) + Kd( \dot{\theta}^{d} - \dot{\theta} ) \\
U_{4} &amp;= Kp(\psi^{d} - \psi) + Kd( \dot{\psi}^{d} - \dot{\psi} ) \\
\end{align}
$$</p>

<p>with regulation problem where $x^{d} = 2.5 m, \ y^{d} = 3.5 m$ and $z^{d} = 4.5 m$, the results are </p>

<p><img src="https://i.stack.imgur.com/qBlCa.png" alt="enter image description here">
<img src="https://i.stack.imgur.com/65V5T.png" alt="enter image description here"></p>

<p>Now if I change the problem to the tracking one, the results are messed up. </p>

<p><img src="https://i.stack.imgur.com/bu5an.png" alt="enter image description here">
<img src="https://i.stack.imgur.com/kaSZr.png" alt="enter image description here"></p>

<p>In the last paper, they state </p>

<blockquote>
  <p>A saturation function is needed to ensure that the reference roll and
  pitch angles are within specified limits</p>
</blockquote>

<p><img src="https://i.stack.imgur.com/ZdUZJ.png" alt="enter image description here"></p>

<p>Unfortunately, the max value for $\phi$ and $\theta$ are not stated in the paper but since they use Euler angles, I believe $\phi$ in this range $(-\frac{\pi}{2},\frac{\pi}{2})$ and $\theta$ in this range $[-\pi, \pi]$
I'm using Euler method as an ODE solver because the step size is fixed. For the derivative, Euler method is used. </p>

<p>This is my code </p>

<pre><code>%######################( PD Controller &amp; Atittude )%%%%%%%%%%%%%%%%%%%%

clear all;
clc;

dt = 0.001;
 t = 0;

% initial values of the system
 x = 0;
dx = 0;
 y = 0;
dy = 0;
 z = 0;
dz = 0;

   Phi = 0;
  dPhi = 0;
 Theta = 0;
dTheta = 0;
   Psi = pi/3;
  dPsi = 0;


%System Parameters:
m = 0.75;      % mass (Kg)
L = 0.25;      % arm length (m)
Jx = 0.019688; % inertia seen at the rotation axis. (Kg.m^2)
Jy = 0.019688; % inertia seen at the rotation axis. (Kg.m^2)
Jz = 0.039380; % inertia seen at the rotation axis. (Kg.m^2)
g  = 9.81;      % acceleration due to gravity m/s^2

errorSumX = 0;
errorSumY = 0;
errorSumZ = 0;

errorSumPhi   = 0;
errorSumTheta = 0;

pose = load('xyTrajectory.txt');

% Set desired position for tracking task
DesiredX = pose(:,1);
DesiredY = pose(:,2);
DesiredZ = pose(:,3);

% Set desired position for regulation task
% DesiredX(:,1) = 2.5;
% DesiredY(:,1) = 5;
% DesiredZ(:,1) = 7.2;


dDesiredX = 0;
dDesiredY = 0;
dDesiredZ = 0;

DesiredXpre = 0;
DesiredYpre = 0;
DesiredZpre = 0;

dDesiredPhi = 0;
dDesiredTheta = 0;
DesiredPhipre = 0;
DesiredThetapre = 0;



for i = 1:6000

   % torque input
   %&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;( Ux )&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;
   Kpx = 90; Kdx = 25; Kix = 0.0001; 


   errorSumX = errorSumX + ( DesiredX(i) - x );

   % Euler Method Derivative
     dDesiredX = ( DesiredX(i) - DesiredXpre ) / dt;
   DesiredXpre = DesiredX(i);


   Ux = Kpx*( DesiredX(i) - x  ) + Kdx*( dDesiredX - dx ) + Kix*errorSumX;
   %&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;( Uy )&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;
   Kpy = 90; Kdy = 25; Kiy = 0.0001; 


   errorSumY = errorSumY + ( DesiredY(i) - y );

   % Euler Method Derivative
   dDesiredY = ( DesiredY(i) - DesiredYpre ) / dt;
   DesiredYpre = DesiredY(i);


   Uy = Kpy*( DesiredY(i) - y  ) + Kdy*( dDesiredY - dy ) + Kiy*errorSumY;
   %&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;( U1 )&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;
   Kpz = 90; Kdz = 25; Kiz = 0; 


   errorSumZ = errorSumZ + ( DesiredZ(i) - z );

      dDesiredZ = ( DesiredZ(i) - DesiredZpre ) / dt;
   DesiredZpre = DesiredZ(i);

   U1 = Kpz*( DesiredZ(i) - z ) + Kdz*( dDesiredZ - dz ) + Kiz*errorSumZ;
   %#######################################################################
   %#######################################################################
   %#######################################################################
   % Desired Phi and Theta


   %disp('before')
   DesiredPhi   = -Uy/g;
   DesiredTheta =  Ux/g;



   %&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;( U2 )&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;
   KpP = 20; KdP = 5; KiP = 0.001;


   errorSumPhi = errorSumPhi + ( DesiredPhi - Phi );


   % Euler Method Derivative
      dDesiredPhi = ( DesiredPhi - DesiredPhipre ) / dt;
   DesiredPhipre  = DesiredPhi;


   U2 = KpP*( DesiredPhi - Phi ) + KdP*( dDesiredPhi - dPhi )  + KiP*errorSumPhi;

   %--------------------------------------
   %&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;( U3 )&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;

   KpT = 90; KdT = 10; KiT = 0.001;
    errorSumTheta = errorSumTheta + ( DesiredTheta - Theta );

   % Euler Method Derivative
      dDesiredTheta = ( DesiredTheta - DesiredThetapre ) / dt;
   DesiredThetapre = DesiredTheta;


   U3 = KpT*( DesiredTheta - Theta ) + KdP*( dDesiredTheta - dTheta ) + KiT*errorSumTheta;
   %--------------------------------------
   %&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;( U4 )&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;
   KpS = 90; KdS = 10; KiS = 0; DesiredPsi = 0; dDesiredPsi = 0;
   U4 = KpS*( DesiredPsi - Psi ) + KdS*( dDesiredPsi - dPsi );


   %###################( ODE Equations of Quadrotor )###################
   ddx = g * Theta;
    dx = dx + ddx*dt;
     x =  x +  dx*dt;
   %=======================================================================  
   ddy = -g * Phi;
    dy = dy + ddy*dt;
     y =  y +  dy*dt;
   %=======================================================================
   ddz = (U1/m) - g;
    dz = dz + ddz*dt;
     z =  z +  dz*dt;
   %=======================================================================  
   ddPhi = ( L/Jx )*U2;
    dPhi = dPhi + ddPhi*dt;
     Phi =  Phi +  dPhi*dt;
   %=======================================================================  
   ddTheta =  ( L/Jy )*U3;
    dTheta =  dTheta + ddTheta*dt;
     Theta =   Theta +  dTheta*dt;
   %=======================================================================  
   ddPsi =  (1/Jz)*U4; 
    dPsi = dPsi + ddPsi*dt;
     Psi =  Psi +  dPsi*dt;
   %=======================================================================  
   %store the erro
   ErrorX(i)   = ( x - DesiredX(i) );
   ErrorY(i)   = ( y - DesiredY(i) );
   ErrorZ(i)   = ( z - DesiredZ(i) );
   ErrorPsi(i)   = ( Psi - 0 );


   X(i) = x;
   Y(i) = y;
   Z(i) = z;

   T(i) = t;

   t = t + dt; 


end


Figure1 = figure(1);
set(Figure1,'defaulttextinterpreter','latex');


subplot(2,2,1)
plot(T, ErrorX, 'LineWidth', 2)
title('Error in $x$-axis Position (m)')
xlabel('time (sec)')
ylabel('$x_{d}(t) - x(t)$', 'LineWidth', 2)

subplot(2,2,2)
plot(T, ErrorY, 'LineWidth', 2)
title('Error in $y$-axis Position (m)')
xlabel('time (sec)')
ylabel('$y_{d}(t) - y(t)$', 'LineWidth', 2)

subplot(2,2,3)
plot(T, ErrorZ, 'LineWidth', 2)
title('Error in $z$-axis Position (m)')
xlabel('time (sec)')
ylabel('$z_{d} - z(t)$', 'LineWidth', 2)


subplot(2,2,4)
plot(T, ErrorPsi, 'LineWidth', 2)
title('Error in $\psi$ (m)')
xlabel('time (sec)')
ylabel('$\psi_{d} - \psi(t)$','FontSize',12);
grid on 


Figure2 = figure(2);
set(Figure2,'units','normalized','outerposition',[0 0 1 1]);

figure(2)
plot3(X,Y,Z, 'b')
grid on

hold on 
plot3(DesiredX, DesiredY, DesiredZ, 'r')

pos = get(Figure2,'Position');
set(Figure2,'PaperPositionMode','Auto','PaperUnits','Inches','PaperSize',[pos(3),pos(4)]);
print(Figure2,'output2','-dpdf','-r0');
</code></pre>

<p>For the trajectory code</p>

<pre><code>clear all;
clc;

fileID = fopen('xyTrajectory.txt','w');

 angle = -pi;
radius = 3;
z = 0;
t = 0;

for i = 1:6000
    if ( z &lt; 2 ) 
        z = z + 0.1;
        x = 0; 
        y = 0;
    end
    if  ( z &gt;= 2 )
        angle = angle + 0.1;
        angle = wrapToPi(angle);
        x = radius * cos(angle);
        y = radius * sin(angle);
        z = 2;
    end

    X(i) = x;
    Y(i) = y;
    Z(i) = z;

    fprintf(fileID,'%f \t %f \t %f\n',x, y, z);
end

fclose(fileID);
plot3(X,Y,Z)
grid on
</code></pre>

			</div>
			<div class = "userinfosection"  id = "userinfo-7331" data-toggle = "popover">
				<p>user name : CroCo</p>
				<p> user reputation : 1040</p>
				<p class = "tagcontent" id = "usertaginfo-7331">{'control': 18, 'pid': 4, 'slam': 16, 'manipulator': 3, 'mobile-robot': 14, 'dynamics': 6, 'errors': 2, 'data-association': 1, 'kinematics': 3, 'matlab': 6, 'kalman-filter': 21, 'motion-planning': 3, 'None': 41, 'noise': 24, 'theory': 1, 'localization': 14, 'microcontroller': 5, 'mapping': 5, 'sensor-error': 1, 'sensors': 7, 'quadcopter': 8, 'ekf': 26, 'simulation': 1, 'motion': 3}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7331">Load Comments</button></br>
			<div id = "commentsection-7331" class = 'collapse'>
			<div id = "comment-10435" class = "comment">
				<p>$\phi, \theta$ are inside the intervall -90,90 deg. All the linearization's story is about the fact that the system doesn't go to much far from the linearization's point $\phi = 0 \theta = 0$. About the tracking problem: please try again with the following gains: P = 8, I = 0, D = 35 . I had a lot of problem due to the integrating term. And be sure that the timing is right. 'For example the point to be reached must be not be too far from the last point. Small steps.</p>
			</div>
			<div id = "comment-10436" class = "comment">
				<p>And if I were you I would still implement a non linear controller. 
I was really happy with the following one: http://www.math.ucsd.edu/~mleok/pdf/LeLeMc2010_quadrotor.pdf
You need just a trajectory with position, velocity, acceleration. Snap and jerk are not necessary. That was the first controller I implemented, that was working "out of the box". I was using C++. If you use Matlab, then you have it really fast</p>
			</div>
			<div id = "comment-10438" class = "comment">
				<p>@Dave, I will try your suggestions. Is there a way to share your code in C++? My ultimate goal is to reimplement the system in C++. Also, which ODE solver did you use? Regarding the nonlinear controller, I've tried my best but always `arcsin` yields undefined number based on the approach in this link http://www.researchgate.net/publication/267737119_TRAJECTORY_TRACKING_OF_A_QUADROTOR_UNMANNED_AERIAL_VEHICLE_%28UAV%29_VIA_ATTITUDE_AND_POSITION_CONTROL</p>
			</div>
			<div id = "comment-10439" class = "comment">
				<p>Cont., I have seen one of your posts that you are implementing backstepping controller based on the approach in the aforementioned paper, if you can help me to carry out the experiment, I will be more than happy. Thanks.</p>
			</div>
			<div id = "comment-10440" class = "comment">
				<p>About timing, could you please elaborate a bit since everything in my code in one for loop.</p>
			</div>
			<div id = "comment-10443" class = "comment">
				<p>I cannot publish or distribute my code since I developed it for my university and it is covered my license. Anyway, I printed out, read and at the time implemented the backstepping integrator in that paper. One word: forget it. It works not very good when you move the copter. The geometric controller is really the way to go. Or if you want to keep your backstepping integrator then look here: www.pp.bme.hu/ee/article/download/846/465</p>
			</div>
			<div id = "comment-10444" class = "comment">
				<p>For the asin function do please what I suggested above. I read your code and to me it is wrong. I m pretty sure, the way you get Ux and Uy is wrong. For more clarification try to get the following paper: [link](http://link.springer.com/referenceworkentry/10.1007/978-90-481-9707-1_71)
In there you can find the algorithm for the linearized system. I found it really helpful and it works.</p>
			</div>
			<div id = "comment-10445" class = "comment">
				<p>The problem is in the way you compute Ux, Uy. You wrote: $Ux = Kpx*( DesiredX(i) - x  ) + Kdx*( dDesiredX - dx ) + Kix*errorSumX;$ The terms  $Kpx, Kdx$ are too big. If Ux or Uy is too big you never will get a working output from the asin function, which domain $]-1,1[$ is.
Please read at least the paper written by Mellinger and Kumar</p>
			</div>
			<div id = "comment-10447" class = "comment">
				<p>@Dave, I'm tuning the PID manually. It is hard to come up with the correct values. My goal to command the quadrotor via joystick, therefore, I want the quadrotor to respond as fast as possible. I will read the paper. Thanks for being informative.</p>
			</div>
			<div id = "comment-10449" class = "comment">
				<p>I can strong suggest you to not implement a Linearized Controlled but a geometric one. There are only two main equations that need to be implemented. Furthermore you find the coefficients for the controller in the paper above (geometric controller on SE(3)). And...you never have problem with the yaw.</p>
			</div>
			<div id = "comment-10450" class = "comment">
				<p>Read this [document](http://repository.upenn.edu/cgi/viewcontent.cgi?article=1705&context=edissertations) too.</p>
			</div>
			</div>
				<textarea id = "speech-7331" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7331">
					<img id="start_img-7331" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7331">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-7341"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7341" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>In your code:</p>

<pre><code>for i = 1:6000
    if ( z &lt; 2 ) 
        z = z + 0.1;
        x = 0; 
        y = 0;
    end
    if  ( z &gt;= 2 )
        angle = angle + 0.1;
        angle = wrapToPi(angle);
        x = radius * cos(angle);
        y = radius * sin(angle);
        z = 2;
    end

    X(i) = x;
    Y(i) = y;
    Z(i) = z;

    fprintf(fileID,'%f \t %f \t %f\n',x, y, z);
end
</code></pre>

<p>there is a <em>jump</em> when the altitude reachs 2. The x coordinates goes in only one single step from the value 0 to the value stored in the variable <em>radius</em>.</p>

<p>Please arrange your code and let the generation of a much more soft trajectory in your code, in which you have more interpolated points between the position 0 and the radius. As a general rule, you must not have too much distance between two contiguous points. In the case of a quadrotor the fact that those points too far away are, leads to a very huge <em>pitch</em> and/or <em>roll</em> angle (the quadrotor tries to do its best to reach the next point in a very small time, so it accelerates suddenly by setting a very steep angle). This causes the asin function to not work properly, since the arguments are not anymore in the wanted function's domain ($]-1,1[$)</p>

<p>An example could be:</p>

<pre><code>for i = 1:6000
    if ( z &lt; 2 ) 
        z = z + 0.1;
        x = 0; 
        y = 0;
    end
    if  ( z &gt;= 2 )
        angle = angle + 0.1;
        angle = wrapToPi(angle);
        x = ( i / 6000 ) * radius * cos(angle);
        y = ( i / 6000 ) * radius * sin(angle);
        z = 2;
    end

    X(i) = x;
    Y(i) = y;
    Z(i) = z;

    fprintf(fileID,'%f \t %f \t %f\n',x, y, z);
end
</code></pre>

<p>regards</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7341" data-toggle = "popover">
				<p>user name : Dave</p>
				<p> user reputation : 294</p>
				<p class = "tagcontent" id = "usertaginfo-7341">{'control': 10, 'quadcopter': 11, 'None': 6, 'pid': 13, 'uav': 3, 'matlab': 0, 'mobile-robot': 0, 'ros': 2, 'movement': 0}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7341">Load Comments</button></br>
			<div id = "commentsection-7341" class = 'collapse'>
			<div id = "comment-11233" class = "comment">
				<p>this is useful, because it shows the error in the algorithm. it would be beneficial to also define some constraints for a "good, followable trajectory".</p>
			</div>
			</div>
				<textarea id = "speech-7341" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7341">
					<img id="start_img-7341" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7341">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>