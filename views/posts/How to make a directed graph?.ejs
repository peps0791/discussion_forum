<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How to make a directed graph?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-7438" class = "post">
			<h2>Question</h2>
			<div id="vote-7438" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 327</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How to make a directed graph?</h2>
<p>I'm working on an robot that would be able to navigate through a maze, avoid obstacles and identify some of the objects in it. I have a monochromatic bitmap of the maze, that is supposed to be used in the robot navigation. </p>

<p>Up till now, I have converted/read the bitmap image of the maze into a 2D array of bits. However, now I need guidance on how to use that array to plan the path for the robot. I would appreciate if you could share any links as well, because I am new to all this stuff (I am just a 1st year BS electrical engineering student) and would be happy to have a more detailed explanation.</p>

<p>If you need me to elaborate on anything kindly say so.</p>

<p>I would be grateful!</p>

<p>Here's the image of the maze.</p>

<p><img src="https://i.stack.imgur.com/ahtkQ.png" alt="Sample Maze Image"></p>

<p>This is just a sample image; the robot should be able to work with any maze (image) with similar dimensions. And you are welcome!</p>

<p>Thank you Chuck!</p>

<p><strong>UPDATE</strong>
Heres the code for sub2ind in c++. Kindly see if the output is correct:-</p>

<pre><code>ofstream subtoind;
subtoind.open("sub2ind.txt");

int sub2ind[96][64] = { 0 };
int ind2subROW[6144] = { 0 };
int ind2subCOL[6144] = { 0 };
int linearIndex=0;
j = 0;
z = 0;

for (j = 1; j &lt;= 64; j++)
    {
        for (z = 1; z &lt;= 96; z++)
            {
                    linearIndex = z + (j - 1) * 96;
                    sub2ind[z-1][j-1] = linearIndex-1;
                    //ind2subROW[linearIndex-1] = j-1;
                    //ind2subCOL[linearIndex-1] = z-1;
            }
    }
for (j = 0; j &lt; 96; j++)
{
    subtoind &lt;&lt; endl; //correction
    cout &lt;&lt; endl;

    for (z = 0; z &lt; 64; z++)
    {
        subtoind &lt;&lt; sub2ind[j][z] &lt;&lt; " ";
    }
}
subtoind.close();
</code></pre>

<p>Heres the Link to the output file.
<a href="https://drive.google.com/file/d/0BwUKS98DxycUSk5Fbnk1dDJnQ00/view?usp=sharing" rel="nofollow noreferrer">https://drive.google.com/file/d/0BwUKS98DxycUSk5Fbnk1dDJnQ00/view?usp=sharing</a></p>

			</div>
			<div class = "userinfosection"  id = "userinfo-7438" data-toggle = "popover">
				<p>user name : Muhammad Faique Shakeel</p>
				<p> user reputation : 30</p>
				<p class = "tagcontent" id = "usertaginfo-7438">{'None': 0, 'accelerometer': 1, 'localization': 4, 'arduino': 3, 'mapping': 3, 'planning': 1, 'imu': 1, 'mobile-robot': 4, 'motion-planning': 2, 'gyroscope': 1}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7438">Load Comments</button></br>
			<div id = "commentsection-7438" class = 'collapse'>
			<div id = "comment-10624" class = "comment">
				<p>Glad I could help. If my answer gave you the information you were looking for, please accept it. Thanks!</p>
			</div>
			<div id = "comment-10765" class = "comment">
				<p>Could your remove the output from the question body and maybe link to an output file instead? It's not going to format correctly as your matrix is 64 elements wide - it won't fit on a page. This means that your output just looks like a bunch of garbled numbers.</p>
			</div>
			<div id = "comment-10768" class = "comment">
				<p>I have provided the link to the output file.</p>
			</div>
			<div id = "comment-10769" class = "comment">
				<p>I added a line to your code. I think all you need is what I've added; an endline character to force a wrap at the end of each row. When you use this, open it in Notepad and go to Format -> Word wrap and ensure that word wrap is not selected. This should cause line breaks to happen only when you've specified (at the end of each row), so column 1 should be numbered 1-> 96, column 2 97->192, etc. I can't force an edit, but I think you should be able to see/accept it.</p>
			</div>
			<div id = "comment-10773" class = "comment">
				<p>@Chuck I have fixed the code. The output is correct now. Thanks</p>
			</div>
			<div id = "comment-10774" class = "comment">
				<p>@Chuck but the code to cycle through all of the points in your map and see which neighbors are adjacent isn't working. I have uploaded it in the question. Kindly see what mistake I am making.....</p>
			</div>
			<div id = "comment-10776" class = "comment">
				<p>can you split the connectivity map off into a separate question? This question/answer/comment system is getting huge with all the different aspects of the problem.</p>
			</div>
			<div id = "comment-10779" class = "comment">
				<p>@Chuck Sure. Here's the link to the new question.

[link](http://robotics.stackexchange.com/questions/7506/converting-a-2d-array-of-bits-to-a-connectivity-map-code-debugging)</p>
			</div>
			<div id = "comment-10789" class = "comment">
				<p>would you mind rolling this question back to the previous version? You had originally asked two questions - 1) How to plan a path, and 2) What's wrong with the sub2ind function. You edited the question to remove part 2) completely, then asked a third question which has since been split into its own question. As 3) has it's own question now (you linked above), I think it would be useful for future visitors to be able to see 2).</p>
			</div>
			<div id = "comment-10856" class = "comment">
				<p>@Chuck Done rolling back the question.</p>
			</div>
			</div>
				<textarea id = "speech-7438" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7438">
					<img id="start_img-7438" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7438">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-7439"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7439" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Use the bits in your array to create a connectivity map, assign distances between points (but it sounds like the map is uniformly sampled), then implement some version of <a href="http://en.wikipedia.org/wiki/Dijkstra&#39;s_algorithm" rel="nofollow">Dykstra's algoritm</a>.</p>

<p>The map you have can be parsed to see which non-wall tiles have neighbors. Use this, with a regular numbering scheme, to establish the connectivity graph. Each location on your map will have a distance associated with each neighbor. Dykstra uses the map and distances to find the shortest path from one point to another. One output is total distance, another output is a list of way points to get from A to B. The way points will be a list of every neighbor along the path, then all you have to do is get the car to move from one point to another. </p>

<p><strong>:EDIT:</strong></p>

<p>I started this as a comment, but it's too long and this is really more information on the answer, so I put it here. </p>

<p>Matlab has a neat trick where you can <a href="http://matlabtricks.com/post-23/tutorial-on-matrix-indexing-in-matlab" rel="nofollow">access values of a matrix with only one number</a> (called linear indexing) instead of the usual row/col argument. Your map will be an arbitrary size, like the 64x96 you mention. In it you have a 1 if the craft is allowed there (is a path) and a 0 of the craft is not allowed there (is a wall). </p>

<p>So you should be able to display your map matrix, which again is of arbitrary size, and see all of the paths and walls. </p>

<p>Now to create to connectivity map (the directed graph, or digraph), you want to cycle through all of the points in your map and see which neighbors are adjacent. Note that the linear indexing I linked to shows that Matlab indexes increasing from the top of col1 to the bottom of col1, then top of col2, etc. Linear indexing is great because it gives each location on your map <em>one number</em> with which to refer to that position. </p>

<p>Let's assume your map has N locations, where N is the length x width of your map (N = 64x96 = 6144 in your example). Now your digraph matrix should be NxN, because you're looking for a relationship between any one location on your map and any other location. Let's name your digraph "Digraph" for simplicity. </p>

<p>This setup means that you should be able to call digraph(a,b) and get a value of 1 if $a$ and $b$ are connected and 0 if they are not, where again $a$ and $b$ are linear indices that refer to one location on your arbitrary map. </p>

<p>So, for some implementable Matlab code (writing this on the fly on my phone, so please forgive any errors):</p>

<pre><code>Map = load(map.mat);
nRows = size(Map,1);
nCols = size(Map,2);
mapSize = size(Map);
N = numel(Map);
Digraph = zeros(N, N);

for i = 1:nRows
  for j = 1:nCols
    currentPos = sub2ind(mapSize,i,j);
    % left neighbor, if it exists
    if (j-1)&gt; 0
      destPos = sub2ind (mapSize,i,j-1);
      Digraph(currentPos,destPos) = Map(currentPos)*Map(destPos);
    end
    % right neighbor, if it exists
    if (j+1)&lt;=nCols
      destPos = sub2ind (mapSize,i,j+1);
      Digraph(currentPos,destPos) = Map(currentPos)*Map(destPos);
    end
    % top neighbor, if it exists
    if (i-1)&gt; 0
      destPos = sub2ind (mapSize,i-1,j);
      Digraph(currentPos,destPos) = Map(currentPos)*Map(destPos);
    end
    % bottom neighbor, if it exists
    if (i+1)&lt;=nRows
      destPos = sub2ind (mapSize,i+1,j);
      Digraph(currentPos,destPos) = Map(currentPos)*Map(destPos);
    end
  end
end
</code></pre>

<p>A couple things to note here -
1. This populates the digraph with zeros for every entry of Digraph(a,a). This is a matter of preference, but if you prefer you can set all of those entries to 1 (showing that $a$ is connected to itself) with the command 
Digraph = Digraph + eye(N);</p>

<ol start="2">
<li><p>If you use 1's and 0's in your map, then Map (currentPos)*Map (destPos) is either 1 if both entries are 1 or 0 if either entry is a 0. That is, it doesn't matter which is the wall, you equally can't move from wall to path or path to wall. </p></li>
<li><p>If you just use a regular map you should get a symmetric matrix. The nice thing about a Digraph is that it doesn't <em>need</em> to be symmetric. That is, you could have wormholes/tunnels/portals/chutes and ladders where one point on the map is connected to some remote point on the map.</p></li>
<li><p>Further, these tunnels can be bi-directional (two way), or they can be uni-durectional. That is, Digraph(a,b) could be 1 (path exists) where Digraph(b,a) is zero (path does not exist).</p></li>
<li><p>If there are such tunnels, you need to add them by hand after the script above runs. </p></li>
<li><p>Just like sub2ind gives you the linear index given conventional subscripts, ind2sub gives you subscripts given the linear index. </p></li>
<li><p>Finally, as a note, the Dykstra algorithm should give you a series of way points, but these will all be in linear index form. This is why I point out the ind2sub function above. </p></li>
</ol>

<p>Hope this helps. Please feel free to comment if you have any more questions. </p>

<p><strong>:EDIT EDIT:</strong>
Linear indexing is just a way to refer to a matrix location with one value. You can brew your own as follows (again in Matlab form not c++, though they are similar):</p>

<pre><code>nRows = size(matrixToBeIndexed,1);
nCols = size(matrixToBeIndexed,2);
N = numel(matrixToBeIndexed);
sub2ind = zeros(nRows,nCols);
ind2subROW = zeros(1,N);
ind2subCOL = zeros(1,N);

for i = 1:nCols
  for j = 1:nRows
    linearIndex = j + (i-1)*nRows;
    sub2ind(j,i) = linearIndex;
    ind2subROW(linearIndex) = j;
    ind2subCOL(linearIndex) = i;
  end
end
</code></pre>

<p>In this way you can pass subscripts to sub2ind, now a matrix instead of a function, and get the linear index, and you can pass a linear index to the pair of ind2sub functions to get subscripts. How you want to implement ind2sub is up to you; I would personally use an Nx2 matrix but I wrote it as two separate vectors for clarity. </p>

<p>Hope this helps! </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7439" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-7439">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7439">Load Comments</button></br>
			<div id = "commentsection-7439" class = 'collapse'>
			<div id = "comment-10685" class = "comment">
				<p>How can I make a connectivity map. Any link you can share, perhaps??</p>
			</div>
			<div id = "comment-10687" class = "comment">
				<p>Sure! [Here's a link](https://www.cs.princeton.edu/~rs/AlgsDS07/13DirectedGraphs.pdf) to how to make the connectivity map (a directed graph), and then [here's a link](https://www.cs.princeton.edu/~rs/AlgsDS07/15ShortestPaths.pdf) that actually gives some sample code to implement the Dykstra's algorithm.</p>
			</div>
			<div id = "comment-10690" class = "comment">
				<p>As a side comment, I had to do this problem once before for a robotics class. A neat trick is that most languages will evaluate if X to be false if X is zero and true if X is *anything other than 0*. This means that you can replace the directed graph (1's show connections between adjacent locations) with a *weighted* directed graph, where the values in the matrix represent the "cost" of getting from one point to the adjacent point. You can still use "if X(1,2)" to see if 1 and 2 are adjacent, then use the value of X(1,2) as the weight/cost in the algorithm.</p>
			</div>
			<div id = "comment-10735" class = "comment">
				<p>Thank you! I need some more help from you. Sorry to bother you again again. Chuck how will I know the number of vertices of the connectivity map if my 2D array of bits is of the size 64x96? And will start making the adjacency matrix from the starting point of the maze??</p>
			</div>
			<div id = "comment-10738" class = "comment">
				<p>@Muhammad - see the edit in my answer. Too much content to put in a comment here.</p>
			</div>
			<div id = "comment-10741" class = "comment">
				<p>Thanks a lot! However, Chuck I need to implement this in c++. I have understood your code,  and thank you very much for it, but I can't figure out how to implement the linear indexing in c++. Should I convert the 2D array to 1D or what? And once again thanks, sir. It really means a lot.</p>
			</div>
			<div id = "comment-10747" class = "comment">
				<p>@Muhammad - more content added! I haven't worked in c++ in 15 years so I can't comment as to whether there is some existing functional duplicate of the ind2sub class of functions, but making your own is pretty easy.</p>
			</div>
			<div id = "comment-10750" class = "comment">
				<p>Glad to help! I think the only thing worse than being stuck is not knowing where to start.</p>
			</div>
			<div id = "comment-10760" class = "comment">
				<p>Will an arduino due be able to do all of this. I mean an array of 6144x6144 for the digraph is too big. 

Secondly, can you recheck my sub2ind array consists of shuffled numbers  from 0 to 6143. I am attaching the output file (sub2ind.txt) and my code. Kindly check it in the question update.</p>
			</div>
			<div id = "comment-10766" class = "comment">
				<p>@MuhammadFaiqueShakeel - I don't know how you would provide start/stop locations to the arduino. My suggestion would be to run the script on a computer, generate the waypoints, then upload those to the arduino. I can't make anything from your output that you've pasted into the question as the formatting will always be wrong; a 64 element wide array will not fit on the screen. I also didn't see any attached file, but that could be because your output has bloated the question.</p>
			</div>
			<div id = "comment-10767" class = "comment">
				<p>Okay. I have attached the link to the output file...</p>
			</div>
			</div>
				<textarea id = "speech-7439" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7439">
					<img id="start_img-7439" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7439">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>