<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>What kind of motor control can I implement if I cannot use an Encoder?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-2837" class = "post">
			<h2>Question</h2>
			<div id="vote-2837" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 205</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>What kind of motor control can I implement if I cannot use an Encoder?</h2>
<p>Every time I see a PID control for a motor, it involves an Encoder, so the algorithm knows the real position of the motor or wheel.
But with <a href="http://www.ebay.es/itm/331143350493?ssPageName=STRK%3aMEWNX%3aIT&amp;_trksid=p3984.m1497.l2649" rel="nofollow">the robot I have</a>, I cannot use an encoder. I only have ONE optocoupler per wheel which can count how many degrees the wheel has moved. I can use it to increment a counter, but the counter ALWAYS increment (if the wheel moves forward or if the wheel moves backward).</p>

<p>The first moment I saw it as an inconvenient was when I studied the <a href="http://brettbeauregard.com/blog/2012/01/arduino-pid-autotune-library/" rel="nofollow">Arduino PID Autotune Library</a>. In the first figure, I would not see decrements on the INPUT. </p>

<p>My objective is to move a little two-wheels robot small segments driven by simple trajectories separated over time by a complete stop (straight 10 cm, stop, move right 90 degrees, stop, straight until detect obstacle...)</p>

<p>Could you suggest me some kind of ideas?
The first idea I have is to transform the PID position control to a speed control (which is more convenient for the feedback loop I have) and keep a counter of the traveled distance to inform the speed control when to stop.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-2837" data-toggle = "popover">
				<p>user name : Chirrin Dul</p>
				<p> user reputation : 16</p>
				<p class = "tagcontent" id = "usertaginfo-2837">{'control': 3, 'None': 0, 'pid': 3, 'motor': 3, 'arduino': 3}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-2837">Load Comments</button></br>
			<div id = "commentsection-2837" class = 'collapse'>
			<div id = "comment-5241" class = "comment">
				<p>Technically that's a photo-interrupter.  You have the right idea, you can do closed loop control with this setup (both velocity and position).  The only area of "fuzzyness" is around very low speeds which you'll need some way of dealing with (e.g. cube's answer).</p>
			</div>
			<div id = "comment-5243" class = "comment">
				<p>Yes Guy. I have seen some people calling it a simple encoder or encoder in contrast to the better "quadrature encoder" which is the one that provides exact position information (with two optocouplers). I think I will have an error when I wanted to stop and the motor had an inertia, but it's the best I can achieve. Thanks.</p>
			</div>
			</div>
				<textarea id = "speech-2837" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2837">
					<img id="start_img-2837" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2837">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-2838"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2838" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I'm no guru (building a robot, learning as I go :) ), but I was facing similar problem (not with arduino, though).</p>

<p>For the one encoder only part: I'm counting ticks using a single reflective sensor. I assumed that motor + gearing are strong enough that they will never turn when I'm not sending commands. Then I keep track of the direction of rotation and when there is a request to change it, I force several milliseconds wait with the motor stopped to ensure that it's not turning in a wrong direction.
This adds some complications and state keeping to the code, but seems to work OK.</p>

<p>For the PID: I'm putting in speed difference (encoder ticks / timer interval) and using the output for PWM (actually I'm feeding it to a RC car ESC). This works really nice, it's fairly stable even when the motor has almost no torque during start up. </p>

<p>If some code will help you, here is my implementation for AVR:
<a href="https://github.com/bluecube/robomower2/blob/master/src_avr/drive/main.c" rel="nofollow">https://github.com/bluecube/robomower2/blob/master/src_avr/drive/main.c</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2838" data-toggle = "popover">
				<p>user name : cube</p>
				<p> user reputation : 567</p>
				<p class = "tagcontent" id = "usertaginfo-2838">{'control': 2, 'None': 31, 'wifi': 2, 'kalman-filter': 3, 'calibration': 3, 'geometry': 0, 'localization': 2, 'c': 1, 'avr': 1, 'robotic-arm': 0, 'brushless-motor': 2, 'differential-drive': 2, 'esc': 1, 'motor': 2, 'mobile-robot': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-2838">Load Comments</button></br>
			<div id = "commentsection-2838" class = 'collapse'>
			<div id = "comment-5242" class = "comment">
				<p>Thank you very much @cube. Not only you have confirmed the idea I was considering is feasible, but you also has been so kind to share your work. I will see it and get ideas for my vehicle.</p>
			</div>
			</div>
				<textarea id = "speech-2838" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2838">
					<img id="start_img-2838" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2838">Comment</button>
			<br><div id = "ans-5275"  class = "post">
				<h2>Answer</h2>
			<div id="vote-5275" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I have the same kind of system.  It is a wheel encoder with just one sensor.  I get just 20 counts per wheel revolution.   It is easy to use.  The software that sets the motor direction also sets a global variable to either +1 or -1.  Then when the interrupt handler gets the signal "tick" it ADDS the global variable to the current count.</p>

<p>In short with one encoder you have to just remember the direction you told the wheel to go.  This only works if the motor is strong or if there is a lot of friction in the system.  It fails if there can be uncommanded wheel motion.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-5275" data-toggle = "popover">
				<p>user name : user3150208</p>
				<p> user reputation : 431</p>
				<p class = "tagcontent" id = "usertaginfo-5275">{'None': 27}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-5275">Load Comments</button></br>
			<div id = "commentsection-5275" class = 'collapse'>
			<div id = "comment-8088" class = "comment">
				<p>Thank you very much, user3150208.
I had a baby and I don't have enough time. I have done an speed control and there is a bit difference between the two wheels and sometimes peaks on the speed. For that reason, I am going to greed to the PID controller the average of the last 4 values of the speed.
The drawback is that I have to adjust one more time the P, I and D values, as the response time is now different.
I had to make some modifications on the Arduino code, for I need two counters for the two wheels. The third counter is for the PID timing.</p>
			</div>
			</div>
				<textarea id = "speech-5275" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5275">
					<img id="start_img-5275" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5275">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>