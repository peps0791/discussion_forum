<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>What reward function results in optimal learning?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1266" class = "post">
			<h2>Question</h2>
			<div id="vote-1266" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">12</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 654</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>What reward function results in optimal learning?</h2>
<p>Let's think of the following situations:</p>

<ul>
<li>You are teaching a robot to play ping pong</li>
<li>You are teaching a program to calculate square root</li>
<li>You are teaching math to a kid in school</li>
</ul>

<p>These situations (i.e. supervised learning), and many others have one thing (among others) in common: the learner gets a reward based on its performance.</p>

<p>My question is, what should the reward function look like? Is there a "best" answer, or does it depend on the situation? If it depends on the situation, how does one determine which reward function to pick?</p>

<p>For example, take the following three reward functions:</p>

<p><img src="https://i.stack.imgur.com/UvrHs.png" alt="enter image description here"></p>

<ul>
<li>Function <code>A</code> says:

<ul>
<li>below a certain point, bad or worse are the same: you get nothing</li>
<li>there is a clear difference between almost good and perfect</li>
</ul></li>
<li>Function <code>B</code> says:

<ul>
<li>you get reward linearly proportional to your performance</li>
</ul></li>
<li>Function <code>C</code> says:

<ul>
<li>if your performance is bad, it's ok, you did your best: you still get some reward</li>
<li>there is not much difference between perfect and almost good</li>
</ul></li>
</ul>

<p>Intuitively, I'd think <code>A</code> would make the robot very focused and learn the exact pattern, but become stupid when dealing with similar patterns, while <code>C</code> would make it more adaptable to change at the cost of losing perfection.</p>

<p>One might also think of more complex functions, just to show but few:</p>

<p><img src="https://i.stack.imgur.com/eCS4R.png" alt="enter image description here"></p>

<p>So, how does one know which function to pick? Is it known which behavior would emerge from (at least) the basic <code>A</code>, <code>B</code> and <code>C</code> functions?</p>

<hr>

<p>A side question is would this be fundamentally different for robots and human kids?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1266" data-toggle = "popover">
				<p>user name : Shahbaz</p>
				<p> user reputation : 2615</p>
				<p class = "tagcontent" id = "usertaginfo-1266">{'None': 193, 'usb': 12, 'distributed-systems': 7, 'microcontroller': 1, 'embedded-systems': 7, 'servomotor': 1, 'platform': 18, 'can': 1, 'machine-learning': 12, 'real-time': 18, 'mobile-robot': 1, 'rs232': 12, 'software': 20}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1266">Load Comments</button></br>
			<div id = "commentsection-1266" class = 'collapse'>
			<div id = "comment-2836" class = "comment">
				<p>I doubt that a robot would become stupid by doing the same or similar thing over and over, unless being cybernetic.</p>
			</div>
			<div id = "comment-2837" class = "comment">
				<p>@ott, that's not what I meant. What I meant was with a reward function similar to `A`, the robot could become extremely good at the exact task, but terrible at tasks that are similar but slightly different. That's just my guess though.</p>
			</div>
			<div id = "comment-2838" class = "comment">
				<p>Ah, ok, I see. You're thinking of tennis e.g.</p>
			</div>
			<div id = "comment-2840" class = "comment">
				<p>Perhaps the theory behind this could be complicated, but an answer that says "I have thought different tasks to many robots and often function `X` gave me the best result", even if not perfectly correct, would give a great rule of thumb.</p>
			</div>
			</div>
				<textarea id = "speech-1266" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1266">
					<img id="start_img-1266" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1266">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1267"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1267" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>These issues are addressed, to some extent, by the study of <a href="http://en.wikipedia.org/wiki/Utility" rel="nofollow">utility functions</a> in economics.  A utility function expresses effective or perceived values of one thing in terms of another.  (While the curves shown in the question are reward functions and express how much reward will be tendered for various performance levels, similar-looking utility functions could express how much performance results from various reward levels.)</p>

<p>What reward function will work best depends on equilibria between the payer and the performer.  The wikipedia <em><a href="http://en.wikipedia.org/wiki/Contract_curve" rel="nofollow">contract curve</a></em> article illustrates with <a href="http://en.wikipedia.org/wiki/Edgeworth_box" rel="nofollow">Edgeworth boxes</a> how to find <a href="http://en.wikipedia.org/wiki/Pareto_efficient" rel="nofollow">Pareto efficient</a> allocations.  The <a href="http://en.wikipedia.org/wiki/Von_Neumann%E2%80%93Morgenstern_utility_theorem" rel="nofollow">Von Neumann Morgenstern utility theorem</a> delineates conditions that ensure that an agent is VNM-rational and can be characterized as having a utility function.  The   Behavioral predictions resulting from HARA utility  section of the <a href="http://en.wikipedia.org/wiki/Hyperbolic_absolute_risk_aversion#Behavioral_predictions_resulting_from_HARA_utility" rel="nofollow">Hyperbolic absolute risk aversion</a> article in wikipedia describes behavioral consequences of certain utility functions.</p>

<p>Summary: These topics have been the subject of tremendous amounts of study in economics and microeconomics.  Unfortunately, extracting a brief and useful summary that answers your question might also call for a tremendous amount of work, or the attention of someone rather more expert than me.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1267" data-toggle = "popover">
				<p>user name : James Waldby - jwpat7</p>
				<p> user reputation : 1856</p>
				<p class = "tagcontent" id = "usertaginfo-1267">{'None': 134}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1267">Load Comments</button></br>
			<div id = "commentsection-1267" class = 'collapse'>
			<div id = "comment-2839" class = "comment">
				<p>This is quite complicated, I'm not sure if I understand it. But are you sure utility function of economics applies to robotics too? In supervised learning (of a robot), the payer doesn't actually lose anything. The reward would often be just a number telling the robot how well they did the task.</p>
			</div>
			</div>
				<textarea id = "speech-1267" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1267">
					<img id="start_img-1267" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1267">Comment</button>
			<br><div id = "ans-1268"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1268" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Any form of supervised learning is a directed search in policy space. You try to find the policy -- so which action to take -- which provides the maximum reward expectation. In your question you give reward as a function of performance. As long as this function is monotonic any method which converges will ultimately end up giving you maximum performance (too stay with your terminology).</p>

<p>How fast the method converges is another matter, and may well depend on the curve. But I think this will differ from method to method.</p>

<p>An entirely different problem is that for more complex scenarios performance is not a simple scalar, and defining it can be pretty difficult. What's the reward function for being good at math?</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1268" data-toggle = "popover">
				<p>user name : Jakob</p>
				<p> user reputation : 2519</p>
				<p class = "tagcontent" id = "usertaginfo-1268">{'ransac': 3, 'None': 210, 'computer-vision': 1, 'cameras': 1, 'c++': 3, 'slam': 12, 'rock': 1, 'i2c': 3, 'servos': 3, 'software': 1}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1268">Load Comments</button></br>
			<div id = "commentsection-1268" class = 'collapse'>
			<div id = "comment-2844" class = "comment">
				<p>_How fast the method converges is another matter, and may well depend on the curve._, well of course. I was trying to understand _how_ the curve affects learning (and not _if_ it does, because I already know that it does).</p>
			</div>
			</div>
				<textarea id = "speech-1268" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1268">
					<img id="start_img-1268" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1268">Comment</button>
			<br><div id = "ans-1269"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1269" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">6</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>"Optimal learning" is a very vague term, and it is completely dependent on the specific problem you're working on.  The term you're looking for is "<a href="http://en.wikipedia.org/wiki/Overfitting" rel="nofollow noreferrer">overfitting</a>":
<img src="https://i.stack.imgur.com/702pw.gif" alt="enter image description here"></p>

<p>(The green line is the error in predicting the result on the training data, the purple line the quality of the model, and the red line is the error of the learned model being used "in production")</p>

<p>In other words: when it comes to adapting your learned behavior to similar problmes, how you rewarded your system is less important than <em>how many times</em> you rewarded it -- you want to reduce errors in the training data, but not keep it in training so long that it loses the ability to work on similar models.</p>

<p>One method of addressing this problem is to cut your training data in half: use one half to learn on and the other half to to validate the training.  It helps you identify when you begin to over-fit.</p>

<h2>Non-linear reward functions</h2>

<p>Most supervised learning algorithms expect that application of the reward function will produce a convex output.  In other words, having local minima in that curve will prevent your system from converging to the proper behavior.  <a href="http://www.youtube.com/watch?v=UMthAqRNqMw" rel="nofollow noreferrer">This video shows a bit of the math behind cost/reward functions</a>.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1269" data-toggle = "popover">
				<p>user name : Ian</p>
				<p> user reputation : 9640</p>
				<p class = "tagcontent" id = "usertaginfo-1269">{'planning': 10, 'None': 809, 'power': 1, 'algorithm': 10, 'battery': 1, 'slam': 7, 'coverage': 10, 'mobile-robot': 9, 'sensors': 9}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1269" class = 'collapse'>
			</div>
				<textarea id = "speech-1269" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1269">
					<img id="start_img-1269" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1269">Comment</button>
			<br><div id = "ans-1371"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1371" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Short answer: the strongest reinforcement effect comes from delivering a valuable reward on an intermittent (random) schedule.</p>

<p>Longer version: One aspect of your question is about <a href="http://en.wikipedia.org/wiki/Operant_conditioning" rel="nofollow noreferrer">operant conditioning</a>, at least as it applies to teaching maths to a complex organism. Applying this to machine learning is known as <a href="http://en.wikipedia.org/wiki/Reinforcement_learning" rel="nofollow noreferrer">reinforcement learning</a>.</p>

<p>Economics (as per <a href="https://robotics.stackexchange.com/a/1267/37">jwpat7's answer</a>) only addresses one part the story of reinforcement. Utility function tells you what reward has the strongest reinforcement effect (biggest impact on behaviour) in a given context. Is it praise? chocolate? cocaine? direct electrical stimulation to certain areas of the brain? Mostly my answer is about effect of context, assuming a given reward utility.</p>

<p>For complex organisms/behaviours, reward scheduling is at least as important as reward utility:</p>

<ul>
<li>A "fixed-interval reward schedule" is the least effective way to modify behaviour with a given quantity of reward (I'll give you \$10 per week if you keep your bedroom tidy). Think dole bludger.</li>
<li>Fixed ratio reward schedules (I'll give you \$10 every seven days you have a tidy bedroom) are more effective than fixed intervals, but they have a kind of effectiveness ceiling (subject will tidy their room seven times when they are hungry for \$10, but not otherwise). Think mercenary.</li>
<li>The most influential way to deliver a given reward with a "variable interval reinforcement schedule" (e.g. every day you tidy your bedroom you have a 1/7 chance of getting $10). Think poker machine.</li>
</ul>

<p>If you are a learning supervisor with a fixed reward budget, for a given learning situation, there will be an optimum balance of reward size (utility) and frequency. It's probably not a very small slice of reward at a very high frequency, nor a very large chunk of reward delivered very rarely. It might even be a random size reward at a random schedule - the optimum is usually determined experimentally for a particular situation.</p>

<p>Finally, the "optimum" schedule (random frequency, random quantity {p(reward),p(value)}) will probably vary at different stages in the learning process. For example, a new pupil might be subject to "primacy" effect (welcome! have a jelly bean) that quickly becomes fixed-interval reward if you repeat it. There might be a "recency" effect that gets more reinforcement value from a reward delivered on the very last trial ("finishing on a high note"). In between, there may be an accumulative "faith effect" where as a learner becomes more experienced, the optimum might shift toward lower probability, higher utility over time. Again, more stuff to determine empirically in your situation.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1371" data-toggle = "popover">
				<p>user name : Chris Gough</p>
				<p> user reputation : 178</p>
				<p class = "tagcontent" id = "usertaginfo-1371">{'None': 5, 'uav': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1371">Load Comments</button></br>
			<div id = "commentsection-1371" class = 'collapse'>
			<div id = "comment-2971" class = "comment">
				<p>Very interesting answer. It makes a lot of sense.</p>
			</div>
			<div id = "comment-4094" class = "comment">
				<p>I'm reading this answer again, and I'd again want to say how great this answer is! In fact, let me give you some bounty!</p>
			</div>
			</div>
				<textarea id = "speech-1371" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1371">
					<img id="start_img-1371" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1371">Comment</button>
			<br><div id = "ans-1372"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1372" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The optimal reward function depends on the learning objective, i.e. what is to be learned. For simple problems it may be possible to find a closed form representation for the optimal reward function. In fact for really simple problems I'm confident it is possible though I know of no formal methods for doing so (I suspect utility theory would address this question). For more complex problems I would argue that it is not possible to find a closed form solution.</p>

<p>Instead of seeking the optimal function we could look to an expert for a good reward function. One approach to doing so is a technique called Inverse Reinforcement Learning (IRL). It formulates a learning problem as a reinforcement learning problem where the reward function is unknown and the objective of the learning process. The paper Apprenticeship Learning via Inverse Reinforcement Learning by <a href="http://www.cs.berkeley.edu/~pabbeel/" rel="nofollow">Pieter Abbeel</a> and <a href="http://ai.stanford.edu/~ang/" rel="nofollow">Andrew Ng</a> is a good place to start learning about IRL.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1372" data-toggle = "popover">
				<p>user name : DaemonMaker</p>
				<p> user reputation : 3321</p>
				<p class = "tagcontent" id = "usertaginfo-1372">{'control': 4, 'stereo-vision': 15, 'None': 271, 'computer-vision': 15, 'battery': 7, 'cameras': 15, 'research': 4, 'troubleshooting': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1372" class = 'collapse'>
			</div>
				<textarea id = "speech-1372" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1372">
					<img id="start_img-1372" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1372">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>