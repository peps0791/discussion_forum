<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Collaborative Behavior: Implementing a Bucket Brigade With Robot Arms
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-497" class = "post">
			<h2>Question</h2>
			<div id="vote-497" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 144</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Collaborative Behavior: Implementing a Bucket Brigade With Robot Arms</h2>
<p>I was wondering whether something like this is possible: A block of ice(say) needs to be transferred piece by piece from a source to a destination with the help of 5 robots standing in a straight line between the source and destination. The first robot picks up a piece of the block from the source and checks if the next robot in line is busy. If yes, it waits for it to complete its task and proceeds, otherwise it transfers the piece and goes back to collect another piece. Please help me on implementing this if it is possible, as I am thinking to make it a project topic.</p>

<p>to clear out the confusions, here's a smaller prototype of the project i'm thinking,</p>

<p>i have two cars, one wired, another wireless. the wired car is the master here, the wireless, the slave. through a remote, i send a command to the wired car to instead command the wireless car to move forward. the wired car will then check if the wireless slave is already executing some previously given command or no, and accordingly send the command.</p>

<p>conversely, the master may send the command as soon as it receives it, it's on the slave now to complete the task it's doing, and then execute the command it just received.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-497" data-toggle = "popover">
				<p>user name : Ayush Khemka</p>
				<p> user reputation : 106</p>
				<p class = "tagcontent" id = "usertaginfo-497">{'multi-agent': 1, 'mobile-robot': 1, 'None': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-497">Load Comments</button></br>
			<div id = "commentsection-497" class = 'collapse'>
			<div id = "comment-582" class = "comment">
				<p>Isn't this a rather broad question? Designing robots has at least 2 very different aspects: designing the hardware (choosing sensors, motors, microcontrollers, designing actuators etc.) and designing the software, which allows the hardware to behave the way you want. Could you perhaps clarify which aspect of the implementation you need help with?</p>
			</div>
			<div id = "comment-583" class = "comment">
				<p>@DanielEberts: In fact, even if the question was about the hardware aspect, ti would still be quite broad. It needs to be narrowed down a _lot_ :)</p>
			</div>
			<div id = "comment-600" class = "comment">
				<p>This is a problem of threaded programming that is going to get played out in the real world.  Are there things beyond a producer-consumer thread model that you'd need to learn about?</p>
			</div>
			<div id = "comment-621" class = "comment">
				<p>Also, can you explain the constraints a little bit more?  It sounds like you're saying that all 5 robots can pick from the source at once, but only one robot at a time can drop at the destination.  Is that accurate?</p>
			</div>
			<div id = "comment-629" class = "comment">
				<p>@lan no, i mean that the robots are placed in such a way that one robot picks from the source, and the others are responsible for transporting it, without actually moving.</p>
			</div>
			<div id = "comment-642" class = "comment">
				<p>Ah, I believe the term you're looking for would be "bucket brigade".</p>
			</div>
			<div id = "comment-668" class = "comment">
				<p>@JoeBaker yes, perfect! exactly what i'm looking for, but a robotic approach.</p>
			</div>
			</div>
				<textarea id = "speech-497" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-497">
					<img id="start_img-497" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-497">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-505"  class = "post">
				<h2>Answer</h2>
			<div id="vote-505" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The generic answer is yes, such a project could be implemented using existing hardware and frameworks (ROS, MRDS, something else, or none).  The collaboration part is pretty simple in this scenario, it's a straightforward handshake between producer &amp; consumer.  </p>

<p>The hard part would be first defining each of the jobs in detail, procuring hardware that meets the requirements, and actually getting each robot to do his assigned task reliably.  As others have pointed out, you'll need to be a lot more specific.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-505" data-toggle = "popover">
				<p>user name : Ima Dirty Troll</p>
				<p> user reputation : 234</p>
				<p class = "tagcontent" id = "usertaginfo-505">{'untagged': 2, 'None': 10}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-505" class = 'collapse'>
			</div>
				<textarea id = "speech-505" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-505">
					<img id="start_img-505" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-505">Comment</button>
			<br><div id = "ans-509"  class = "post">
				<h2>Answer</h2>
			<div id="vote-509" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>A standard way to model that kind of discrete-event behavior is through <a href="http://en.wikipedia.org/wiki/Petri_net" rel="nofollow">Petri Nets</a> or a <a href="http://users.abo.fi/jboling/cdes/op_on_aut.pdf" rel="nofollow">Parallel Composition</a> of <a href="http://en.wikipedia.org/wiki/Finite_state_machine" rel="nofollow">Automata</a>. </p>

<p>An interesting start might be to simply create the model and see if it works in <a href="http://www.informatik.uni-hamburg.de/TGI/PetriNets/tools/quick.html" rel="nofollow">simulation</a> first. That will help you solve the high-level logic of your problem. After that is dealt with, you can begin to think about which robot you want to use (or whether you want to build your own) and how you'll implement that high-level logic in your programming language of choice.</p>

<p>The good thing about using these models is that you have means to systematically evaluate whether you have solved your problem or not. Ad-hoc programming might work if the problem is simple enough, but as soon as you incorporate more difficult situations it becomes too error-prone IMO.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-509" data-toggle = "popover">
				<p>user name : georgebrindeiro</p>
				<p> user reputation : 1266</p>
				<p class = "tagcontent" id = "usertaginfo-509">{'computer-vision': 9, 'None': 98, 'slam': 9}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-509" class = 'collapse'>
			</div>
				<textarea id = "speech-509" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-509">
					<img id="start_img-509" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-509">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>