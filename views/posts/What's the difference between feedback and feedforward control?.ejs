<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>What's the difference between feedback and feedforward control?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8480" class = "post">
			<h2>Question</h2>
			<div id="vote-8480" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 24839</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>What's the difference between feedback and feedforward control?</h2>
<p>I'm reading from Astrom &amp; Murray (2008)'s <em>Feedback Systems: An introduction for scientists and engineers</em> about the difference between feedback and feedforward.  The book states:</p>

<blockquote>
  <p>Feedback is reactive: there must be an error before corrective actions are taken.  However, in some circumstances, it is possible to measure a disturbance before the disturbance has influenced the system.  The effect of the disturbance is thus reduced by measuring it and generating a control signal that counteracts it.  This way of controlling a system is called <em>feedforward</em>.</p>
</blockquote>

<p>The passage makes it seem that feedback is reactive, while feedforward is not.  I argue that because feedforward control still uses sensor values to produce a control signal, it is still <em>reactive</em> to the conditions that the system finds itself in.  So, how can feedforward control possibly be any different from feedback if both are forms of reactive control?  What really separates the two from each other?</p>

<p>A illustrative example of the difference between the two would be very helpful.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8480" data-toggle = "popover">
				<p>user name : Paul</p>
				<p> user reputation : 704</p>
				<p class = "tagcontent" id = "usertaginfo-8480">{'control': 6, 'occupancygrid': 1, 'pid': 3, 'slam': 14, 'design': 0, 'motor': 5, 'dynamics': 11, 'probability': 1, 'accelerometer': 4, 'mechanism': 3, 'differential-drive': 1, 'kalman-filter': 6, 'actuator': 1, 'reference-request': 8, 'None': 30, 'inverse-kinematics': 3, 'mapping': 1, 'sensors': 10, 'quadcopter': 4, 'motion': 3, 'particle-filter': 4, 'sonar': 4, 'balance': 12, 'automatic': 2}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8480" class = 'collapse'>
			</div>
				<textarea id = "speech-8480" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8480">
					<img id="start_img-8480" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8480">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8481"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8481" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>It is arguable what is called reactive and what is not... however what is measured by sensors and what information the controller possesses is not arguable.</p>

<p>In feedback control the systems outputs are measured and if they do not match the desired output (reference) the controlled parameter is recalculated. If the input does not change, these differences usually come from disturbances. The controller has a feedback from the systems output which quantifies "how far" it is from the desired state, regardless of what causes this difference.</p>

<p>In feedforward control the disturbances are measured and the controlled parameter is calculated based on some mathematical (or logical) model. There is no feedback to see if the system is really in the desired state or "how far" it is form the desired state. If disturbances not measured cause the systems outputs to differ from the desired one, the controller will not react.</p>

<p>So to formulate it with "reactive" I would say that feedback control is reactive since it reacts to changes in the systems output while feedforward is proactive since it possibly acts before the systems output change. The important factor in control theory is the controlled system output, that it probably why reactive is defined form the point of view of the change in the systems output. </p>

<p>Feedforward also reacts to something, but this something is not the systems output so from the systems output point of view it is not reactive. In feedforward control the systems output can change without any reaction from the controller while in feedback control any change in the system output will provoke a reaction of the controller. Since the important aspect is the systems output and the feedforward controller does not react to changes in the output it can be considered a non-reactive control method.</p>

<p>Illustration from <a href="https://en.wikipedia.org/wiki/Feed_forward_(control)" rel="nofollow noreferrer">Wikipedia</a>, (a) open loop, (b) feedforward, (c) feedback</p>

<p><a href="https://i.stack.imgur.com/qjTGV.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/qjTGV.png" alt="enter image description here"></a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8481" data-toggle = "popover">
				<p>user name : 50k4</p>
				<p> user reputation : 2800</p>
				<p class = "tagcontent" id = "usertaginfo-8481">{'geometry': 0, 'None': 193, 'kinematics': 0, 'robotic-arm': 0}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8481">Load Comments</button></br>
			<div id = "commentsection-8481" class = 'collapse'>
			<div id = "comment-13750" class = "comment">
				<p>So, feedforward control assumes that disturbances can be detected independently of their effects on the system, while feedback control assumes that disturbances can only be detected after they have affected the system?</p>
			</div>
			<div id = "comment-13751" class = "comment">
				<p>More like feedforward control is used when the (most important) disturbances can be detected and a model can be build up with the desired precision, and feedback control is used when not. Combinations of feedback and feedforward are also practiced. The feedforward value "helps" the feedback controller to react better.</p>
			</div>
			</div>
				<textarea id = "speech-8481" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8481">
					<img id="start_img-8481" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8481">Comment</button>
			<br><div id = "ans-8495"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8495" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>In the simple models and block diagrams of control systems you will find in basic textbooks, they will show you a single diagram with a feedback section which uses measurements of the target parameter and a feedforward section which does not use the target paremeter.</p>

<p><img src="https://i.stack.imgur.com/aNnWC.png"></p>

<p>Be ready to relax that definition when you get to the real world.</p>

<p>Treat it as terminology that helps you talk about a subset of a control system rather than a mathematical absolute. </p>

<p>In simple control, the feedback portion of your control system is that which uses measurements of the parameter you are trying to control in its calculations.</p>

<p>But don't forget that we use the term for systems in general. A microphone pointed at a speaker causes the system to evolve in a predictable way and we say that feedback is causing the loud noise. </p>

<p>So when we talk about feedback we are talking about how some characteristic of a system influences the evolution of that system.</p>

<p>When we talk about the feedback portion of a specific control system, we are focusing the conversation on the target parameter we are measuring and trying to control. </p>

<p>Feedforward control is unrelated. At least that's the best way to start discussing it. In feedforward control, we are creating some model of the system and using that change the target parameter to what we want. If we have a perfect model of the system then we know exactly what inputs to the actuation we need to change the target parameter. There's no need to measure the target parameter. So in simple theory, feedforward control is control that does not need to use measurements of the target parameter. </p>

<p>But then things get messy. Creating good models is hard and we often use some sort of learning or system identification to create the model and update the model as things change. This will use measurements of the target parameter. Is it feedback? Yes. Do we call this feedback control? No.</p>

<p>Additionaly disturbances are always difficult to predict and if we can measure some or all of them we can improve the model for feedforward control. Are these measurements feedback? Yes. Do we call this feedback control? No.</p>

<p>Hopefully that gives you a little more understanding. I don't know Astrom &amp; Murray's book but I can see on google that quote comes from the introduction chapter. I expect that they will give you a more nuanced understanding of feedback and feedforward later.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8495" data-toggle = "popover">
				<p>user name : hauptmech</p>
				<p> user reputation : 2621</p>
				<p class = "tagcontent" id = "usertaginfo-8495">{'battery': 2, 'None': 220, 'lithium-polymer': 2}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8495" class = 'collapse'>
			</div>
				<textarea id = "speech-8495" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8495">
					<img id="start_img-8495" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8495">Comment</button>
			<br><div id = "ans-8504"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8504" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Think of your controller as having several components:</p>

<p>a (mathematical) model of the system, </p>

<p>a measurement subsystem for detecting errors, </p>

<p>a method to input commands to the system.</p>

<p>The feedback controller uses the measured errors, computes changes to the inputs in order to squash those errors, and sends those inputs to the system.  The idea is that all of the dynamics affecting a system won't be known in advance - friction values change, disturbances are encountered, payloads are not constant, etc.  So we measure the error and eliminate it.</p>

<p>The feedforward controller usually wraps around the feedback controller.  Although there are many types, they all generally estimate what the system's response will be for those changed inputs computed above.  They then further "nudge" the inputs to account for the predicted additional errors in order to prevent those modeled errors from occurring.  A good example is when the system knows that the payload changes when a device picks something up - the current to the motors can be increased to account for the additional torque required without waiting for the system to begin moving (too slowly) and seeing the errors occur.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8504" data-toggle = "popover">
				<p>user name : SteveO</p>
				<p> user reputation : 2960</p>
				<p class = "tagcontent" id = "usertaginfo-8504">{'None': 222}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8504" class = 'collapse'>
			</div>
				<textarea id = "speech-8504" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8504">
					<img id="start_img-8504" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8504">Comment</button>
			<br><div id = "ans-12598"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12598" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">-3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Sr. no  Point of Difference Feedback control system Feed Forward Control system:</p>

<ol>
<li><p>Definition  </p>

<ul>
<li>Systems in which corrective action is taken after disturbances affect the output </li>
<li>Systems in which corrective action is taken before disturbances affect the output</li>
</ul></li>
<li><p>Necessary requirement   </p>

<ul>
<li><p>Not required </p></li>
<li><p>Measurable Disturbance or noise</p></li>
</ul></li>
<li><p>Corrective action   </p>

<ul>
<li><p>Corrective action taken after the disturbance occurs on the output.</p></li>
<li><p>Corrective action taken before the actual disturbance occurs on the output.</p></li>
</ul></li>
<li><p>Block Diagram   </p>

<ul>
<li><p>enter image description here </p></li>
<li><p>enter image description here</p></li>
</ul></li>
<li><p>Control Variable adjustment </p>

<ul>
<li>Variables are adjusted depending on errors.  </li>
<li>Variables are adjusted based on prior knowledge and predictions.</li>
</ul></li>
<li><p>Example </p>

<ul>
<li>Use of roll sensor as feedback element in ship stabilization system.</li>
<li>Use of flowmeter as feed forward block in temperature control systems.</li>
</ul></li>
</ol>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12598" data-toggle = "popover">
				<p>user name : Satwik</p>
				<p> user reputation : 1</p>
				<p class = "tagcontent" id = "usertaginfo-12598">{'None': -3}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-12598">Load Comments</button></br>
			<div id = "commentsection-12598" class = 'collapse'>
			<div id = "comment-22086" class = "comment">
				<p>Your answer seems to be missing images, as well as some context.</p>
			</div>
			</div>
				<textarea id = "speech-12598" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12598">
					<img id="start_img-12598" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12598">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>