<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>What to do when position control with trajectories is interrupted?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8960" class = "post">
			<h2>Question</h2>
			<div id="vote-8960" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">6</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 115</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>What to do when position control with trajectories is interrupted?</h2>
<p>What are strategies used when trajectories, which are applied to a robotic joint, are interrupted? Say a robotic arm hits an obstacle, the controller just keeps applying the trajectory. Then at the end, the error gets so large, the torque can get quite strong and damage the robot or snap.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8960" data-toggle = "popover">
				<p>user name : user14042</p>
				<p> user reputation : 134</p>
				<p class = "tagcontent" id = "usertaginfo-8960">{'control': 6, 'None': 5, 'robotic-arm': 6, 'pid': 5, 'embedded-systems': 2, 'joint': 6, 'imu': 1, 'kalman-filter': 2, 'design': 0}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8960" class = 'collapse'>
			</div>
				<textarea id = "speech-8960" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8960">
					<img id="start_img-8960" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8960">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8961"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8961" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>If you have no possibility to detect the obstacle apriori (e.g. with cameras, vicinity sensors...) If you already hit an obstacle and your position error increases, you can only detect the problem by the increasing position error or indirect by the increasing motor current. <br>
Most of the motion controllers, I have seen, have tons of configuration parameters, including an error limit. This limit parameter tell the controller to disable the motor in case of this threshold is exceeded. This is done to protect the robot-hardware itself and also the environment (e.g. a wall, a crate or even an human being). <br>
In the procedure of setting up the robot this parameter is usually tuned, to avoid damage in case of an error but also to avoid false-positive alarms in case of a to small threshold.<br>
As it should be clear my answer is based on a system with a closed loop setup</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8961" data-toggle = "popover">
				<p>user name : TobiasK</p>
				<p> user reputation : 1572</p>
				<p class = "tagcontent" id = "usertaginfo-8961">{'control': 1, 'None': 102, 'communication': 0, 'wireless': 0, 'imu': 0, 'sensor-fusion': 0, 'gps': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8961" class = 'collapse'>
			</div>
				<textarea id = "speech-8961" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8961">
					<img id="start_img-8961" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8961">Comment</button>
			<br><div id = "ans-8964"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8964" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>In 1981 Raibert and Craig wrote a paper <em>Hybrid Position/Force Control of Manipulators</em>  which was published in the June 1981 issue of <em>Journal of Dynamic Systems, Measurement, and Control.</em>   It was republished in Brady's book <em>Robot Motion: Planning and Control.</em> You can find many similar concepts today, some being called "position and torque control," and others using velocity and/or force variables for the combination.   If you are able to sense joint torques (or motor currents), this would be a great approach.   If you cannot sense the joint torques, you can use an end effector force/torque sensor.  This would work for the scenario in which the robot cannot finish its positioning task when the object being gripped (or the gripper itself) hits an obstacle.   It would not, however, detect when an individual arm link encounters an obstacle. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8964" data-toggle = "popover">
				<p>user name : SteveO</p>
				<p> user reputation : 2960</p>
				<p class = "tagcontent" id = "usertaginfo-8964">{'None': 222}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8964">Load Comments</button></br>
			<div id = "commentsection-8964" class = 'collapse'>
			<div id = "comment-14774" class = "comment">
				<p>I haven't read the paper you cite, but I  believe the concept of force feedback in motion control of robots is now generally referred to as "compliance".</p>
			</div>
			<div id = "comment-14775" class = "comment">
				<p>Thanks, @Chuck.  Compliance control was around back then, too.  I think Hollerbach wrote the seminal paper on it, but that is just from memory.   You are right, and hybrid control, compliance control, impedance control, etc, would all be good search terms.</p>
			</div>
			</div>
				<textarea id = "speech-8964" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8964">
					<img id="start_img-8964" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8964">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>