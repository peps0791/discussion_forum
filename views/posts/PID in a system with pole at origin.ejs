<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>PID in a system with pole at origin
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-4366" class = "post">
			<h2>Question</h2>
			<div id="vote-4366" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 185</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>PID in a system with pole at origin</h2>
<p>I've seen in a lot of places some methods of tuning a PID controller. Most of them will say that one should apply a step input to the system and based on that response you can tune the PID parameters following some rule of thumb. But what about a system which one of its pole is at origin? In other words, a step response on a system like that will have an infinitely increasing ramp in the output (theoretically).</p>

<p>An example:</p>

<p>let's say we have a spinning wheel (fixed at center) and all we can control is the amount of torque applied to make it spin. If we can read its position (angle) and we want to design a PID controller to set its position (more or less like a step-motor). How can that be done? Note that a step input in this case will be a constant torque and this will make the wheel spin faster and faster. How should one proceed?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-4366" data-toggle = "popover">
				<p>user name : FELIPE_RIBAS</p>
				<p> user reputation : 145</p>
				<p class = "tagcontent" id = "usertaginfo-4366">{'quadcopter': 5, 'None': 0, 'pid': 5}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4366">Load Comments</button></br>
			<div id = "commentsection-4366" class = 'collapse'>
			<div id = "comment-6953" class = "comment">
				<p>What specific method are you looking at?  It doesn't actually matter if the wheel spins faster and faster, by injecting a small step torque for a given amount of time you can characterize the system...  At the `t=x` point where the system is basically at constant acceleration it's not providing any new information (that's your DC component).</p>
			</div>
			</div>
				<textarea id = "speech-4366" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4366">
					<img id="start_img-4366" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4366">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-4412"  class = "post">
				<h2>Answer</h2>
			<div id="vote-4412" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There shouldn't be any reason a standard pid couldn't function in the example you gave. As long the position is being sampled at a reasonably high rate. If the pid in your system was only updated at .5 hz then the pid might have a problem keeping the wheel from over accelerating. However, if that's the fastest your system can sample the pid algorithm then I suggest stop using an under-clocked 4040 (or a MC14500 for that matter). </p>

<p><img src="https://i.stack.imgur.com/Y8kxR.png" alt="Example"></p>

<p>Now let's say you had this system, and you wanted to balance it upright. A bare pid wouldn't work so well here because it would overshoot near the top and not apply enough torque when perpendicular to the ground. The solution would be to realize that the torque required to hold it in place would be cos(<em>angle to ground</em>) * <em>mass at end</em>. If you had your theoretical system always apply that much torque, then applying a pid on top of that could work quite well (if T = cos(<em> </em>) * M + x where T is the applied torque then altering x will produce the same acceleration no matter what *  is).</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-4412" data-toggle = "popover">
				<p>user name : daweim0</p>
				<p> user reputation : 360</p>
				<p class = "tagcontent" id = "usertaginfo-4412">{'None': 16, 'arduino': 3, 'microcontroller': 3, 'imu': 2, 'beagle-bone': 1, 'untagged': 2, 'i2c': 1}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-4412" class = 'collapse'>
			</div>
				<textarea id = "speech-4412" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4412">
					<img id="start_img-4412" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4412">Comment</button>
			<br><div id = "ans-4433"  class = "post">
				<h2>Answer</h2>
			<div id="vote-4433" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Usually, what happens in practice is that you barely have access to the commanded torque. Instead, you can control electrical quantities, such as voltage and/or current, that in a electrical motor can be readily related to the torque applied to the shaft. This is to say that further dynamics appear in the response and thus the PID should be aware of them.</p>

<p>For example, a DC electrical motor is well described by the following transfer function:</p>

<p>$$
F(s)=\frac{\theta(s)}{V(s)}=\frac{K}{s\cdot(1+\tau s)},
$$</p>

<p>where $V$ is in the input voltage and $\theta$ is the measured angular position of the motor shaft. To a certain extent, by neglecting the elasticity of the gearbox, one can also apply the same plant model to a system where $\theta$ refers to the joint encoder measurements.</p>

<p>As you can see, there is still a pole in the origin, but this is not a real problem for the identification. So, before tuning the PID, it is always a good rule to understand what kind of system we are dealing with to then ground whatever approach we have in mind on the basis of the knowledge we have of such a system.</p>

<p>To come back to the point, the unknown parameters $K$ and $\tau$ account for the DC gain and the dynamical properties of the system, respectively. To find good values for $K$ and $\tau$ you can consider relying on a <em>least-squares</em> identification method (in its batch or recursive implementations) or even on the <a href="http://control.ee.ethz.ch/~apnoco/Lectures/EKF.pdf" rel="nofollow noreferrer"><em>Extended-Kalman-Filter</em> estimator</a> (EKF).</p>

<p>The EKF technique can be profitably applied to the state-space system whose transfer function is $F(s)$, augmented of two further states representing the evolution of $K$ and $\tau$ which is in turn implicitly assumed to be constant (i.e. with null derivatives).</p>

<p>Given the template $F(s)$ of your system, you can then inject proper input signals (e.g. step-wise, chirp, pulse trains), measure the output angular position, go through the identification methods and determine good representative values of the free parameters. Once done with that, put the model to test by assessing its performance when stimulated by signals you did not employ in identification (e.g. by varying both the input amplitude and input waveform).</p>

<p>Particular care should be taken for estimating the working area where the system behaves linearly and where your model is supposed to generate good response profiles (e.g. check if the actuator intrinsic nonlinearities have an impact or not). If you experience significant deviations between the measurements and the predictions, then you have to refine the model (e.g. increase model order, introduce dead-time ...).</p>

<p>What's the reason why we struggle to find a good representation of the plant? Because, of course, the model provides us with an easy way to tackle the PID tuning problem. You can resort to simulation, to well-established rules available in literature or even to simple considerations as below.</p>

<p>The <em>P</em> design may turn out from the requirement of tracking a reference signal whose frequency content is limited to the band $\omega_c$. Therefore, we have to equate $\left|F(j\omega_c)\right|$ to 1, hence:</p>

<p>$$
\left|\frac{K_PK}{j\omega_c(1+j\tau \omega_c)}\right|=1,
$$</p>

<p>from which we get:
$$
K_P=\frac{\omega_c}{K}\sqrt{1+\left(\tau \omega_c\right)^2},
$$</p>

<p>where $K_P$ is the proportional gain.</p>

<p>Since the system is already equipped with an integrator (i.e. the pole in the origin), we don't need the integral part of the PID, thanks to the so-called internal model principle. Nonetheless, for disturbance rejection purpose, one can design the <em>I</em> part under some mild conditions as:</p>

<p>$$
K_I=\omega_{dr}K_P-\frac{\omega_{dr}^2\left(1-\tau \omega_{dr}\right)}{K},
$$</p>

<p>where $K_I$ is the integral gain and $T_{dr}=3/\omega_{dr}$ is the time period wherein a step-wise disturbance is required to be canceled out.</p>

<p>For instance, the <a href="https://robotics.stackexchange.com/a/4412/6941">scenario</a> described by <a href="https://robotics.stackexchange.com/users/1667/daweim0">daweim0</a> will definitely require the integral gain to have zero steady-state error while counteracting the gravity component. The feed-forward term will be very helpful too.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-4433" data-toggle = "popover">
				<p>user name : Ugo</p>
				<p> user reputation : 1482</p>
				<p class = "tagcontent" id = "usertaginfo-4433">{'None': 99}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-4433" class = 'collapse'>
			</div>
				<textarea id = "speech-4433" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4433">
					<img id="start_img-4433" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4433">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>