<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>redundant arm path planning and trajectory following
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-5111" class = "post">
			<h2>Question</h2>
			<div id="vote-5111" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 1097</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>redundant arm path planning and trajectory following</h2>
<p>I have a 7dof robotic arm and a set of end effector trajectories in cartesian space I need it to follow. </p>

<p>How do I deal with the redundancy in the arm when planning to follow these trajectories both with and without obstacle avoidance?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-5111" data-toggle = "popover">
				<p>user name : Andrew Hundt</p>
				<p> user reputation : 276</p>
				<p class = "tagcontent" id = "usertaginfo-5111">{'stereo-vision': 2, 'None': 14, 'calibration': 2, 'c++': 2, 'planning': 2, 'robotic-arm': 4, 'motion-planning': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-5111">Load Comments</button></br>
			<div id = "commentsection-5111" class = 'collapse'>
			<div id = "comment-7876" class = "comment">
				<p>How are you generating these trajectories?  What is the rest of your (software) system like?</p>
			</div>
			<div id = "comment-7907" class = "comment">
				<p>I am removing parts 2 and 3 of this question, since the answers would be opinion-based (grounds for closing the question entirely).</p>
			</div>
			</div>
				<textarea id = "speech-5111" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5111">
					<img id="start_img-5111" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5111">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-5119"  class = "post">
				<h2>Answer</h2>
			<div id="vote-5119" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Do you mean you have an <em>end-effector</em> trajectory?  Because typical arm planners (such as the one in <a href="http://openrave.org/" rel="nofollow">OpenRAVE</a>) output joint space trajectories.  So they tell you how to move each joint, even for 7 DoF arms.  If so, you should clarify the question because I think when you say you have a trajectory for your robot arm, it is assumed it is a joint space trajectory.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-5119" data-toggle = "popover">
				<p>user name : Ben</p>
				<p> user reputation : 3608</p>
				<p class = "tagcontent" id = "usertaginfo-5119">{'None': 277, 'inverse-kinematics': 3, 'accelerometer': 5, 'calibration': 10, 'kinematics': 14, 'robotic-arm': 8, 'jacobian': 6, 'dh-parameters': 8, 'imu': 5, 'sensors': 5}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-5119">Load Comments</button></br>
			<div id = "commentsection-5119" class = 'collapse'>
			<div id = "comment-7879" class = "comment">
				<p>It is ok if joint space trajectories are the output, the input is end-effector trajectories.</p>
			</div>
			</div>
				<textarea id = "speech-5119" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5119">
					<img id="start_img-5119" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5119">Comment</button>
			<br><div id = "ans-5123"  class = "post">
				<h2>Answer</h2>
			<div id="vote-5123" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>To solve the redundancy problem, you can use the Resolved Motion Rate technique. It consist of finding the articular position using the iterative equation
$$\Delta \theta = J^\dagger T \Delta x + J^\dagger (I-T) h$$
With</p>

<ul>
<li>$J^\dagger$ the pseudoinverse of the jacobian matrix,</li>
<li>$T$ the projector that defines the null space of the task to accomplish,</li>
<li>$\Delta x$ the difference in cartesian position between $x(t_{i-1})$ and $F(\theta(t_i))$ ($F(.)$ being the forward kinematics),</li>
<li>h being the opposite of the gradient of the cost function to minimize.</li>
</ul>

<p>Typically, we have the cost function $z(\theta)$ and the inverse of the gradient $h = - \nabla z$.</p>

<p>You can find more information and examples on the article from <a href="http://www.professeurs.polymtl.ca/luc.baron/doc/r14.pdf" rel="nofollow">Huo L. and Baron L.</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-5123" data-toggle = "popover">
				<p>user name : Alexandre Willame</p>
				<p> user reputation : 103</p>
				<p class = "tagcontent" id = "usertaginfo-5123">{'None': 10}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-5123" class = 'collapse'>
			</div>
				<textarea id = "speech-5123" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5123">
					<img id="start_img-5123" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5123">Comment</button>
			<br><div id = "ans-5131"  class = "post">
				<h2>Answer</h2>
			<div id="vote-5131" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>To expand on Alexandre's answer:<br>
Controlling the arm with the Jacobian along an end-effector trajectory is one way to do it.  However, this will not give you obstacle avoidance.  Although you could manually check for collisions at each time step, but i imagine this could get ugly.  Additionally, this is a gradient technique, so you will be constrained to the arm configurations close to the current one.  But if you do want to go this route, I find the notation in the book: <a href="https://www.google.com/shopping/product/18328483085519729280" rel="nofollow">Robotics: Modelling, Planning and Control</a> by Bruno Siciliano, Lorenzo Sciavicco, Luigi Villani, Giuseppe Oriolo a little easier to understand / use:</p>

<p>$$
\dot{q}=J^{\dagger}v_{e}+(I-J^{\dagger}J)\dot{q_o}
$$
where:
$$
J^{\dagger} = J^T(JJ^T)^{-1}
$$
is the right-pseudo-inverse of the Jacobian.  (This is needed because you are under-constrained and have more joints than the 6 DoF space of end-effector motion).  There are other ways to get the pseudoinverse, but this method works well for arm Jacobians.  $J$ is obviously the Jacobian, which changes based on the arm configuration, so it is really $J(q)$, and must be recalculated when the arm moves. $v_e$ is the end-effector velocity vector.  The first three elements are the Cartesian translation velocity in the global frame, and the last three are rotational velocities.  $I$ is the identity matrix.  $\dot{q}$ is the joint velocities, and $\dot{q_o}$ are joint velocities to move the arm in its null space (again, which you have since you are under-constrained).  I have never found this very useful, so I usually zero it out which greatly simplifies the equation.  </p>

<p>To use this formulation, you will need a linear algebra package, which there are many available, and you will also need to calculate the geometric Jacobian of your arm.  This is a topic for another question.</p>

<p>NOTE: I typically only use this method for small motions or when i know the arm is in no danger of collision.</p>

<p>To expand on my other answer:<br>
I think the more standard way to solve this problem is to use an arm planner.  These planners will have some model of the environment which constitutes obstacles.  You give the planner start and goal arm configurations (i.e. joint angles), and it figures out how to best move the arm between them while avoiding obstacles.  Note that you will typically have start and goal end-effector poses.  and because you have a redundant arm, there are many arm configurations that can satisfy them.  So you must first do some IK and find the configuration that is best for you based on some heuristic.  </p>

<p>Some notable arm planners / toolkits:</p>

<ul>
<li><a href="http://openrave.org/" rel="nofollow">OpenRave</a> - Typically Linux based, but i believe can be cross complied.</li>
<li>ROS <a href="http://moveit.ros.org/" rel="nofollow">MoveIt!</a> - again, ROS is typically Linux based, but i think has some limited cross-compile support, but i am not sure about MoveIt.</li>
<li>Matlab <a href="http://www.petercorke.com/Robotics_Toolbox.html" rel="nofollow">Robotics Toolkit</a> - matlab based, so works on Windows, but is not C++.</li>
<li><a href="http://www.orocos.org/" rel="nofollow">Orocos</a> - Typically Linux based, but i believe can be cross complied.  Not sure if it has arm planning actually.</li>
<li><a href="http://rll.berkeley.edu/trajopt/doc/sphinx_build/html/" rel="nofollow">Trajopt</a> - no Windows support</li>
</ul>

<p>Underneath these most of these libraries is a planner such as RRT.  If you want to do planning yourself, you should check out:</p>

<ul>
<li><a href="http://ompl.kavrakilab.org/" rel="nofollow">OMPL</a></li>
<li><a href="http://sbpl.net/" rel="nofollow">SBPL</a></li>
</ul>

<p>Having said all that, answering your questions specifically:</p>

<ol>
<li>The planner will handle the arm's redundancy without issue.  (besides increasing the search space)</li>
<li>There are many planner algorithms.  Too many to list here.  For example, <a href="http://ompl.kavrakilab.org/planners.html" rel="nofollow">this</a> is the list of planners available in OMPL.   But if you use an off the shelf planner, it will output a trajectory in joint space which is easy to follow with standard control techniques.  </li>
<li>Libraries and some "do it yourself" code listed above</li>
</ol>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-5131" data-toggle = "popover">
				<p>user name : Ben</p>
				<p> user reputation : 3608</p>
				<p class = "tagcontent" id = "usertaginfo-5131">{'None': 277, 'inverse-kinematics': 3, 'accelerometer': 5, 'calibration': 10, 'kinematics': 14, 'robotic-arm': 8, 'jacobian': 6, 'dh-parameters': 8, 'imu': 5, 'sensors': 5}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-5131" class = 'collapse'>
			</div>
				<textarea id = "speech-5131" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5131">
					<img id="start_img-5131" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5131">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>