<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Check if task exists in Not eXactly C
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-671" class = "post">
			<h2>Question</h2>
			<div id="vote-671" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 78</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Check if task exists in Not eXactly C</h2>
<p>Is there a way to check if a task, function or variable exists in Not eXactly C?</p>

<p>I know that in PHP you can use <code>isset()</code> to check if a variable exists and <code>function_exists()</code> to do the same for a function, but is there a way to do that in NXC?</p>

<p>I am specifically interested in checking whether a task exists or it is alive.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-671" data-toggle = "popover">
				<p>user name : shea</p>
				<p> user reputation : 239</p>
				<p class = "tagcontent" id = "usertaginfo-671">{'nxt': 15, 'None': 2, 'algorithm': 2, 'not-exactly-c': 4, 'programming-languages': 4, 'motor': 11, 'mindstorms': 15}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-671" class = 'collapse'>
			</div>
				<textarea id = "speech-671" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-671">
					<img id="start_img-671" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-671">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-675"  class = "post">
				<h2>Answer</h2>
			<div id="vote-675" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>No, it seems that there's no such possibility, because there's no method in <a href="http://bricxcc.sourceforge.net/nbc/nxcdoc/NXC_Guide.pdf" rel="nofollow">the manual</a>.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-675" data-toggle = "popover">
				<p>user name : looper</p>
				<p> user reputation : 161</p>
				<p class = "tagcontent" id = "usertaginfo-675">{'nxt': 7, 'None': 2, 'programming-languages': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-675">Load Comments</button></br>
			<div id = "commentsection-675" class = 'collapse'>
			<div id = "comment-838" class = "comment">
				<p>if it's a small snippet in the manual, you can quote it here to prevent link rot and so the whole relevant information is contained in the answer.</p>
			</div>
			<div id = "comment-839" class = "comment">
				<p>@ThomasH: There's no such snippet, it's just not *there* in the API.</p>
			</div>
			<div id = "comment-841" class = "comment">
				<p>I get you, in that case maybe just mention that the manual lists no such function.</p>
			</div>
			</div>
				<textarea id = "speech-675" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-675">
					<img id="start_img-675" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-675">Comment</button>
			<br><div id = "ans-676"  class = "post">
				<h2>Answer</h2>
			<div id="vote-676" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>As NXC is a compiled language, I would assume calling a non-existent function or accessing a non-existent variable would throw a syntax error during compilation as it does in other compiled languages I have used.</p>

<p>Conversely, in interpreted languages like PHP and Python you can often call or access things that don't exist without creating an issue until that actual call or access happens - hence the need for method's like <code>isset()</code> and <code>function_exists()</code> in PHP.</p>

<p><strong>Edit:</strong> Looking at the <a href="http://bricxcc.sourceforge.net/nbc/nxcdoc/nxcapi/task.html" rel="nofollow">Tasks docs</a> it seems that a "task" is similar to a function in that it is defined in the source code, versus being created dynamically at run-time. I expect if you write something like: <code>Precedes(non_existent_task_name);</code> ("Precedes" being a function to start tasks), and try to compile you would trigger the same sort of syntax error as you would if you did something like: <code>call_of_non_existent_function();</code></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-676" data-toggle = "popover">
				<p>user name : thisismyrobot</p>
				<p> user reputation : 331</p>
				<p class = "tagcontent" id = "usertaginfo-676">{'None': 20}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-676">Load Comments</button></br>
			<div id = "commentsection-676" class = 'collapse'>
			<div id = "comment-843" class = "comment">
				<p>This seems right. I haven't worked with NXC, but the `task` part of the question seems like something that _could_ be checked. A task may or may not be alive and that's not a compiler semantics. Is there a way to check that?</p>
			</div>
			<div id = "comment-862" class = "comment">
				<p>@Shahbaz I've had a browse over the docs and have updated my answer to cover the "exists" for tasks - tasks appear to be defined before compilation so should have the same errors as functions. The "alive" component of the answer will require someone a bit more familiar with NXC syntax, but would usually be done (in the absence of API helpers) with a flag - just before exiting the task could set a global variable to indicate that the task has stopped itself.</p>
			</div>
			</div>
				<textarea id = "speech-676" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-676">
					<img id="start_img-676" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-676">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>