<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How to implement RANSAC and kalman filter or particle filter algorithms with ROS packages?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-12076" class = "post">
			<h2>Question</h2>
			<div id="vote-12076" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 92</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How to implement RANSAC and kalman filter or particle filter algorithms with ROS packages?</h2>
<p>I'd like to implement those algorithms by using ROS packages to solve one way the SLAM problem. I know that gmapping, Rviz, slam_gmapping and robot_pose_ekf (for extended kalman filter) could be useful packages, but I'm kind of lost. I don't ask a tutorial because the next days I'm going to start studying deeper this subject, but I need orientation in the procedure.</p>

<p>"a possible way to implement RANSAC algorithm" <a href="http://pointclouds.org/documentation/" rel="nofollow noreferrer">http://pointclouds.org/documentation/</a>...</p>

<p>Note: I'm planning to do something like this indoors. <a href="https://www.youtube.com/watch?v=17W8dkzkvWA" rel="nofollow noreferrer">https://www.youtube.com/watch?v=17W8dkzkvWA</a>.
I'm working on ubuntu. I have the "kinect" (xbox360), and for now I don't know what kind of cheap 2WD robotic platform choose in pages as amazon, robotshop and ebay (although Canakit 2WD, DFrobot 2WD and alphabot seems to be a good option). More than anything, I need orientation about how to mix everything to solve the SLAM problem with a 2WD robotic platform, the kinect and ROS packages :)</p>

<p>Thanks in advance</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-12076" data-toggle = "popover">
				<p>user name : Gerson Nail</p>
				<p> user reputation : 6</p>
				<p class = "tagcontent" id = "usertaginfo-12076">{'ros': 1, 'kinect': 1, 'None': 0, 'slam': 1, 'filter': 1}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-12076" class = 'collapse'>
			</div>
				<textarea id = "speech-12076" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12076">
					<img id="start_img-12076" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12076">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-12077"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12077" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Like with anything in engineering, you first need a good definition of what "success" (or "done") means. SLAM running how fast? Under what particular lighting and environmental conditions? Using what kind of processing power, what kind of weight, driving what kind of chassis, with what kind of battery lifetime?
Then, you need to break the problem backwards into sub-components, and establish parameters for those components.
Then, you need to go looking for solutions that exist to fulfill each of the tasks of those components.</p>

<p>It seems like you're going to other way -- "Here's a pile of parts, what can I build with this?"
That's okay for exploratory investigation, and creativity (a box of Legos!) but it's a bit harder to hit any PARTICULAR goal using that method.</p>

<p>So, to build "forward" like you're attempting to, you still need a way to monitor what's going on. Thus, you want to make sure that your development platform (the computer on the robot) has some kind of monitor, or remote access. X Windows over WiFi might work. A 10" LCD on the robot with a wireless keyboard/mouse may work, if it's easy to read from where you need to be to monitor.</p>

<p>Once you can measure and inspect everything, then it's a process of adding each component from the bottom, poking it with expected stimuli, and making sure it performs as expected.</p>

<p>Screw wheels to motors, and connect encoders and motor drive to motor controller. Send commands to motor controller -- do the wheels move as you expect them to?</p>

<p>Add a ROS program to drive your robot. Make sure it connects to the overall ROS system on the control computer. Add a component for driving the motor controllers. Make your program send the appropriate command to make the motors move half a foot. Does the robot move half a foot?
This will also make you familiar with how different processes/modules within a ROS system communicate using the ROS message bus topics.</p>

<p>Then, add a ROS module to read the Kinect data and display it on the monitor. Does it look okay? Can you read this from your control program?</p>

<p>Keep adding bits and pieces, verifying that each piece performs in the way you expect. Ideally, also verify what the piece does when you drive it outside its "sweet spot" or when it loses control or gets a bad command -- saftey is important!</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12077" data-toggle = "popover">
				<p>user name : Jon Watte</p>
				<p> user reputation : 645</p>
				<p class = "tagcontent" id = "usertaginfo-12077">{'None': 43, 'cooling': 7, 'servos': 7, 'heat-management': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-12077" class = 'collapse'>
			</div>
				<textarea id = "speech-12077" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12077">
					<img id="start_img-12077" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12077">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>