<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Stream Real-time Video with Environmental Data Overlaid
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1400" class = "post">
			<h2>Question</h2>
			<div id="vote-1400" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 3346</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Stream Real-time Video with Environmental Data Overlaid</h2>
<p>I want to embed environmental data collected from sensors into a live video stream from a camera. Has anyone done this or know how I would go about doing something like this? Is there a library available for the arduino or RPi?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1400" data-toggle = "popover">
				<p>user name : r351574nc3</p>
				<p> user reputation : 51</p>
				<p class = "tagcontent" id = "usertaginfo-1400">{'control': 2, 'None': 3, 'cameras': 2, 'sensors': 4, 'accelerometer': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1400">Load Comments</button></br>
			<div id = "commentsection-1400" class = 'collapse'>
			<div id = "comment-3016" class = "comment">
				<p>This has been asked elsewhere, I'm not sure if this answer will be helpful to you: [How can I overlay dynamic text on a video during playback?](http://superuser.com/q/382751)</p>
			</div>
			</div>
				<textarea id = "speech-1400" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1400">
					<img id="start_img-1400" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1400">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1401"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1401" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There are no ready-made open-source solutions that incorporate both streaming video &amp; sensor data from an Arduino that I am aware of; however, it wouldn't be too hard to build your own.  You would need a webcam + software for live streaming, then you'd need to interface your Rpi with the Arduino in order to access sensors that are connected to the Arduino via Python (or other language).  The easiest way of doing that is through the i2c bus, which will leave both USB ports on the Pi free, so you can connect a webcam, and even a USB wifi stick.</p>

<ul>
<li><a href="http://sourceforge.net/projects/mjpg-streamer/" rel="nofollow"><strong>mjpg-streamer</strong></a> - if your webcam supports MJPEG, it is the best and least computationally expensive way of streaming live video from your Raspberry Pi.</li>
<li><a href="http://blog.oscarliang.net/raspberry-pi-arduino-connected-i2c/" rel="nofollow"><strong>RPi + Arduino via i2c</strong></a> - Tutorial for connecting the Rpi to the Arudino via i2c (uses Python SMBus library).  You will need to modify the Arduino code to send the sensor data you need based upon the byte value sent from the Pi.</li>
</ul>

<p>You would then edit the php page hosted by the mjpg daemon to add your sensor data that you would collect via Python and the SMBus library.</p>

<p>You can launch mjpg-streamer using the following:</p>

<pre><code>./mjpg_streamer -i "./input_uvc.so" -o "./output_http.so -w ./www"
</code></pre>

<p>or for webcams w/o MJPEG support:</p>

<pre><code>./mjpg_streamer -i "./input_uvc.so" -o "./output_http.so -y -w ./www"
</code></pre>

<p>You can then view the livestream at localhost:8080</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1401" data-toggle = "popover">
				<p>user name : Yahma</p>
				<p> user reputation : 116</p>
				<p class = "tagcontent" id = "usertaginfo-1401">{'None': 5, 'sensors': 13}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1401" class = 'collapse'>
			</div>
				<textarea id = "speech-1401" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1401">
					<img id="start_img-1401" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1401">Comment</button>
			<br><div id = "ans-1404"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1404" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I have done something similar using the Robot Operating System (ROS). It makes streaming data really easy, although it might be more than you're asking for, and I'm not sure how much support for RPi there is. Basically, after installing ROS, you would just need to download  the mjpeg_server (<a href="http://ros.org/wiki/mjpeg_server" rel="nofollow">http://ros.org/wiki/mjpeg_server</a>) package for streaming video and rosbridge (<a href="http://www.ros.org/wiki/rosbridge_suite" rel="nofollow">http://www.ros.org/wiki/rosbridge_suite</a>) for streaming other types of data. ROS probably already has support for your webcam, but you'd probably have to write ROS nodes to collect other sensor data and publish them to topics. With rosbridge, you can easily expose those topics to the web on websockets.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1404" data-toggle = "popover">
				<p>user name : Robz</p>
				<p> user reputation : 954</p>
				<p class = "tagcontent" id = "usertaginfo-1404">{'pid': 8, 'embedded-systems': 0, 'slam': 20, 'sensor-error': 8, 'accelerometer': 5, 'kinematics': 7, 'mechanism': 1, 'differential-drive': 8, 'imu': 12, 'kalman-filter': 28, 'actuator': 21, 'gyroscope': 5, 'gps': 20, 'magnetometer': 5, 'None': 25, 'noise': 5, 'power': 0, 'localization': 20, 'microcontroller': 0, 'brushless-motor': 13, 'sensors': 41, 'quadcopter': 13, 'navigation': 7, 'sensor-fusion': 21, 'sonar': 8, 'servos': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1404" class = 'collapse'>
			</div>
				<textarea id = "speech-1404" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1404">
					<img id="start_img-1404" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1404">Comment</button>
			<br><div id = "ans-2044"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2044" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There is no easy way of doing it. I've done it in many of my projects, the best method I found was to use <a href="http://opencv.org/" rel="nofollow">http://opencv.org/</a> to capture the frames, and overlay each frame with your data before displaying it again. The code below gives you an idea (written in the old opencv version 1 syntax)</p>

<pre><code>/**
* Display the video from webcam and overlay text
*/

#include &lt;stdio.h&gt;
#include "cv.h"
#include "highgui.h"

int main(int argc, char** argv)
{

    CvCapture *capture;
    IplImage  *frame;
    double    t, ms = 0;

    bool finished = false;
    /* initialize webcam */
    capture = cvCaptureFromCAM(0);

    CvFont myFont;

    //Initialise font
    cvInitFont(&amp;myFont,CV_FONT_HERSHEY_COMPLEX_SMALL ,1.5f,1.5f,0,1,8);

    while (!finished)
    {
        /* display frame */
        frame = cvQueryFrame(capture);
        cvPutText( frame, "My Text", cvPoint(50,50), &amp;myFont , cvScalar(128) );
        // use other functions to draw something 
        cvShowImage("Stream",frame);
    }

    /* free memory */
    cvReleaseCapture(&amp;capture);
    return 0;
}
</code></pre>

<p>It also depends if you want to write your own code, or if you want a simple off the shelf solution. If you are writing your own code, then have a look at some of my scene rendering components, <a href="https://sourceforge.net/p/visionmagic/code/ci/master/tree/src/modules/sceneRendering/" rel="nofollow">https://sourceforge.net/p/visionmagic/code/ci/master/tree/src/modules/sceneRendering/</a> , not perfect, but will give you an idea on how to render things in OpenGL, and Qt.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2044" data-toggle = "popover">
				<p>user name : blackcoder</p>
				<p> user reputation : 71</p>
				<p class = "tagcontent" id = "usertaginfo-2044">{'None': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2044" class = 'collapse'>
			</div>
				<textarea id = "speech-2044" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2044">
					<img id="start_img-2044" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2044">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>