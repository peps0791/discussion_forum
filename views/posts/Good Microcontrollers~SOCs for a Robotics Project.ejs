<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Good Microcontrollers~SOCs for a Robotics Project
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-4" class = "post">
			<h2>Question</h2>
			<div id="vote-4" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 1535</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Good Microcontrollers~SOCs for a Robotics Project</h2>
<p>I am looking for a starting point for my project, preferably using popular systems (ones there is a lot of support for). I have an Arduino Uno, a Raspberry Pi, and a lot of willpower :) Anyone here built a project using the systems above?</p>

<p>Observation: I'd like to start with a simple line-following vehicle and build up afterwards.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-4" data-toggle = "popover">
				<p>user name : Wilson Canda</p>
				<p> user reputation : 127</p>
				<p class = "tagcontent" id = "usertaginfo-4">{'None': 1, 'microcontroller': 0, 'raspberry-pi': 0, 'arduino': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4">Load Comments</button></br>
			<div id = "commentsection-4" class = 'collapse'>
			<div id = "comment-16" class = "comment">
				<p>Isn't this a survey question that is subjective? Which is against the spirit of StackExchange.
http://blog.stackoverflow.com/2010/09/good-subjective-bad-subjective</p>
			</div>
			<div id = "comment-45" class = "comment">
				<p>What have you tried? What problems did you encounter? Stack exchange is much better for [practical, answerable questions based on actual problems that you face](http://robotics.stackexchange.com/faq#dontask) than for [shopping recs](http://blog.stackoverflow.com/2010/11/qa-is-hard-lets-go-shopping/), which we try to avoid.</p>
			</div>
			</div>
				<textarea id = "speech-4" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4">
					<img id="start_img-4" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-7"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>It really depends on the project.</p>

<p>For a line follower robot ( in your case ), using the Atmel's AVR series is the best choice. Specially ATMEGA16 or even ATMEGA32. </p>

<p>Because the line-follower is a small project and the Arduino is too much for it. And the other advantage of Atmega16 is that it is cheap. If it is broken or faulty then you can change it easily. and it also provides PWM for controlling the speed of motors. </p>

<p>So with atmega series you can build the most powerful line-follower . No need to spend money on getting prebuilt boards and ...</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7" data-toggle = "popover">
				<p>user name : Miro Markaravanes</p>
				<p> user reputation : 323</p>
				<p class = "tagcontent" id = "usertaginfo-7">{'control': 12, 'None': 8, 'i2c': 2, 'motor': 6, 'power': 6, 'pwm': 7, 'microcontroller': 2, 'mechanism': 0, 'avr': 7, 'circuit': -5, 'electronics': 6, 'soccer': 12, 'software': -3}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7" class = 'collapse'>
			</div>
				<textarea id = "speech-7" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7">
					<img id="start_img-7" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7">Comment</button>
			<br><div id = "ans-21"  class = "post">
				<h2>Answer</h2>
			<div id="vote-21" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>If you want a line-following robot, then something similar to an <a href="http://mbed.org/cookbook/m3pi" rel="nofollow">m3pi</a> would be achievable. Photo-transistors seem to be very effective with a black-on-white track.</p>

<p>As for a microcontroller, Mario Markarian is probably right, it is down to personal preference and the project you are working on. The m3pi uses an <a href="http://mbed.org/handbook/mbed-Microcontrollers" rel="nofollow">mbed</a> and has a lot of IO's to play with. For more advanced robots a raspberry pi or <a href="http://mbed.org/handbook/mbed-Microcontrollers" rel="nofollow">beagleboard</a> work, interfaced with slave microcontroller(s) to provide sensor data and offloading any repetitive computations that could otherwise slow down the pi. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-21" data-toggle = "popover">
				<p>user name : Njdart</p>
				<p> user reputation : 311</p>
				<p class = "tagcontent" id = "usertaginfo-21">{'None': 21}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-21">Load Comments</button></br>
			<div id = "commentsection-21" class = 'collapse'>
			<div id = "comment-21" class = "comment">
				<p>Wow. That is definitely the direction I'd like to go in. Thanks, very informative post.</p>
			</div>
			</div>
				<textarea id = "speech-21" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-21">
					<img id="start_img-21" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-21">Comment</button>
			<br><div id = "ans-22"  class = "post">
				<h2>Answer</h2>
			<div id="vote-22" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I would suggest using lower end Atmel AVRs for beginning robotics projects.  An AVR can take a lot of abuse and can sink and source more current without burning out than the PIC microcontrollers I have used.  </p>

<p>If you are going to be building multiple projects, you should consider investing in building your own breakout boards.  You can design your own PCB with standard power circuitry, a bunch of headers for I/O and whatever microcontroller you choose.  You can get your cost down to around $15 per board for the PCB and then a couple bucks worth of components.  This way, you can leave your project intact, instead of having to harvest out the microcontroller for your next project.  As a bonus, you will gain valuable experience in PCB design and soldering.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-22" data-toggle = "popover">
				<p>user name : Crake</p>
				<p> user reputation : 183</p>
				<p class = "tagcontent" id = "usertaginfo-22">{'None': 8}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-22" class = 'collapse'>
			</div>
				<textarea id = "speech-22" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-22">
					<img id="start_img-22" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-22">Comment</button>
			<br><div id = "ans-31"  class = "post">
				<h2>Answer</h2>
			<div id="vote-31" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>If you want to go further than using microcontrollers you could run ROS on you <a href="http://www.ros.org/wiki/ROSberryPi/Setting%20up%20ROS%20on%20RaspberryPi" rel="nofollow">Raspberry Pi</a>.</p>

<p>I have build several robots and a couple of other projects using a <a href="http://robocard.dk/" rel="nofollow">RoboCard</a> (site in Danish, but can <a href="http://translate.google.com/translate?js=y&amp;prev=_t&amp;hl=en&amp;ie=UTF-8&amp;layout=1&amp;eotf=1&amp;u=http://robocard.dk/pages/home.php&amp;sl=da&amp;tl=en" rel="nofollow">be translated</a>). The RoboCard is build around an ATMega, so that certainly is a viable route.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-31" data-toggle = "popover">
				<p>user name : Nis</p>
				<p> user reputation : 302</p>
				<p class = "tagcontent" id = "usertaginfo-31">{'None': 17}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-31" class = 'collapse'>
			</div>
				<textarea id = "speech-31" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-31">
					<img id="start_img-31" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-31">Comment</button>
			<br><div id = "ans-52"  class = "post">
				<h2>Answer</h2>
			<div id="vote-52" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">9</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The Arduino is really an AVR Atmega328p. The Arduino is a fine off-the-shelf implementation of this microcontroller, but if you make many of them, you can buy the chip for less than $3 each in bulk, and it requires very little circuitry to run on its own -- a crystal and a couple of capacitors to run at 20 Mhz, or not even that if you can run at the built-in 8 MHz resonant oscillator frequency.</p>

<p>It's fine for generating control signals: Servo PWM, step/direction, control for H-bridges, etc.)</p>

<p>It's also OK for running sensors: Ultrasonic time measurement, IR voltage conversion measurement, on/off contactors, etc -- this includes whatever optical sensor you'd use for "line sensing."</p>

<p>There will be a little code space left over after doing these tasks, so the simple control loop of "is the line to the right, left, or center of me -> do the appropriate turn" can be built into that system. However, as soon as you want to do something bigger, like path planning, environmental awareness, memory, SLAM, etc, you will not be able to fit that into the Arduino.</p>

<p>Thus, the best system for your requirements probably includes tying all the physical hardware to the Arduino, and then talking to the Arduino from the Raspberry Pi. The RPi has a modicum of CPU power (700 MHz ARM) and RAM (256-512 MB RAM) and thus can run higher-level control algorithms like path planning, localization, SLAM, etc.</p>

<p>If you go with a bare AVR controller, there are UART outputs on the Raspberry Pi, but the problem is that the RPi is 3.3V and the Arduino Uno is 5V. Either go with a 3.3V Arduino version, or use a voltage divider to step down 5.0V output from the Arduino to the 3.3V input of the Raspberry Pi. I use a 2.2 kOhm high and 3.3 kOhm low resistor and it works fine. You can feed the 3V output from the Raspberry Pi directly into the RXD of the AVR, because it will treat anything at 1.2V or up as "high."</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-52" data-toggle = "popover">
				<p>user name : Jon Watte</p>
				<p> user reputation : 645</p>
				<p class = "tagcontent" id = "usertaginfo-52">{'None': 43, 'cooling': 7, 'servos': 7, 'heat-management': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-52" class = 'collapse'>
			</div>
				<textarea id = "speech-52" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-52">
					<img id="start_img-52" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-52">Comment</button>
			<br><div id = "ans-67"  class = "post">
				<h2>Answer</h2>
			<div id="vote-67" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I built a line following robot with an Arduino before.  It was really simple to do and all we used were color sensors on the bottom inputted in the Arduino, and then of course some motors for the wheels.  </p>

<p>But using an Arduino allowed us to have plenty of room for other components we wanted to add on to make our robot do more things.  </p>

<p>Also, if you want to see some line following code we used just ask in a comment, but it obviously depends on your setup with the sensors and how you want it to turn at intersections and things like that.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-67" data-toggle = "popover">
				<p>user name : Tom Prats</p>
				<p> user reputation : 151</p>
				<p class = "tagcontent" id = "usertaginfo-67">{'None': 5}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-67">Load Comments</button></br>
			<div id = "commentsection-67" class = 'collapse'>
			<div id = "comment-2607" class = "comment">
				<p>Could you do something like [this](http://www.youtube.com/watch?v=3UxZDJ1HiPE&feature=youtu.be) with Arduino? What kind of power drivers you use for more powerful motors? I am not sure how to implement the rotation 360 degree around, just an additional motor or servo? Additional motor probably because then it could rotate around to any direction, which kind of motor? AC?</p>
			</div>
			<div id = "comment-2611" class = "comment">
				<p>yeah definitely, pretty easily.  Don't remember the drivers, but just a normal dc motor.  And yeah I'd use a servo probably for the rotation.  Turning the cart could be handled by using multiple sets of wheels or by using another servo</p>
			</div>
			</div>
				<textarea id = "speech-67" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-67">
					<img id="start_img-67" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-67">Comment</button>
			<br><div id = "ans-68"  class = "post">
				<h2>Answer</h2>
			<div id="vote-68" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You should use an ARM. Then you can run full linux or android and have access to powerful libraries, high-level functional languages, and a package manager and community. You can use gcc or LLVM, and a modern debugger like gdb.</p>

<p>ARMs used to be too expensive and/or too big, but nowadays you can get an ARM for $5 that's only 13x13 mm. You have to use reflow soldering, but you will anyways if you want to make a professional-quality robot.</p>

<p><a href="http://www.eetimes.com/electronics-products/electronic-product-reviews/processors/4230227/TI-debuts--5-Sitara-AM335x-ARM-processors" rel="nofollow">http://www.eetimes.com/electronics-products/electronic-product-reviews/processors/4230227/TI-debuts--5-Sitara-AM335x-ARM-processors</a></p>

<p>All other instructions sets have lost the competition. If you  pick something like AVR, you will be forever stuck with inferior toolchains, weaker MIPS/dollar, and a much smaller community.</p>

<p>If you don't want to engineer the whole motherboard, then Gumstix, BeagleBone, BeagleBoard, and Raspberry Pi are all excellent pre-existing ARM-based devkits, and processor vendors also offer a devkit for every processor they make, bringing out at least a display bus and some serial busses.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-68" data-toggle = "popover">
				<p>user name : AlcubierreDrive</p>
				<p> user reputation : 248</p>
				<p class = "tagcontent" id = "usertaginfo-68">{'None': 8, 'manufacturing': 5, 'cnc': 2, '3d-printing': 5, 'arm': 1}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-68">Load Comments</button></br>
			<div id = "commentsection-68" class = 'collapse'>
			<div id = "comment-2606" class = "comment">
				<p>*"All other instructions sets have lost the competition. If you pick something like AVR, you will be forever stuck with inferior toolchains, weaker MIPS/dollar, and a much smaller community."* Could you provide some authorative source for this? This sounds a bit like marketing, disclose if you work for TI. AVR lives well in things such as Arduinos with hobbyists at least. Or am I mistaken?</p>
			</div>
			<div id = "comment-2642" class = "comment">
				<p>I do not work for TI or any chip designer. The reason I'm so adamant about this is that I'm recently out of school and in the robotics classes they teach arcane microcontrollers and then in actual side projects students just use ARM because it's better... Schools need to get with the times here.</p>
			</div>
			<div id = "comment-2653" class = "comment">
				<p>Is the reason schools tend to use AVR more on the line that is far cheaper and more suitable for hobbyist projects? Open-sourced PCB to tinker around such as Arduino or other reasons? The user Crake mentions that *"AVR can take a lot of abuse and can sink and source more current without burning out than the PIC microcontrollers"*. You may have some good point but more open-source spirit can be an essential reason for academic use.</p>
			</div>
			</div>
				<textarea id = "speech-68" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-68">
					<img id="start_img-68" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-68">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>