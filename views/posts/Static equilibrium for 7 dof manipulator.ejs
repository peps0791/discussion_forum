<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Static equilibrium for 7 dof manipulator
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-2889" class = "post">
			<h2>Question</h2>
			<div id="vote-2889" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 256</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Static equilibrium for 7 dof manipulator</h2>
<p>I have a 7 dof manipulator (Kuka LBR4+) and would like to calculate the joint torques needed to keep the arm in a static equilibrium. In most books the transposed jacobian is used to map the forces applying on the end effector to the joint torques.</p>

<p>$\tau = J^T\cdot F$</p>

<p>That however doesn't take the mass of the links into account. Is there a way to calculate the needed torques for a given configuration so that, assuming an ideal case, by setting these torques the arm will be in a static equilibrium?</p>

<p>cheers</p>

<p><strong>EDIT:</strong></p>

<p>For everybody interested, i found a solution to this problem in <em>Introduction to Robotics - Third Edition</em> by John J. Craig on Page 175-176. It is done with the aid of the iterative Newton-Euler dynamics algorithm. The actual trick is, to set all velocities and accelerations to zero except for the base acceleration. The base acceleration will be $^0 \dot v_0 = G$, where G has the magnitude of the gravity vector but points in opposite direction. This is equivalent to saying that the base of the robot is accelerating upwards with 1 g and this upward acceleration causes exactly the same effect on the link as gravity would.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-2889" data-toggle = "popover">
				<p>user name : Johnny Mudcrab</p>
				<p> user reputation : 98</p>
				<p class = "tagcontent" id = "usertaginfo-2889">{'None': 3, 'manipulator': 4, 'simulator': 3, 'localization': 9, 'torque': 4, 'motion': 9, 'particle-filter': 6, 'mobile-robot': 9}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2889" class = 'collapse'>
			</div>
				<textarea id = "speech-2889" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2889">
					<img id="start_img-2889" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2889">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-2895"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2895" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>If you represent the links by their center of mass you should be able to calculate the torque applied at each joint by the weight of the arm. Then your tau on the left hand side would be the tau_control that you're setting minus the tau_links which is the torques placed on each joint by the links, i.e. tau = tau_control - tau_links.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2895" data-toggle = "popover">
				<p>user name : Andrew Capodieci</p>
				<p> user reputation : 826</p>
				<p class = "tagcontent" id = "usertaginfo-2895">{'None': 54}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2895" class = 'collapse'>
			</div>
				<textarea id = "speech-2895" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2895">
					<img id="start_img-2895" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2895">Comment</button>
			<br><div id = "ans-2896"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2896" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>This is something that i have looked for in standard textbooks and have not found much information on it.  I am not sure if it is because they are geared towards industrial arms which are typically not backdrivable.  (meaning once you reach a position, you can essentially turn off your motors and the arm will continue to hold position).  Or if they don't care about this level of control.  (meaning they have low-level controllers that handle it and the arm will "know what to do").  Or if it is too simple of a problem to worry about.</p>

<p>nevertheless, i wrote some code to calculate these torques for a simulated robot.  the output seems correct, although it was never tested.  This is python code for OpenRAVE.  </p>

<pre><code># Calculate the center of mass past the current joint.
# This assumes the mass is specified properly for each link.
def get_COM_past_joint(joint):
    mass = 0.0
    com = np.array([0.0, 0.0, 0.0])
    for i in range(joint.GetDOFIndex(), robot.GetDOF()):
        j = robot.GetJointFromDOFIndex(i)
        link = j.GetHierarchyChildLink()
        mass += link.GetMass()
        com += link.GetMass() * link.GetGlobalCOM()
    # todo: add mass in robot's hand
    com /= mass    
    return (mass, com)

# Calculate the torque required to hold joints in current configuration.
# Procedure:
#  1. calculate the center of mass "past" the joint
#  2. find the closest perpendicular distance between the COM and joint axis
#  3. cross the joint axis with gravity vector
#  4. cross the perpendicular distance vector with gravity vector
#  5. return mass * direction * magnitude of both crosses 
def get_static_joint_torque(joint):
    (mass, com) = get_COM_past_joint(joint)
    anchor = joint.GetAnchor()
    axis = joint.GetAxis()
    joint_to_com_closest = (anchor - com) - np.dot((anchor - com), axis) * axis
    axis_cross_k = np.cross(axis, np.array([0, 0, -1]))
    joint_to_com_closest_cross_k = np.cross(joint_to_com_closest, np.array([0, 0, -1]))
    direction = np.sign(np.dot(axis, joint_to_com_closest_cross_k))
    return mass*direction*np.linalg.norm(axis_cross_k)*np.linalg.norm(joint_to_com_closest_cross_k)
</code></pre>

<p>EDIT: I recently found out that OpenRAVE does a more advanced form of this calculation already.  (And their units are correct too).  </p>

<pre><code>robot.SetDOFValues(dofvalues)
robot.SetDOFVelocities(dofvelocities)
torques = robot.ComputeInverseDynamics(dofaccelerations)
</code></pre>

<p>or</p>

<pre><code>torqueconfiguration, torquecoriolis, torquegravity = robot.ComputeInverseDynamics(dofaccelerations,None,returncomponents=True)
</code></pre>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2896" data-toggle = "popover">
				<p>user name : Ben</p>
				<p> user reputation : 3608</p>
				<p class = "tagcontent" id = "usertaginfo-2896">{'None': 277, 'inverse-kinematics': 3, 'accelerometer': 5, 'calibration': 10, 'kinematics': 14, 'robotic-arm': 8, 'jacobian': 6, 'dh-parameters': 8, 'imu': 5, 'sensors': 5}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-2896">Load Comments</button></br>
			<div id = "commentsection-2896" class = 'collapse'>
			<div id = "comment-5309" class = "comment">
				<p>Looks good to me! Thanks! However, you might miss to multiply  the return value with the gravity constant in order to return the torque in [Nm]. At the moment its just [kg] times [m].</p>
			</div>
			<div id = "comment-16335" class = "comment">
				<p>You are correct, my units are not standard.</p>
			</div>
			</div>
				<textarea id = "speech-2896" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2896">
					<img id="start_img-2896" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2896">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>