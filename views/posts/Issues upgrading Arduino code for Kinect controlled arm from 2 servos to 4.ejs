<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Issues upgrading Arduino code for Kinect controlled arm from 2 servos to 4
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1290" class = "post">
			<h2>Question</h2>
			<div id="vote-1290" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 525</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Issues upgrading Arduino code for Kinect controlled arm from 2 servos to 4</h2>
<p>I have arduino code for operating 2 servos, but we are using 4 servos and am having trouble getting the other 2 to talk. </p>

<p>The program so far as I can make out is that the angles for the servos that are calculated by the processing side are being sent out one after the other (shoulder, elbow, wrist, wrist2) then repeated. The arduino program gets this data and stores in into an array and then is written to the pin of the appropriate array segment. So 0 is shoulder, 1 is elbow, 2 is wrist and 3 is wirst2. </p>

<p>I can easily get 2 servos to run with no problem.  But when I try and add 1 or 2 more we get no response.  Can anyone please help me to get the other 2 servos to work?  My knowledge on this code is rather limited, so any help is appreciated.  </p>

<p>processing Data being sent to the arduino:</p>

<pre><code>byte out[] = new byte[4];
out[0] = byte(shoulderAngle);
out[1] = byte(elbowAngle);
out[2] = byte(wristAngle);
out[3] = byte(wrist2Angle);
port.write(out);
</code></pre>

<p>Arduino Code:</p>

<pre><code>#include &lt;Servo.h&gt;

//Declares the servos.
Servo shoulder;
Servo elbow;
Servo wrist;
Servo wrist2;

//Setup servo positions.
int nextServo = 0;
int servoAngles[] = {0, 0};

//Define pins for each servo.
void setup()
  {
  shoulder.attach(50);
  elbow.attach(51);
  wrist.attach(52);
  wrist2.attach(53);

  Serial.begin(9600);
}

void loop()
{
  if(Serial.available())
  {
    int servoAngle = Serial.read();  

    servoAngles[nextServo] = servoAngle;  
    nextServo++;  

    if(nextServo &gt; 3)
    {
      nextServo = 0;  
    }

    shoulder.write(servoAngles[0]);
    elbow.write(servoAngles[1]);
    wrist.write(servoAngles[2]);
    wrist2.write(servoAngles[3]);
  }
}
</code></pre>

<p>Sorry for the lengthy post but have been stuck for a while. </p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1290" data-toggle = "popover">
				<p>user name : Fraxagoracul</p>
				<p> user reputation : 11</p>
				<p class = "tagcontent" id = "usertaginfo-1290">{'kinect': 2, 'None': 0, 'robotic-arm': 2, 'arduino': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1290">Load Comments</button></br>
			<div id = "commentsection-1290" class = 'collapse'>
			<div id = "comment-2864" class = "comment">
				<p>Change `int servoAngles[] = {0, 0};` to `int servoAngles[4];` or to  `int servoAngles[] = {0,0,0,0};`  Also, run a test with the original code but 51 changed to 52 or 53 to check hardware</p>
			</div>
			</div>
				<textarea id = "speech-1290" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1290">
					<img id="start_img-1290" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1290">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1292"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1292" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I can see two potential problems.</p>

<p>The first is that you're only declaring the servoAngles array to have two elements:</p>

<pre><code>int servoAngles[] = {0, 0};
</code></pre>

<p>Your code is equivalent to this:</p>

<pre><code>int servoAngles[2];
servoAngles[0] = 0;
servoAngles[1] = 0;
</code></pre>

<p>Later, you're assigning values to <code>servoAngles[2]</code> and <code>servoAngles[3]</code>, which are out of the bounds of your original array -- this is very bad practice.  Instead, you should be declaring the servoAngles array the same way you're declaring and initializing your <code>byte out[]</code> array -- it should be declared and/or initialized with 4 elements, as you require.</p>

<p>The other problem that I can see is that you're reading 1 <code>servoAngle</code> value every time you loop, but you're writing all 4.  That means that every 4th byte is automatically going to be sent to the same servo, regardless of whether things get out of sync.  (You would recognize this problem as the proper angle being put at the wrong joint.)</p>

<p>Normally, you'd read all 4 values at once (followed by a newline, or some special sequence of characters that indicates the end of the info) and write all 4 values at once.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1292" data-toggle = "popover">
				<p>user name : Ian</p>
				<p> user reputation : 9640</p>
				<p class = "tagcontent" id = "usertaginfo-1292">{'planning': 10, 'None': 809, 'power': 1, 'algorithm': 10, 'battery': 1, 'slam': 7, 'coverage': 10, 'mobile-robot': 9, 'sensors': 9}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1292">Load Comments</button></br>
			<div id = "commentsection-1292" class = 'collapse'>
			<div id = "comment-2866" class = "comment">
				<p>I would also recommend testing your code by ignoring the serial port, and sending a series of pre-scripted angles to your arm.  In other words, separate the code that reads the serial port from the code that sets the angles.</p>
			</div>
			<div id = "comment-2869" class = "comment">
				<p>Ok thank you for your input. That does help a lot. So for reading all 4 values at once would the best way be to put them all into the serial buffer, write them to the array and then flush the buffer to start over again?</p>
			</div>
			<div id = "comment-2870" class = "comment">
				<p>It depends on the format of the data that you're expecting, but rather than read a single byte at a time you could use use [ReadBytes](http://arduino.cc/en/Serial/ReadBytes) or [ReadBytesUntil](http://arduino.cc/en/Serial/ReadBytesUntil) to read multiple bytes.  Then when that function returns, write all 4 values to their respective servos.</p>
			</div>
			<div id = "comment-2871" class = "comment">
				<p>OK so made some changes. Haven't had to test it out yet. But can you tell me if i'm going in the right direction? byte servoAngle[4];           Serial.readBytes((char*)servoAngles, 4); Then write to the servos.</p>
			</div>
			<div id = "comment-2872" class = "comment">
				<p>Got the program working smoothly. Thanks a lot for sending me in the right direction.</p>
			</div>
			<div id = "comment-2873" class = "comment">
				<p>That code looks like it will work.  Keep in mind that without some sort of delimiting character between the 4 bytes that you're reading, you have no way to tell whether the bytes you read are aligned with the bytes that are sent to you.  In other words, if they send `1234|1234|1234|1` (those vertical separations are logical divisions, not actual bytes sent) and you miss the first byte, you'll read it as `2341|2341|2341` -- and your program will have no knowledge that things are out of sync, nor of how to fix the situation.</p>
			</div>
			<div id = "comment-2874" class = "comment">
				<p>Got it working well. Here's a link of a video of the arm working. http://www.youtube.com/watch?v=wEp0edfkdKI</p>
			</div>
			<div id = "comment-2875" class = "comment">
				<p>Nice demo, thanks for sharing!</p>
			</div>
			</div>
				<textarea id = "speech-1292" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1292">
					<img id="start_img-1292" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1292">Comment</button>
			<br><div id = "ans-5290"  class = "post">
				<h2>Answer</h2>
			<div id="vote-5290" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I don't understand the purpose of the array?  Why do you need to store the angle values?</p>

<p>Why not just to this?</p>

<blockquote>
  <p>elbow.write(Serial.read());</p>
</blockquote>

<p>That said the over all design has a big problem.  It is very easy to get out of sync if a byte is dropped.  Better to write out six byte blocks with the first two bytes of each block being a unique sync word.  Use some impossible value like x00ff.   Then you wait for a sync word and then read the next four bytes.</p>

<p>The other more complex but better method is to have a checksum at the end of the block, verify the block is correct and only then write out the angles.   Using both a sync word AND a checksum makes it nearly bomb proof.  A written you data can have errors and you would never be able to know.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-5290" data-toggle = "popover">
				<p>user name : user3150208</p>
				<p> user reputation : 431</p>
				<p class = "tagcontent" id = "usertaginfo-5290">{'None': 27}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-5290" class = 'collapse'>
			</div>
				<textarea id = "speech-5290" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5290">
					<img id="start_img-5290" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5290">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>