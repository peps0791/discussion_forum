<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Image Based Visual Servoing algorithm in MATLAB
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8008" class = "post">
			<h2>Question</h2>
			<div id="vote-8008" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 667</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Image Based Visual Servoing algorithm in MATLAB</h2>
<p>I was trying to implement the IBVS algorithm (the one explained in the Introduction <a href="http://www.irisa.fr/lagadic/visp/documentation/visp-2.10.0/tutorial-ibvs.html" rel="nofollow noreferrer">here</a>) in MATLAB myself, but I am facing the following problem : The algorithm seems to work only for the cases that the camera does not have to change its orientation in respect to the world frame.For example, if I just try to make one vertex of the initial (almost) square go closer to its opposite vertex, the algorithm does not work, as can be seen in the following image</p>

<p><a href="https://i.stack.imgur.com/LeVwK.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/LeVwK.jpg" alt="enter image description here"></a></p>

<p>The red x are the desired projections, the blue circles are the initial ones and the green ones are the ones I get from my algorithm.</p>

<p>Also the errors are not exponentially dereasing as they should.</p>

<p><a href="https://i.stack.imgur.com/lbdoH.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/lbdoH.jpg" alt="enter image description here"></a></p>

<p>What am I doing wrong? I am attaching my MATLAB code which is fully runable. If anyone could take a look, I would be really grateful. I took out the code that was performing the plotting. I hope it is more readable now. Visual servoing has to be performed with at least 4 target points, because else the problem has no unique solution. If you are willing to help, I would suggest you take a look at the <code>calc_Rotation_matrix()</code> function to check that the rotation matrix is properly calculated, then verify that the line <code>ds = vc;</code> in <code>euler_ode</code> is correct. The camera orientation is expressed in Euler angles according to <a href="http://www.coppeliarobotics.com/helpFiles/en/eulerAngles.htm" rel="nofollow noreferrer">this</a> convention. Finally, one could check if the interaction matrix <code>L</code> is properly calculated.</p>

<pre><code>function VisualServo()

    global A3D B3D C3D D3D A B C D Ad Bd Cd Dd

    %coordinates of the 4 points wrt camera frame
    A3D = [-0.2633;0.27547;0.8956];
    B3D = [0.2863;-0.2749;0.8937];
    C3D = [-0.2637;-0.2746;0.8977];
    D3D = [0.2866;0.2751;0.8916];

    %initial projections (computed here only to show their relation with the desired ones) 
    A=A3D(1:2)/A3D(3);
    B=B3D(1:2)/B3D(3);
    C=C3D(1:2)/C3D(3);
    D=D3D(1:2)/D3D(3);

    %initial camera position and orientation
    %orientation is expressed in Euler angles (X-Y-Z around the inertial frame
    %of reference)
    cam=[0;0;0;0;0;0];

    %desired projections
    Ad=A+[0.1;0];
    Bd=B;
    Cd=C+[0.1;0];
    Dd=D;

    t0 = 0;
    tf = 50;

    s0 = cam;

    %time step
    dt=0.01;
    t = euler_ode(t0, tf, dt, s0);

end


function ts = euler_ode(t0,tf,dt,s0)

    global A3D B3D C3D D3D Ad Bd Cd Dd 

    s = s0;
    ts=[];
    for t=t0:dt:tf
        ts(end+1)=t;
        cam = s;

        % rotation matrix R_WCS_CCS
        R = calc_Rotation_matrix(cam(4),cam(5),cam(6));
        r = cam(1:3);

        % 3D coordinates of the 4 points wrt the NEW camera frame
        A3D_cam = R'*(A3D-r);
        B3D_cam = R'*(B3D-r);
        C3D_cam = R'*(C3D-r);
        D3D_cam = R'*(D3D-r);

        % NEW projections
        A=A3D_cam(1:2)/A3D_cam(3);
        B=B3D_cam(1:2)/B3D_cam(3);
        C=C3D_cam(1:2)/C3D_cam(3);
        D=D3D_cam(1:2)/D3D_cam(3);


        % computing the L matrices
        L1 = L_matrix(A(1),A(2),A3D_cam(3));
        L2 = L_matrix(B(1),B(2),B3D_cam(3));
        L3 = L_matrix(C(1),C(2),C3D_cam(3));
        L4 = L_matrix(D(1),D(2),D3D_cam(3));
        L = [L1;L2;L3;L4];


        %updating the projection errors
        e = [A-Ad;B-Bd;C-Cd;D-Dd];

        %compute camera velocity
        vc = -0.5*pinv(L)*e;

        %change of the camera position and orientation
        ds = vc;

        %update camera position and orientation
        s = s + ds*dt;


    end  
    ts(end+1)=tf+dt;
end

function R = calc_Rotation_matrix(theta_x, theta_y, theta_z)

    Rx = [1 0 0; 0 cos(theta_x) -sin(theta_x); 0 sin(theta_x) cos(theta_x)];
    Ry = [cos(theta_y) 0 sin(theta_y); 0 1 0; -sin(theta_y) 0 cos(theta_y)];
    Rz = [cos(theta_z) -sin(theta_z) 0; sin(theta_z) cos(theta_z) 0; 0 0 1];

    R = Rx*Ry*Rz;

end

function L = L_matrix(x,y,z)

    L = [-1/z,0,x/z,x*y,-(1+x^2),y;
       0,-1/z,y/z,1+y^2,-x*y,-x];
end
</code></pre>

<p>Cases that work:</p>

<pre><code>A2=2*A;
B2=2*B;
C2=2*C;
D2=2*D;

A2=A+1;
B2=B+1;
C2=C+1;
D2=D+1;

A2=2*A+1;
B2=2*B+1;
C2=2*C+1;
D2=2*D+1;
</code></pre>

<p>Cases that do NOT work:
Rotation by 90 degrees and zoom out (zoom out alone works, but I am doing it here for better visualization)</p>

<pre><code>A2=2*D;
B2=2*C;
C2=2*A;
D2=2*B;
</code></pre>

<p><a href="https://i.stack.imgur.com/0Xhde.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/0Xhde.jpg" alt="enter image description here"></a></p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8008" data-toggle = "popover">
				<p>user name : Controller</p>
				<p> user reputation : 89</p>
				<p class = "tagcontent" id = "usertaginfo-8008">{'control': 8, 'None': 0, 'cameras': 6, 'algorithm': 5, 'simulator': 0, 'localization': 1, 'torque': 1, 'mapping': 0, 'simulation': 1, 'filter': 5, 'visual-servoing': 13, 'exploration': 1, 'matlab': 5, 'dynamics': 1, 'motion-planning': 1, 'software': 1}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8008" class = 'collapse'>
			</div>
				<textarea id = "speech-8008" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8008">
					<img id="start_img-8008" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8008">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8011"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8011" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>So, to be perfectly honest, I don't understand the application, but I'm very good with Matlab and controls. </p>

<p>That said, your code is really hard on the eyes. I'm not sure why you would jump straight to tracking 4 points before you got it working for 1, but that could be part of your application (again:ignorant). </p>

<p>It's hard to read mostly because of your naming of so many very similar variables and your inconsistent use of matrix operations. For instance, you define A through D as 3D(1:2)/3D(3) in your main code, but then you define x1,y1,x2...y4 in your euler function despite the fact that they are calculated the same way. </p>

<p>I would recommend you consider a structure array. Consider the following:</p>

<pre><code>point(1).image = point(1).world(1:2)/point(1).world(3);
</code></pre>

<p>This does several things for you:</p>

<ol>
<li>Your variable names become readable. </li>
<li>You can use as many or few points as you want - poll how many points you have with <code>numel(points)</code> and you can add more points with <code>points(end+1)=...</code>.</li>
<li>You can operate on all of the points with one operation inside a <code>for</code> loop - <code>points(i).var = ...</code>.</li>
<li><strong>Most importantly</strong> - you can pass everything to do with your points in and out of your function as a function parameter rather than declaring them as global. </li>
</ol>

<p>FINALLY - about your problem, the only thing I can see is at the last step - $v_c = -\lambda L_x e$. I don't see where this is calculated, but as this is a control problem I must assume that $\lambda$ refers to an eigenvalue, which are typically the poles of the system. </p>

<p>The poles dictate system response - a negative pole indicates a stable system, where a positive pole indicates an unstable system. Because your equation shows a <strong>negative</strong> $\lambda$, I would think that the entire term should be positive for a stable controller. Your term is negative, so that might be the cause of your problem, but again:ignorant. </p>

<p>SO, sorry for the lecture, but I think you might be finding that messy code is hard to debug. If you could find the derivation of the equation then I'd be happy to take a look at it, but I'm reading/posting from my phone and the TeX equations on that page are microscopic relative to the regular text so it's very hard for me to read. Try flipping the sign on your camera speed and if that doesn't fix try cleaning up your code and see if you've got some transposition error somewhere. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8011" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-8011">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8011">Load Comments</button></br>
			<div id = "commentsection-8011" class = 'collapse'>
			<div id = "comment-12779" class = "comment">
				<p>The derivation of the control law is described shortly here http://www.irisa.fr/lagadic/visp/documentation/visp-2.10.0/tutorial-ibvs.html. I think that the problem lies either with the derivation of the rotation matrix or with the update of the camera position since when there is no rotation required everything is ok.</p>
			</div>
			<div id = "comment-12780" class = "comment">
				<p>I simplified the code in my initial post a little bit and I added information about which part probably causes the problem. Thank you for taking the time to reply.</p>
			</div>
			<div id = "comment-12781" class = "comment">
				<p>You can also find another article that describes the control law in its first 2 pages here http://www-cvr.ai.uiuc.edu/~seth/ResPages/pdfs/ChaHut06.pdf</p>
			</div>
			</div>
				<textarea id = "speech-8011" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8011">
					<img id="start_img-8011" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8011">Comment</button>
			<br><div id = "ans-8035"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8035" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">-2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>This problem is called Chaumette Conundrum and it is a big negative of IBVS. You should try other VS algorithms.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8035" data-toggle = "popover">
				<p>user name : user10554</p>
				<p> user reputation : 1</p>
				<p class = "tagcontent" id = "usertaginfo-8035">{'None': -2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8035">Load Comments</button></br>
			<div id = "commentsection-8035" class = 'collapse'>
			<div id = "comment-12806" class = "comment">
				<p>Welcome to Robotics.SE - could you please expand your answer, perhaps explaining what you mean?</p>
			</div>
			<div id = "comment-21737" class = "comment">
				<p>We are looking for comprehensive answers that provide some explanation and context. Very short answers cannot do this, so please edit your answer to explain why it is right, ideally with citations. Answers that don't include explanations may be removed.</p>
			</div>
			</div>
				<textarea id = "speech-8035" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8035">
					<img id="start_img-8035" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8035">Comment</button>
			<br><div id = "ans-8415"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8415" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You are using a target set of image points that are impossible to achieve. Simply shifting two of the points in one direction within image coordinates does not correspond to a rigid transformation of your 3D set of points. It may make sense for orthographic projections in CAD software, but cameras have perspective so you need to include that in your transformation -- if the plate is rotating towards the camera the shifted points will also move outwards in the vertical direction. Here is a figure to clarify what I mean:</p>

<p><a href="https://i.stack.imgur.com/sXB36.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/sXB36.png" alt="enter image description here"></a></p>

<p>The easiest fix is to actually generate a true transformation in 3D (rotation and/or translation), then determine the new pixel coordinates and use that for testing -- this also gives you something against which you can check your solved camera transformation.</p>

<p>It also explains why zooming and translation work fine.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8415" data-toggle = "popover">
				<p>user name : Brian Lynch</p>
				<p> user reputation : 1237</p>
				<p class = "tagcontent" id = "usertaginfo-8415">{'None': 85}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8415" class = 'collapse'>
			</div>
				<textarea id = "speech-8415" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8415">
					<img id="start_img-8415" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8415">Comment</button>
			<br><div id = "ans-12340"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12340" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There is a mistake in calculating ds; it should be:
 ds = L*vc instead of ds = vc</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12340" data-toggle = "popover">
				<p>user name : user16915</p>
				<p> user reputation : 1</p>
				<p class = "tagcontent" id = "usertaginfo-12340">{'None': 0}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-12340">Load Comments</button></br>
			<div id = "commentsection-12340" class = 'collapse'>
			<div id = "comment-21736" class = "comment">
				<p>Welcome to *Robotics* user16915. Thanks for your answer but we are looking for comprehensive answers that provide some explanation and context. One-line answers cannot do this, so please edit your answer to explain why it is right, ideally with citations. Answers that don't include explanations may be removed.</p>
			</div>
			</div>
				<textarea id = "speech-12340" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12340">
					<img id="start_img-12340" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12340">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>