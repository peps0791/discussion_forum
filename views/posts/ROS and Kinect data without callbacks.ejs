<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>ROS and Kinect data without callbacks
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8585" class = "post">
			<h2>Question</h2>
			<div id="vote-8585" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 121</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>ROS and Kinect data without callbacks</h2>
<p>I'd like to get rgb and depth data from a kinect, and I found a little tutorial here: <a href="http://wiki.ros.org/cv_bridge/Tutorials/ConvertingBetweenROSImagesAndOpenCVImagesPython" rel="nofollow">http://wiki.ros.org/cv_bridge/Tutorials/ConvertingBetweenROSImagesAndOpenCVImagesPython</a>. It's fine, but what I'd like is to be able to get the data on demand, and not as whenever the callback is triggered, assuming I won't try to get the data faster than it can be available. I'd appreciate any help - do go easy on the ROS jargon, I'm still learning...Thanks.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8585" data-toggle = "popover">
				<p>user name : Ben</p>
				<p> user reputation : 101</p>
				<p class = "tagcontent" id = "usertaginfo-8585">{'kinect': 0, 'None': 0, 'ros': 0}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8585" class = 'collapse'>
			</div>
				<textarea id = "speech-8585" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8585">
					<img id="start_img-8585" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8585">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8587"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8587" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You should simply use the callback method since you can have an object in your code that is always updated with the latest measurement. Then you can simply poll the measurement in that object whenever you want (say in some while loop running at a given rate). I notice you are linking to help related to using Python, whereas I am more familiar with coding ROS nodes in C++. If you were doing that then your code might look something like:</p>



<pre><code>#include...

class KinectSubscriber {
 ...
}

int main(...) {
 ...
 KinectSubscriber MyKinectSub;
 ...
 while (ros::ok()) {
  ...
  data = MyKinectSub.data;
  ...
 }
}
</code></pre>

<p>Of course you don't have to access the data at each iteration of the loop, you could use some conditional statements so that the data is polled only under certain circumstances.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8587" data-toggle = "popover">
				<p>user name : Brian Lynch</p>
				<p> user reputation : 1237</p>
				<p class = "tagcontent" id = "usertaginfo-8587">{'None': 85}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8587">Load Comments</button></br>
			<div id = "commentsection-8587" class = 'collapse'>
			<div id = "comment-13999" class = "comment">
				<p>Thanks @agold, I did that too but not sure why it didn't save!</p>
			</div>
			<div id = "comment-14003" class = "comment">
				<p>Thanks. Only problem is, I'm not sure how the callback gets called with "data".</p>
			</div>
			<div id = "comment-14004" class = "comment">
				<p>The callback function will be inside the class definition, with the whole point being that it is called whenever there is new data available on the topic to which you are subscribing. That means that the object (MyKinectSub in my example) will always have the most recent data in its structure -- so you don't have to think about the callback, it works in the background as needed and then you grab the data from that object when you want.</p>
			</div>
			</div>
				<textarea id = "speech-8587" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8587">
					<img id="start_img-8587" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8587">Comment</button>
			<br><div id = "ans-8589"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8589" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Until you learn more about ROS the best approach is to use a callback. You can copy the data to a <a href="https://docs.python.org/2/reference/simple_stmts.html#the-global-statement" rel="nofollow">global variable</a> and use that in your main program if it helps you reason about the data flow better.   </p>

<p>If you are trying to do this to reduce network congestion, your best bet is to change the driver parameters to reduce the framerate or resolution. For the openni_camera package the parameters <a href="http://wiki.ros.org/openni_camera#openni_camera.2BAC8-fuerte.Parameters" rel="nofollow">are here</a>. Other solutions exist but require either modifying the ROS drivers or not using ROS at all.</p>

<p>As a side note; if you don't have a specific reason to use ROS, don't use it. It will save some headaches and your program will be faster and simpler besides. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8589" data-toggle = "popover">
				<p>user name : hauptmech</p>
				<p> user reputation : 2621</p>
				<p class = "tagcontent" id = "usertaginfo-8589">{'battery': 2, 'None': 220, 'lithium-polymer': 2}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8589" class = 'collapse'>
			</div>
				<textarea id = "speech-8589" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8589">
					<img id="start_img-8589" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8589">Comment</button>
			<br><div id = "ans-10269"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10269" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>If u like to get rgb and depth or euclidean space coordinates of any point from the kinect sensor than u can try this codes in ros node:</p>

<pre><code>void
cloud_cb (const sensor_msgs::PointCloud2ConstPtr&amp; input)
{
 pcl::PointCloud&lt;pcl::PointXYZRGB&gt; output;
 pcl::fromROSMsg(*input,output );
 pcl::PointXYZ P[479][639];
    for(int raw = 0;raw&lt;479;raw++)
    {
        for(int col = 0;col&lt;639;col++)
        {
            P[raw][col] = output.at(col,raw);
        }
    }
 sensor_msgs::PointCloud2 cloud;
 pcl::toROSMsg(output,cloud);
 pub.publish (cloud);
}
</code></pre>

<p>Here p[raw][col] is the main structure which contains the rgb data and depth along with x,y coordinate data. To access the rgb data just use <code>p[raw][col].r</code> ... to access depth data use <code>p[raw][col].z</code>. Was this the answer ur looming for.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10269" data-toggle = "popover">
				<p>user name : Dinesh Lama</p>
				<p> user reputation : 160</p>
				<p class = "tagcontent" id = "usertaginfo-10269">{'control': 0, 'stability': 1, 'None': 2, 'inverse-kinematics': 0, 'arduino': 4, 'python': 1, 'gazebo': 0, 'lidar': 0, 'servomotor': 0, 'motor': 0, 'real-time': 1, 'actuator': 0, 'serial': 1, 'ros': 2, 'servos': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-10269" class = 'collapse'>
			</div>
				<textarea id = "speech-10269" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10269">
					<img id="start_img-10269" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10269">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>