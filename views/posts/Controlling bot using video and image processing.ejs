<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Controlling bot using video and image processing
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1877" class = "post">
			<h2>Question</h2>
			<div id="vote-1877" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 760</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Controlling bot using video and image processing</h2>
<p>I am going to start a project on controlling robots using hand gestures.
Though I have used MATLAB for this purpose earlier, I realized it is extremely slow for any practical real-time system.
I am currently planning to use OpenCV for this purpose.
I want suggestions on, if OpenCV is the best alternative, are there any other alternatives and if I use OpenCV, which language should I go for, C, C++ or Python?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1877" data-toggle = "popover">
				<p>user name : uncreative</p>
				<p> user reputation : 6</p>
				<p class = "tagcontent" id = "usertaginfo-1877">{'None': 0, 'real-time': 1}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1877">Load Comments</button></br>
			<div id = "commentsection-1877" class = 'collapse'>
			<div id = "comment-3864" class = "comment">
				<p>Do you mean "real-time system" in the sense that you're using an [RTOS](http://en.wikipedia.org/wiki/Real-time_operating_system), or is it just that MATLAB isn't processing enough frames-per-second for your application?</p>
			</div>
			<div id = "comment-3991" class = "comment">
				<p>No as of now the project is not using an RTOS</p>
			</div>
			<div id = "comment-3992" class = "comment">
				<p>Reading your question again, it sounds like you're hesitating to even try MATLAB before ruling it out as "too slow".  What gesture-recognition technique do you plan to use in MATLAB that you know in advance to be too slow to be practical?</p>
			</div>
			</div>
				<textarea id = "speech-1877" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1877">
					<img id="start_img-1877" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1877">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-2059"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2059" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>If starting out with programming use C/C++ as most of the examples using OpenCV on the internet use that language but there are interfaces for many other languages. I.E. Java, Python, C++, C <BR>
More details: <a href="http://opencv.org/" rel="nofollow">http://opencv.org/</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2059" data-toggle = "popover">
				<p>user name : OricTosh</p>
				<p> user reputation : 86</p>
				<p class = "tagcontent" id = "usertaginfo-2059">{'None': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2059" class = 'collapse'>
			</div>
				<textarea id = "speech-2059" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2059">
					<img id="start_img-2059" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2059">Comment</button>
			<br><div id = "ans-2061"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2061" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Though I did not use hand gestures, I used color based object tracking for my undergrad project. I did it through MATLAB as at that point of time I had no idea about Open-CV. I am guessing you will have a laptop for image processing and send commands run-time to your robot.
Ok first thing, sending serial commands though the serial port / USB port / wifi to your robot will be damn easy (at-least in the computer part - sending). You can do your gesture recognition using low resolution say 240*240. This will be fast considering a moderately new machine. <strong>MATLAB is itself not slow</strong>. It is your <strong>implementation and algorithms</strong> used which determines slow or fast. </p>

<p>Now if you want to do the entire thing in a mobile platform say Android, MATLAB is out of the question. Or if you are using any embedded platform then Open-CV is the way to go. You will have to code the communication part of things too as OpenCV does not have any serial communication or related toolbox. But even with Open-CV your <strong>implementation and algorithms</strong> will determine slow or fast.</p>

<p>In open-CV 2.0 the new C++ interface is much better and also faster than the old openCV 1.0 functions. You also have OO with OpenCV 2.0 and using CVMat is much more related and easy like MATLAB than the native IPLImage interface.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2061" data-toggle = "popover">
				<p>user name : Soumyajit</p>
				<p> user reputation : 121</p>
				<p class = "tagcontent" id = "usertaginfo-2061">{'None': 2}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2061" class = 'collapse'>
			</div>
				<textarea id = "speech-2061" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2061">
					<img id="start_img-2061" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2061">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>