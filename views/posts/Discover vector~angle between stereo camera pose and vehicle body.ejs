<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Discover vector~angle between stereo camera pose and vehicle body
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-7493" class = "post">
			<h2>Question</h2>
			<div id="vote-7493" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 83</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Discover vector~angle between stereo camera pose and vehicle body</h2>
<p>I have a calibrated stereo camera system that is mounted in a passenger car which means I am able to retrieve a point cloud from my stereo image. However, I need to find how well is the camera aligned with the vehicle - read: if the camera is perfectly facing forwards or not. I guess it will never perfectly face forwards so I need to get the angle (or rather 3D vector) between "perfect forwards" and "actual camera pose".</p>

<p>What came to my mind is to drive the vehicle possibly perfectly forwards and use stereo visual odometry to detect the angle of vehicle movement as seen by camera (which is the vector I am looking for). The <a href="http://www.cvlibs.net/software/libviso/" rel="nofollow">LIBVISO</a> library for visual odometry can output a 3D vector of movement change from one stereo frame to another which could be used to detect the needed vector.</p>

<p>The only problem may be to actually be able to drive perfectly forward with a car. Maybe an RTK GPS could be used to check for this or for correction. Will anyone have a suggestion on how to proceed?</p>

<p>The stereo camera I use consists of 2 separate Point Grey USB cameras. Each camera is mounted on a windshield inside the car with a mount like <a href="http://drzaky-navigace.heureka.cz/truecam-a3-prisavny-drzak/" rel="nofollow">this one</a>. The cameras were calibrated after mounting. The stereo baseline (distance between the cameras) is about 50 cm.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-7493" data-toggle = "popover">
				<p>user name : Kozuch</p>
				<p> user reputation : 338</p>
				<p class = "tagcontent" id = "usertaginfo-7493">{'stereo-vision': 12, 'structure-from-motion': 1, 'autonomous-car': 0, 'encoding': 2, 'precise-positioning': 0, 'hardware': 0, 'mobile-robot': 6, 'monocular': 2, 'rotation': 2, 'rcservo': 0, 'self-driving': 0, 'cameras': 2, 'point-cloud': 1, 'kinect': 1, 'opencv': 1, 'electronics': 1, 'gazebo': 0, 'gps': 7, 'engine': 1, 'odometry': 5, 'None': 8, 'electric': 1, 'localization': 0, 'wheeled-robot': 2, 'simulator': 1, 'visual-odometry': 2, 'gnss': 0, 'sensors': 2, 'steering': 0, '3d-reconstruction': 1, 'computer-vision': 12, 'algorithm': 2, 'calibration': 4, 'scale-model': 1, 'simulation': 0, 'servomotor': 0, 'sensor-fusion': 2, 'navigation': 0, 'software': 0}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7493" class = 'collapse'>
			</div>
				<textarea id = "speech-7493" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7493">
					<img id="start_img-7493" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7493">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-7495"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7495" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Sounds to me like you just need a one-shot test to check (stereo) camera alignment. I would just get a sheet of plywood screwed to a frame you can orient to the car. I would do this rather than trying to move the car because car micro motions are a pain. </p>

<p>So, with some crude ASCII art:
O===O L</p>

<p>where the L is the plywood rig in front of your car. As long as you've taken care to make the rig square you can measure the distance between the edges and key features on the car. This ensures the plywood is square to the front of the car. </p>

<p>All of this is so you can get a point cloud of a flat sheet.</p>

<p>:EDIT:</p>

<p>I had originally said find the normal of the sheet, this is the direction the camera is pointing. After some thought last night, the normal of the sheet is going to be the mirror of the camera orientation. </p>

<p>Consider some more crude ASCII art. Always assuming the plywood is perfectly square and plumb and assuming the camera is pointing down and to the right: </p>

<p>\ |</p>

<p>What you will get from the camera's point of view is based on the camera's assumption that <em>it</em> is the one that is always pointed correctly, so it will represent the plywood in the scene with:</p>

<p>--  \</p>

<p>The orientation of the plywood as it rotates from the XY plane (assuming Z is distance from the cameras) is in the <em>opposite</em> direction the camera is rotated from straight ahead because these are two different aspects of the same <a href="https://en.wikipedia.org/wiki/Rotation_matrix" rel="nofollow">rotation matrix</a>.</p>

<p>That is to say, the <em>camera</em> will be rotated some amount relative to <em>world coordinates</em> (the car and thus the plywood), expressed by the rotation matrix $E$. The <em>world</em> (plywood) is rotated relative to the <em>camera</em> by $E^{-1}=E^T$</p>

<p>Cosine terms fall on the diagonal while sine terms are all skew symmetric off-diagonal, so transposing the rotation matrix is equivalent to using a negated rotation angle. </p>

<p>That is, the degree to which the normal of the plywood plane is rotated will be given by some rotation matrix $E'$, where $E'=E^{-1}$ and where $E$ is the rotation matrix of the camera. Using the inverse/transpose property of the rotation matrix, $E(\theta)^{-1}=E(\theta)^T=E(-\theta)=E'$. </p>

<p>Phew!</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7495" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-7495">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7495">Load Comments</button></br>
			<div id = "commentsection-7495" class = 'collapse'>
			<div id = "comment-10752" class = "comment">
				<p>I appreciate your answer but I am not really able to follow it almost at all :(. My stereo camera consists of 2 separate Point Grey cameras that are mounted inside a car on windscreen each with separate camera holder (like for GoPro cameras) - I added a link to the mount used. So the cameras are not mounted on a single plane, so I am not really sure how I should understand the plywood-thing. Also, what do you mean by micro motions in this case?</p>
			</div>
			<div id = "comment-10753" class = "comment">
				<p>Hold a flat sheet normal to the axis of the car. The flat sheet can be anything. Your camera assembly is attached to the car, pointed close to forward. If you can position the flat sheet perfectly normal to the axis of the car, you can measure it (generate a point cloud of it) with the stereo cameras.</p>
			</div>
			<div id = "comment-10754" class = "comment">
				<p>If the Z direction is away from the camera assembly, then the flat sheet, as measured, should exist entirely in the XY plane, meaning every point will have varying X and Y coordinates but every point has the same Z coordinate. You can calculate the deviation from the XY plane by finding the normal of the measured sheet.</p>
			</div>
			<div id = "comment-10755" class = "comment">
				<p>Now, I said flat sheet. I suggested a sheet of plywood because you can maneuver it easily. Put each side 6 inches from a headlight or bumper, then make sure it's plumb. Bam, it's aligned.  You *could* use a wall, but what do you do if one side is 5.5 inches from the wall and the other is 6? Repark the car. Now one is 6 and the other is 6.1. This is what I mean by micro motion.</p>
			</div>
			<div id = "comment-10756" class = "comment">
				<p>Fine positioning, which you need for calibration, is done well and typically easier by moving a target instead of the platform. As I said, walls are free and plentiful, but moving a car is hard and moving a wall is harder. So, to be clear, what I am suggesting is a stationary calibration target, not anything to do with your camera assembly. That can be anything, with any camera (or laser scanners, structured light, kinect, etc.)  Let me know if you still have questions.</p>
			</div>
			<div id = "comment-10758" class = "comment">
				<p>Thanks for your detailed elaboration. I understand your idea now and you saved my day from doing bad things with visual odometry and GPS :)! Getting the sheet normal to the axis of the car will probably be the most tricky part for me. I guess a perfectly horizontal garage ground and then just a vertical sheet may be the easiest to go. The measurements on the car sides to have both sides of sheet in the same distance will be also tricky but should still be doable. In the end I may compare results from this method to my original idea and see how I would perform with the odometry.</p>
			</div>
			<div id = "comment-10759" class = "comment">
				<p>One more thing - I may want to use a smaller sheet for better handling and to avoid errors from the big sheet not being exactly flat. The sheet may have dimensions of 0.5x0.5m instead of 1.5x1.5m and I may put it 1m above the ground so the camera can see it. Do you have an idea of how to measure the distance from the sheet to the car reliably so I can align its normal to the car axis? The main problem is to center the sheet to the car so that distances from both sides will be same. But wait, I don't mind the final Z distance so measuring the same from each car side should do the trick, right?</p>
			</div>
			<div id = "comment-10763" class = "comment">
				<p>Yeah, if you consider the X axis to be the width of the board, Y the height, and Z the distance from the car, then: 1) It doesn't matter where along the Z axis the sheet is  2) You can get perfectly aligned on the X axis by setting both edges of the sheet equal distances from the car - just clamp two pieces of wood together and cut them as a pair on a table saw or chop saw.  Then take that matched pair and use them as measuring blocks. Just wedge them between the sheet and the car.  3) You are correct in that the floor needs to be level,  then set the sheet plumb and the Y axis is set</p>
			</div>
			</div>
				<textarea id = "speech-7495" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7495">
					<img id="start_img-7495" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7495">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>