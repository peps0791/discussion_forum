<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>P gain tuning for quadcopter (Is my perception for a P-gain too high correct?)
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8657" class = "post">
			<h2>Question</h2>
			<div id="vote-8657" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 203</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>P gain tuning for quadcopter (Is my perception for a P-gain too high correct?)</h2>
<p>Good day,</p>

<p>I am currently working on a project using Complementary filter for Sensor fusion and PID algorithm for motor control. I viewed a lot of videos in youtube as well as consulted various blogs and papers with what to expect with setting the P gain to high or too low.</p>

<p>P Gain too low</p>

<blockquote>
  <p>easy over correction and easy to turn by hand</p>
</blockquote>

<p>P Gain too high</p>

<blockquote>
  <p>oscillates rapidly</p>
</blockquote>

<p>I have a sample video of what I think a high P gain (3 in my case) looks like. Do this look like the P gain is too high?  <a href="https://youtu.be/8rBqkcmVS1k" rel="nofollow">https://youtu.be/8rBqkcmVS1k</a> </p>

<p>From the video:</p>

<p>I noticed that the quad sometimes corrects its orientation immediately after turning few degrees (4-5 deg). However, it does not do so in a consitent manner.</p>

<p>It also overcorrects.</p>

<p>The reason behind my doubt is because the quadcopter doesn't react immediately to changes. I checked the complementary filter. It updates (fast) the filtered angle reading from sudden angular acceleration from the gyro as well as updates the long term filtered angle changes from the accelerometer (albeit slowly). If I am right, is the the P gain is responsible for compensating the "delay"?</p>

<p>The formula I used in the complementary filter is the following:</p>

<pre><code>float alpha = 0.98;
float pitchAngleCF=(alpha)*pitchAngleCF+gyroAngleVelocityArray.Pitch*deltaTime)+(1-alpha)*(accelAngleArray.Pitch);
</code></pre>

<p>Here is a video for a P gain of 1: <a href="https://youtu.be/rSBrwULKun4" rel="nofollow">https://youtu.be/rSBrwULKun4</a></p>

<p>Your help would be very appreciated :)</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8657" data-toggle = "popover">
				<p>user name : user123456098</p>
				<p> user reputation : 415</p>
				<p class = "tagcontent" id = "usertaginfo-8657">{'control': 16, 'stereo-vision': 2, 'communication': 0, 'pid': 19, 'uav': 0, 'stability': 13, 'mobile-robot': 2, 'sensor-error': 0, 'tuning': 2, 'cameras': 0, 'integration': 0, 'opencv': 2, 'differential-drive': 0, 'motion-planning': 0, 'None': 13, 'raspberry-pi': 14, 'localization': 0, 'microcontroller': 0, 'mapping': 0, 'path-planning': 0, 'real-time': 1, 'sensors': 0, 'quadcopter': 19, 'computer-vision': 2, 'vfh': 0, 'c++': 2, 'filter': 0, 'dead-reckoning': 0, 'sensor-fusion': 5, 'sonar': 1}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8657">Load Comments</button></br>
			<div id = "commentsection-8657" class = 'collapse'>
			<div id = "comment-16375" class = "comment">
				<p>I had removed the video as since the dT used is wrong the PID controller is not working properly at all</p>
			</div>
			</div>
				<textarea id = "speech-8657" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8657">
					<img id="start_img-8657" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8657">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8660"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8660" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>:EDIT:</p>

<p>I've edited out most of the content I had previously written because your code <em>does</em> work (except for the mis-matched parenthesis), but it threw me off because this is not really a complimentary filter. You have a hodge-podge here that is confusing to look at initially.</p>

<p>First you have a <a href="http://my.execpc.com/~steidl/robotics/first_order_lag_filter.html" rel="nofollow">lag filter</a> on the accelerometer output:</p>

<pre><code>alpha = 0.98;
filteredAccelerometer = alpha*filteredAccelerometer + (1-alpha)*rawAccelerometer;
</code></pre>

<p>Then, instead of doing proper numeric integration on the gyro, which would look something like:</p>

<pre><code>gyroAngle = gyroAngle + gyroAngleVelocityArray.Pitch*deltaTime;
</code></pre>

<p>You instead are substituting in the filtered accelerometer measurement as the "accumulated" angle:</p>

<pre><code>gyroAngle = filteredAccelerometer + gyroAngleVelocityArray.Pitch*deltaTime;
</code></pre>

<p>and you are calling all of this a "complimentary filter", such that:</p>

<pre><code>pitchAngleCF = alpha*pitchAngleCF + (1-alpha)*angleAccelArray.Pitch + gyroAngleVelocityArray.Pitch*deltaTime;
</code></pre>

<p>However, this isn't really a complimentary filter because there's "option" or "setting" to blend the gyro and accelerometer outputs. I would suggest converting both sensors to a common unit (degres, for instance), then using the complimentary filter to combine the two measurements, then filter <em>that</em> if you find that anything needs filtering. </p>

<p>So, following your schema:</p>

<pre><code>accelVelocityArray.Pitch = accelVelocityArray.Pitch + accelAccelArray.Pitch*deltaTime;
accelAngleArray.Pitch = accelAngleArray.Pitch + accelVelocityArray.Pitch*deltaTime;

gyroAngleArray.Pitch = gryoVelocityArray.Pitch*deltaTime;

alpha = 0.95;
pitchCF = alpha*gyroAngleArray.Pitch + (1-alpha)*accelAngleArray.Pitch;
</code></pre>

<p><em>THIS</em> is the output of a complimentary filter. Now if you find that your craft is not responsive enough you can increase <code>alpha</code> (take more of the reading from the gyro), or if you find that there is too much drift you can decrease <code>alpha</code> (take more of the reading from the accelerometer). If you find that the reading is too noisy, then you can put this through a <em>lag filter</em>:</p>

<pre><code>beta = 0.9;
filteredPitch = beta*pitchCF + (1-beta)*filteredPitch;
</code></pre>

<p>NOW you adjust <code>beta</code> to determine how smooth you want the <em>combined</em> pitch reading to be. </p>

<p>I hope this clarifies things for you. </p>

<p>Now, regarding your actual question, I don't think it's possible to give a quality answer with the (lack of) data you have provided. </p>

<p>It is true that, for a real system with inertia, if you set the proportional gain too high the system will oscillate. However, it is not clear if you are only using a proportional gain (if you have kI and kD set to zero). Also, because the craft is tethered and you are holding it, it's not clear if the craft is responding to its own controller or if it's responding to the external forces (you and the tether).</p>

<p>I'm also not sure how stable your control loop timing is and/or how you are determining what <code>deltaTime</code> should be. If you're interested in manual tuning of a PID controller, <strong>first be sure that you are processing your sensor output correctly</strong> (see my above comments regarding sensor fusion and filtering), then give the <a href="https://en.wikipedia.org/wiki/Ziegler%E2%80%93Nichols_method" rel="nofollow">Ziegler-Nichols tuning method</a> a try:</p>

<ol>
<li>Set kP, kI, and kD to zero.</li>
<li>Increase kP until the system achieves consistent oscillations.</li>
<li>Record kP (as the "ultimate" gain, kU), and the oscillation period. </li>
<li>Set kP, kI, and kD to values based on the ultimate gain and oscillation period. </li>
</ol>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8660" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-8660">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8660">Load Comments</button></br>
			<div id = "commentsection-8660" class = 'collapse'>
			<div id = "comment-14137" class = "comment">
				<p>Oh I am sorry about the mismatched parenthesis, I mean this float pitchAngleCF=(alpha)*(pitchAngleCF+gyroAngleVelocityArray.Pitch*deltaTime)+(1-alpha)*(accelAngleArray.Pitch); My source was Shane Colton's white paper on the Balance Filter: https://b94be14129454da9cf7f056f5f8b89a9b17da0be.googledrive.com/host/0B0ZbiLZrqVa6Y2d3UjFVWDhNZms/filter.pdf</p>
			</div>
			<div id = "comment-14476" class = "comment">
				<p>I found my error, I was using the wrong DT now it works like a charm :) Thank you</p>
			</div>
			<div id = "comment-16373" class = "comment">
				<p>I just revisited this, I saw the same filter implementation (the lag filter on the post) on a tutorial on filtering accelerometer data in Matlab. They called this the exponential moving average filter. This solved my problem with the vibrations on the quadcopter</p>
			</div>
			</div>
				<textarea id = "speech-8660" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8660">
					<img id="start_img-8660" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8660">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>