<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Programming Inverse Kinematics in C++
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-11538" class = "post">
			<h2>Question</h2>
			<div id="vote-11538" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 879</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Programming Inverse Kinematics in C++</h2>
<p>I want to write my own kinematics library for my project in C++. I do understand that there are a handful of libraries like RL (Robotics Library) and ROS with inverse kinematics solvers. But for my dismay, these libraries DO NOT support MacOS platform. I have already written the Forward Kinematics part, which was quite straight forward. But for the Inverse Kinematics part, I am quite skeptical since the solution to a IK problem involves solving sets of non-linear simultaneous equation. I found out the Eigen/Unsupported 3.3 module has a APIs to non-linear equations. But before I begin on this uncertain path, I want to get some insight from you guys on the plausibility and practicality of writing my IK library. My manipulator design is rather simple with 4 DoF and the library will not be used for other designs of manipulators. So what I am trying to achieve is taylor-made IK library for my particular manipulator design than a rather a 'Universal' library.</p>

<p>So,</p>

<p>Am I simply trying to reinvent the wheel here by not exploring the already available libraries? If yes, please suggest examples of IK libraries for MacOS platform.</p>

<p>Has anyone written their own IK library? Is it a practical solution? Or is it rather complex problem which is not worth solving for a particular manipulator design?</p>

<p>Or should I just migrate all my project code (OpenCV) to a Linux environment and develop the code for IK in Linux using existing libraries?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-11538" data-toggle = "popover">
				<p>user name : Vino</p>
				<p> user reputation : 75</p>
				<p class = "tagcontent" id = "usertaginfo-11538">{'control': 1, 'robotic-arm': 1, 'pid': 1, 'slam': 0, 'motor': 1, 'linux': 5, 'mobile-robot': 0, 'ros': 5, 'forward-kinematics': 5, 'manipulator': 1, 'robotics-library': 0, 'mechanism': 1, 'opencv': 0, 'cnc': 2, 'machine-learning': 0, 'None': 2, 'inverse-kinematics': 5, 'artificial-intelligence': 0, 'automation': 1, 'industrial-robot': 0, 'quadcopter': 0, 'computer-vision': 2, 'c++': 5, 'circuit': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-11538">Load Comments</button></br>
			<div id = "commentsection-11538" class = 'collapse'>
			<div id = "comment-20703" class = "comment">
				<p>Love the Taylor-made pun</p>
			</div>
			<div id = "comment-20860" class = "comment">
				<p>@Ben, not everyone's first language is English. I doubt the pun was intended</p>
			</div>
			</div>
				<textarea id = "speech-11538" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11538">
					<img id="start_img-11538" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11538">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-11539"  class = "post">
				<h2>Answer</h2>
			<div id="vote-11539" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>It is rather straightforward to implement inverse kinematics for a particular manipulator in C++.   Of course, you need to begin with the inverse kinematic equations themselves.   Putting those into code will only involve a few trigonometric functions such as acos, asin, and atan2 (use atan2 instead of atan), and probably a couple of square and square root terms.  </p>

<p>You will learn a lot by doing this.  </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-11539" data-toggle = "popover">
				<p>user name : SteveO</p>
				<p> user reputation : 2960</p>
				<p class = "tagcontent" id = "usertaginfo-11539">{'None': 222}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-11539" class = 'collapse'>
			</div>
				<textarea id = "speech-11539" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11539">
					<img id="start_img-11539" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11539">Comment</button>
			<br><div id = "ans-11542"  class = "post">
				<h2>Answer</h2>
			<div id="vote-11542" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I agree with SteveO that there is nothing wrong with reinventing the wheel if you want to learn about wheels.  And for a single application, 4 DoF arm, the IK is probably not too hard.  </p>

<p>But I feel like I should mention that most of the kinematics libraries out there are mostly targeted towards Linux.  And as such, probably not too hard to compile from source for MacOS.</p>

<p>Here are some common libraries:</p>

<ul>
<li><p><a href="http://www.petercorke.com/Robotics_Toolbox.html" rel="nofollow noreferrer">Robotics Toolkit</a> - Matlab, so will work in Mac out of the box.</p></li>
<li><p><a href="http://www.orocos.org/" rel="nofollow noreferrer">Orocos</a> - C++, <a href="http://www.orocos.org/wiki/installing-orocos-toolchain-27-source-mac-osx" rel="nofollow noreferrer">supports Mac OSX</a></p></li>
<li><p><a href="http://openrave.org/" rel="nofollow noreferrer">OpenRave</a> - C++ and Python.  Binaries for Linux and Windows, but there are <a href="http://openrave.org/docs/latest_stable/coreapihtml/installation_macosx.html" rel="nofollow noreferrer">instructions for compiling for Mac OSX</a>.</p></li>
<li><p>ROS <a href="http://moveit.ros.org/" rel="nofollow noreferrer">MoveIt!</a> - This might be most difficult to install on a Mac.  It looks like <a href="http://wiki.ros.org/jade/Installation/OSX/Homebrew/Source" rel="nofollow noreferrer">ROS Jade</a> has more complete instructions for building for Mac than <a href="http://wiki.ros.org/kinetic/Installation/OSX/Homebrew/Source" rel="nofollow noreferrer">ROS Kinetic</a>.</p></li>
</ul>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-11542" data-toggle = "popover">
				<p>user name : Ben</p>
				<p> user reputation : 3608</p>
				<p class = "tagcontent" id = "usertaginfo-11542">{'None': 277, 'inverse-kinematics': 3, 'accelerometer': 5, 'calibration': 10, 'kinematics': 14, 'robotic-arm': 8, 'jacobian': 6, 'dh-parameters': 8, 'imu': 5, 'sensors': 5}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-11542" class = 'collapse'>
			</div>
				<textarea id = "speech-11542" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11542">
					<img id="start_img-11542" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11542">Comment</button>
			<br><div id = "ans-11548"  class = "post">
				<h2>Answer</h2>
			<div id="vote-11548" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I did several implementations of IK with different setups (up to 8-DOF)
Of course you can just sit down and write the algorithms on your own. (Assuming you know what are you doing) For this approach I suggest using the Eigenlib and some basic maths.
Anywas the more elegant approach ( from my point of view) is using matlab: implement the algorithm as you like and let matlab generate the code for you. The matlab code generation feature is pretty nice tool and its reliable (haven't found any errors in the generated code so far). After you have this generated code write any wrapper for any os you like. 
These are just my two cents</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-11548" data-toggle = "popover">
				<p>user name : TobiasK</p>
				<p> user reputation : 1572</p>
				<p class = "tagcontent" id = "usertaginfo-11548">{'control': 1, 'None': 102, 'communication': 0, 'wireless': 0, 'imu': 0, 'sensor-fusion': 0, 'gps': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-11548" class = 'collapse'>
			</div>
				<textarea id = "speech-11548" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11548">
					<img id="start_img-11548" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11548">Comment</button>
			<br><div id = "ans-11629"  class = "post">
				<h2>Answer</h2>
			<div id="vote-11629" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I suggest adopting an existing library. </p>

<ul>
<li>ROS can be <a href="https://github.com/mikepurvis/ros-install-osx" rel="nofollow noreferrer">installed on OS X</a></li>
<li><a href="https://github.com/jrl-umi3218/Tasks" rel="nofollow noreferrer">Tasks</a> also runs on OS X.</li>
</ul>

<p>Each can also be integrated with V-REP or gazebo fairly easily for simulation and visualization. I have also created a <a href="https://github.com/ahundt/homebrew-robotics" rel="nofollow noreferrer">homebrew-robotics tap</a> for installing various robotics related tools on OS X via <a href="http://brew.sh" rel="nofollow noreferrer">homebrew</a> and a set of Linux setup scripts in <a href="https://github.com/ahundt/robotics_setup" rel="nofollow noreferrer">robotics_setup</a>.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-11629" data-toggle = "popover">
				<p>user name : Andrew Hundt</p>
				<p> user reputation : 276</p>
				<p class = "tagcontent" id = "usertaginfo-11629">{'stereo-vision': 2, 'None': 14, 'calibration': 2, 'c++': 2, 'planning': 2, 'robotic-arm': 4, 'motion-planning': 2}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-11629" class = 'collapse'>
			</div>
				<textarea id = "speech-11629" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11629">
					<img id="start_img-11629" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11629">Comment</button>
			<br><div id = "ans-12305"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12305" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I also have the same paper and I am going to do following</p>

<ol>
<li>Simulate angles in excel by putting in equations.</li>
<li>Make an autocad or solidworks 3d model of the robot and test the resultant angles from excel file on this model.</li>
</ol>

<p>This I will be doing because I do not want to install Linux on my PC for running just a simulation software. Of course, we can use Virtual machine on windows but time is a precious commodity for doing all this.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12305" data-toggle = "popover">
				<p>user name : cyberspider789</p>
				<p> user reputation : 3</p>
				<p class = "tagcontent" id = "usertaginfo-12305">{'None': 0, 'inverse-kinematics': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-12305" class = 'collapse'>
			</div>
				<textarea id = "speech-12305" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12305">
					<img id="start_img-12305" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12305">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>