<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Accelerometer, gyro, and magnetometer sensor fusion in 2d
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-2847" class = "post">
			<h2>Question</h2>
			<div id="vote-2847" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 6031</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Accelerometer, gyro, and magnetometer sensor fusion in 2d</h2>
<p>I have not yet build this so this is basically a theoretical question. I am still wrestling with some C code to manage i2c communication etc. </p>

<p>When I originally said "I have not build this" I meant that the robot is in what could be called a "design phase". For the sake of my question lets assume for a moment that the whole robot consists of just one IMU sensor. It moves magically (no motors that create a lot of noise in the sensor measurements). With theoretical I mean I am interested in the mathematics and algorithms involved in solving this problem. What I call IMU sensor provides raw accelerometer, gyro, and magnetometer measurements.</p>

<p>Lets say our tiny robot travels on a snooker table (3569 mm x 1778 mm). I believe this is sufficiently small to call it 2d. Now, sensor fusion should be much easier (faster, consume less resources) than in 3d, right? </p>

<p>I would like to measure the velocity and if possible the position. 
With velocity I mean at a given point of time I need to know the current velocity of the robot moving over the snooker table. Velocity is in the range of 0 - 5 m/s.
With position I mean at a given point of time I need to know the current position of the robot on the snooker table (x, y, heading).</p>

<p>I hope this will be possible since the robot should be able to identify some landmarks and use this information to reduce position errors.</p>

<p>When I originally said "I hope this will be possible" I meant to express that I already am aware of the fact that real sensor data is noisy and errors accumulate quickly. Using landmarks I will / or will not be able to manage to reduce the error in the position estimates. But this is NOT part of my question.</p>

<p>I am about to improve my linear algebra knowledge. So I am confident to manage some matrix multiplications, inversions and such.</p>

<p>My question is for some ideas, references on measuring velocity and position in 2d using <a href="http://www.pololu.com/product/2468" rel="nofollow">an IMU sensor like this one</a>. </p>

<p>A little side question: I just figured that this question is probably too theoretical for robotics.SE. If you know any forum that is more focused on mathematical / algorithmic side of robotics please let me know.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-2847" data-toggle = "popover">
				<p>user name : mark</p>
				<p> user reputation : 143</p>
				<p class = "tagcontent" id = "usertaginfo-2847">{'None': 0, 'localization': 5, 'microcontroller': 0, 'pid': 3, 'embedded-systems': 0, 'differential-drive': 3, 'imu': 5, 'sensor-fusion': 5, 'arm': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-2847">Load Comments</button></br>
			<div id = "commentsection-2847" class = 'collapse'>
			<div id = "comment-5252" class = "comment">
				<p>If you're just using one sensor (the IMU), there is no fusion -- you just use the values that the IMU gives you.  An IMU just integrates the values from an accelerometer to get velocity, and then integrates that to get position (with errors accumulating in each).</p>
			</div>
			<div id = "comment-5254" class = "comment">
				<p>the kind of IMU I am talking about provides only raw accelerometer, magnetometer and gyro data (http://www.pololu.com/product/2468). I assumed that other IMUs would do the same. I am convinced that fusion for the raw sensor data is very application specific (given that you have different applications).</p>
			</div>
			<div id = "comment-5264" class = "comment">
				<p>OK, I've updated the question to better reflect what you're after.  You're right that it can be very application specific.</p>
			</div>
			<div id = "comment-5265" class = "comment">
				<p>@Ian - I'm sure there is fusion going on here. You have the gyro + compass ( + wheel odometry ?) fusing to give a measure of the robot's heading. There's also the accelerometer + position sensing ( + wheel odometry ?) to give a measure of the robot's position.</p>
			</div>
			<div id = "comment-5266" class = "comment">
				<p>Mark, when you say "I would like to measure the velocity and if possible the position." what do you mean? Do you mean that you'd like to have some other sensor(s) apart from the IMU which can measure the velocity and position of the robot. Or do you mean you'd like to infer the velocity and position entirely from the IMU data?</p>
			</div>
			<div id = "comment-5267" class = "comment">
				<p>I took mark's statement about measuring the position with the IMU to mean that position data wasn't coming in any other way.  The original question was (and possibly still is) unclear on the full suite of sensors that the robot will have.</p>
			</div>
			<div id = "comment-5272" class = "comment">
				<p>@Rocketmagnet: there is no ( + wheel odometry ?). this question is about the IMU sensor</p>
			</div>
			</div>
				<textarea id = "speech-2847" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2847">
					<img id="start_img-2847" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2847">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-2863"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2863" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The gyrometer gives you angular velocity about each axis. You simply integrate these values to get the roll, pitch and yaw of the robot. Since this is 2D, all you care about is yaw, and you'll integrate one value. Of course, there are many different ways of integrating the value you read from the gyrometer. The easiest way is to sample the gyro, timestamp the sample, and assume this value holds until the next sample. This is similar to a Riemann's sum approximation of the integral, and will be more accurate the higher your sampling rate. You can use more advanced forms of interpolation between sets of samples like bilinear interpolation, but it's up to you to decide how far you'd like to go.</p>

<p>The accelerometer gives you linear acceleration along each axis. Since this is 2D, we only care about the acceleration along x &amp; y (I assume x is pointing in the direction of positive velocity of the vehicle, y is pointing to the left, and z is the normal of the table). Again, we simply integrate these values to get velocity, and if you so choose integrate a second time to obtain position. Since you're integrating twice, you'll accumulate a significant amount of error. Error in the integration accumulates as a random walk (see: <a href="http://www.mit.edu/~kardar/teaching/projects/chemotaxis%28AndreaSchmidt%29/random.htm" rel="nofollow">http://www.mit.edu/~kardar/teaching/projects/chemotaxis(AndreaSchmidt)/random.htm</a>). This means error grows with time on the order of sqrt(t). Both the first and the second integration will have this random walk, which will compound your error further.</p>

<p>The magnetometer is there to provide a constant reference (magnetic north) which compensates for the drift of the gyroscope.</p>

<p>Essentially, you use the magnetometer and gyroscope to calculate your heading in the local frame (a static frame that has (0,0) located at the position where you started the robot). The accelerometer gives you changes in position in the vehicle frame (dynamic frame whose (0,0) origin is anchored somewhere on the robot). You can use the updated heading and changes in position in the vehicle frame to compute your location in the local frame.</p>

<p>Here's an article I think you will find very useful: <a href="https://forum.sparkfun.com/viewtopic.php?f=14&amp;t=24226" rel="nofollow">https://forum.sparkfun.com/viewtopic.php?f=14&amp;t=24226</a></p>

<p>Edit: I should mention that to do this, all you need are encoders on the wheels to compute position and velocity and a one axis gyro to measure heading. Then you simply use trigonometry with the change in distance computed from the encoders and the angle from the gyro to get the change in x &amp; y. The best gyrometers can be used for hours upon hours without a significant amount of drift. Adding the magnetometer is a big help as well. Ideally you'd use the IMU as an "Attitude Heading &amp; Reference System" and encoders to compute distance travelled and as another source of velocity. If you wanted the most accurate velocity, you'd fuse the data from the encoders with the integral of acceleration by adding the data together after weighting each data point by 1/variance of the data.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2863" data-toggle = "popover">
				<p>user name : Andrew Capodieci</p>
				<p> user reputation : 826</p>
				<p class = "tagcontent" id = "usertaginfo-2863">{'None': 54}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-2863">Load Comments</button></br>
			<div id = "commentsection-2863" class = 'collapse'>
			<div id = "comment-5287" class = "comment">
				<p>thanks for your answer. This makes much sense to me. I will try it out and experiment and report back. This will happen soon since I already fixed the i2c issues http://www.testing-software.org/robotics/06_imu_sensor/IMU_firmware_port.html</p>
			</div>
			</div>
				<textarea id = "speech-2863" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2863">
					<img id="start_img-2863" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2863">Comment</button>
			<br><div id = "ans-2864"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2864" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Using an IMU you can only measure: acceleration, rate of rotation, and direction of magnetic field. You cannot measure velocity, you can only integrate the acceleration to infer velocity. As you can imagine, this leads to velocity drift, which in turn leads to a lot of unbounded position drift.</p>

<p>There are three parts to your problem:</p>

<ol>
<li>Infer the robot's bearing from gyro and compass. If the robot is quite slow, you may be able to ignore the gyro, and just use the compass.</li>
<li>Infer the robots velocity and position from the accelerometer</li>
<li>Adjust your position estimate from 'landmarks'</li>
</ol>

<p>The mathematics for 2. is very simple. if dT is the time between samples, then:</p>

<pre><code>accelerationInWorldCoordinates = accelerationInRobotCoodinates.rotate(-heading)
velocity += accelerationInWorldCoordinates * dT
position += velocity * dT
</code></pre>

<p>The mathematics for 1. is a little more involved, because we're fusing together the gyro and compass. Here's something to try:</p>

<pre><code>k = 0.95
headingDegrees += gyroReadingDegreesPerSecond * dT
headingDegrees  = (headingDegrees*k) + (compassReadingDegrees*(1.0-k))
</code></pre>

<p>What's happening here is that we're mainly using the gyro to update the heading, but mixing in a little of the compass reading to help keep it stable in the long term.</p>

<p>The mathematics for 3. (and possibly 1) is harder. What you are looking for is a Kalman Filter. This filter can take information from several sources and produce an optimal estimate of the state of the robot, along with a measure of its confidence in that estimate. It's not unlike our code for 1. In fact, you'll see the k and (1-k) in the Kalman filter too.</p>

<p>The problem with Kalman filters is that the only documentation you'll find on the subject tends to be heavy on the maths, and very low on practical advice for people actually implementing it.</p>

<p>The way I learned was by very slowly and carefully picking my way through <a href="http://www.cs.cornell.edu/Courses/cs4758/2013sp/materials/MI63slides.pdf" rel="nofollow">Kalman Filter Tank Filling from Cornell University</a>. I recommend implementing the examples given and trying to make them work. What's annoying about this paper (and most others), is that they often don't tell you the size and shape of the various matrices used in the algorithm, so you'll have to work these out by hand. They also don't tell you much about the meaning of the covariance matrix, or how to calculate it.</p>

<p>I have this dream that one day I'll get round to writing a genuinely helpful article on Kalman filters on my <a href="http://hugosprojects.wordpress.com/" rel="nofollow">blog</a>, but don't hold your breath.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2864" data-toggle = "popover">
				<p>user name : Rocketmagnet</p>
				<p> user reputation : 4235</p>
				<p class = "tagcontent" id = "usertaginfo-2864">{'control': 31, 'force': 8, 'multi-agent': 5, 'pid': 29, 'air-muscle': 6, 'uav': 52, 'stepper-driver': 3, 'reliability': 5, 'motor': 12, 'esc': 1, 'mobile-robot': 6, 'ros': 35, 'stepper-motor': 3, 'tuning': 12, 'swarm': 10, 'research': 5, 'platform': 17, 'imu': 4, 'kalman-filter': 49, 'hri': 4, 'None': 266, 'raspberry-pi': 24, 'localization': 7, 'python': 7, 'torque': 3, 'brushless-motor': 28, 'failure': 5, 'force-sensor': 15, 'sensors': 20, 'pwm': 10, 'wireless': 10, 'servos': 7, 'wifi': 24, 'simulation': 6, 'servomotor': 11, 'particle-filter': 0, 'sensor-fusion': 4, 'automatic': 12, 'software': 17}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2864" class = 'collapse'>
			</div>
				<textarea id = "speech-2864" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2864">
					<img id="start_img-2864" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2864">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>