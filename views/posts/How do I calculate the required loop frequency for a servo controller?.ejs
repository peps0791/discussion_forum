<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How do I calculate the required loop frequency for a servo controller?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-143" class = "post">
			<h2>Question</h2>
			<div id="vote-143" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">8</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 5660</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How do I calculate the required loop frequency for a servo controller?</h2>
<p>I have a motor which drives a string connected to a load cell. I would like to implement a closed loop controller to control the load applied by the motor to the string.</p>

<p><img src="https://i.stack.imgur.com/wWerj.png" alt="Motor driving string connected to a load cell"></p>

<p>How do I go about determining the required loop frequency in order to create a stable control system? Is it something like the Nyquist frequency, where the loop speed should be at least twice the highest frequency inherent in the mechanical system?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-143" data-toggle = "popover">
				<p>user name : Rocketmagnet</p>
				<p> user reputation : 4235</p>
				<p class = "tagcontent" id = "usertaginfo-143">{'control': 31, 'force': 8, 'multi-agent': 5, 'pid': 29, 'air-muscle': 6, 'uav': 52, 'stepper-driver': 3, 'reliability': 5, 'motor': 12, 'esc': 1, 'mobile-robot': 6, 'ros': 35, 'stepper-motor': 3, 'tuning': 12, 'swarm': 10, 'research': 5, 'platform': 17, 'imu': 4, 'kalman-filter': 49, 'hri': 4, 'None': 266, 'raspberry-pi': 24, 'localization': 7, 'python': 7, 'torque': 3, 'brushless-motor': 28, 'failure': 5, 'force-sensor': 15, 'sensors': 20, 'pwm': 10, 'wireless': 10, 'servos': 7, 'wifi': 24, 'simulation': 6, 'servomotor': 11, 'particle-filter': 0, 'sensor-fusion': 4, 'automatic': 12, 'software': 17}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-143">Load Comments</button></br>
			<div id = "commentsection-143" class = 'collapse'>
			<div id = "comment-10961" class = "comment">
				<p>It would be beneficial for answers to focus on the practical OR the theoretical side of the question. Is this a pure theoretical question (where friction, sensor errors, motor biases etc are ignored)? The frequency of the controller would not be required to be higher than the sensor's validity range and would also be defined by the characteristics of the motor.</p>
			</div>
			</div>
				<textarea id = "speech-143" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-143">
					<img id="start_img-143" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-143">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-164"  class = "post">
				<h2>Answer</h2>
			<div id="vote-164" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The loop frequency is a parameter that needs to be tuned just like your proportional, integral, and/or derivative terms. Varying it has a similar affect on your output as varying your other parameters. Too low a frequency and you'll never reach your desired steady state. Too high and the output will oscillate.</p>

<p>To determine the optimal loop frequency, you will first need to construct <a href="https://controls.engin.umich.edu/wiki/index.php/PID_Frequency_Response_w/_Bode_Plots" rel="nofollow noreferrer">Bode plots</a> from real world test or simulation data:</p>

<blockquote>
  <p>Bode plots concisely display all relevant frequency input and output
  information on two plots: amplitude ratio as a functions of frequency
  and phase shift as a function of frequency. The amplitude ratio plot
  is a log-log plot while the phase angle plot is a semilog (or
  log-linear) plot.</p>
  
  <p>To construct a Bode plot, an engineer would have
  empirical data showing input and output values that vary as sinusoidal
  functions of time. For instance, there might be inlet temperature data
  that varies sinusoidally and the outlet temperature data that also
  varies sinusoidally.</p>
  
  <p>The amplitude ratio, AR, is the ratio of the amplitude of the output
  sinusoidal curve divided by the amplitude of the input sinusoidal
  curve.</p>
  
  <p>$$AR = \dfrac{outputamplitude}{inputamplitude}$$</p>
  
  <p>To find the phase shift, the periods of the input and output sine
  curves need to be found. Recall that the period, P, is the length of
  time from one peak to the next.</p>
  
  <p>$$P = \dfrac{1}{f} = \dfrac{2\pi}{\omega}$$
  $$f = frequency$$
  $$\omega = frequency(rad/sec)$$</p>
  
  <p><img src="https://i.stack.imgur.com/p5iqK.jpg" alt="AR vs. freq"></p>
  
  <p><img src="https://i.stack.imgur.com/reXBG.jpg" alt="phase vs. freq"></p>
  
  <h1>Rules of Thumb when analyzing Bode plots</h1>
  
  <p>Generally speaking, a gain change shifts the amplitude ratio up or
  down, but does not affect the phase angle. A change in the time delay
  affects the phase angle, but not the amplitude ratio. For example, an
  increase in the time delay makes the phase shift more negative for any
  given frequency. A change in the time constant changes both the
  amplitude ratio and the phase angle. For example, an increase in the
  time constant will decrease the amplitude ratio and make the phase lag
  more negative at any given frequency.</p>
</blockquote>

<p>Then you will need to determine the <a href="http://www.goddardconsulting.ca/pid-control.html" rel="nofollow noreferrer">cross-over frequency</a>:</p>

<blockquote>
  <p>The proportional term moves the magnitude of the frequency response of
  the open loop up or down and hence is used to set the cross-over
  frequency of the open loop. The cross-over frequency is the frequency
  at which the magnitude has a gain of 1 (or 0dB). This frequency is
  important as it is closely related to bandwidth of the closed loop
  response.</p>
  
  <p>In an ideal system the proportional gain could be made (almost)
  infinitely large leading to an infinitely fast, yet still stable,
  closed loop. In practice that is not the case. Rather, two design
  rules of thumb come into play.</p>
  
  <p>Firstly the sample rate of the digital hardware on which the
  controller is going to be executed needs to be considered. <strong>A typical
  rule of thumb is that the cross-over frequency should be set to be at
  least 10 times lower than the sample rate of the controller.</strong>
  Conceptually this ensures that the controller is running at a fast
  enough rate that it can adequately handle changes in the signal being
  controlled.</p>
  
  <p>The second rule of thumb is related to the slope of the frequency
  response at the cross-over frequency. If the roll-off of the open-loop
  magnitude response at cross-over can be made to be close to
  -20dB/decade then the closed-loop bandwidth can be expected to be close to the cross-over frequency. Note that the integral and
  derivative terms, not just the proportional term, are used to control
  the slope at cross-over.</p>
  
  <p><img src="https://i.stack.imgur.com/yU7CW.jpg" alt="bode cross-over graph"></p>
</blockquote>

<p><em>(emphasis mine)</em></p>

<p>So the optimal control loop frequency should be around 10 times that of the cross-over frequency of your system's phase delay which can be obtained through empirical test data or, ideally, computer simulation.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-164" data-toggle = "popover">
				<p>user name : embedded.kyle</p>
				<p> user reputation : 1469</p>
				<p class = "tagcontent" id = "usertaginfo-164">{'None': 124}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-164">Load Comments</button></br>
			<div id = "commentsection-164" class = 'collapse'>
			<div id = "comment-188" class = "comment">
				<p>Great answer, but I would use the term [limit cycle](http://en.wikipedia.org/wiki/Limit_cycle) rather than [oscillation](http://en.wikipedia.org/wiki/Oscillation) in this context, since it is [more control theory specific](http://robotics.stackexchange.com/a/24/37). The important thing being *Any small perturbation from the closed trajectory would cause the system to return to the limit cycle, making the system stick to the limit cycle*. This differs from simple *oscillation* in that this undesirable situation doesn't decay on its own and is indeed actively perpetuated.</p>
			</div>
			<div id = "comment-189" class = "comment">
				<p>@MarkBooth I never studied control theory formally but rather fell into it when I got a job writing embedded software for motor controllers. I've never heard the term limit cycle before and the Wikipedia article on it is quite brief. The Wikipedia articles on [PID Controllers](https://en.wikipedia.org/wiki/PID_controller) and [Control Theory](https://en.wikipedia.org/wiki/Control_theory) both use the term oscillation but don't mention limit cycles. Could you point to some other references that discuss limit cycles in control theory specific context? I'm quite interested to learn more.</p>
			</div>
			<div id = "comment-200" class = "comment">
				<p>My control theory is far too rusty to give a formal definition, but essentially a system suffering a limit cycle is one which always returns to a marginally stable state under certain conditions. For instance if a motor on a robot arm always hums at a particular position, it is marginally stable there. Move it away by hand and the control system returns it to it's position and the marginal instability returns. Move to a different position and the hum dies down and it becomes stable.</p>
			</div>
			<div id = "comment-3240" class = "comment">
				<p>The statement that a too high loop frequency can make a system unstable is essentially wrong.  The x10 the control bandwidth is a good rule of thumb but there's no downside to go higher (beyond cost).  Obviously if your integrator does + every cycle then you may need to bring down your I term (e.g.).</p>
			</div>
			<div id = "comment-3244" class = "comment">
				<p>@GuySirton In theory you are correct, but in practice setting too high a loop frequency can have a detrimental effect on a control loop due to the exaggerated effects of quantisation error at higher frequencies.</p>
			</div>
			<div id = "comment-3261" class = "comment">
				<p>I've never heard the term "loop frequency" used for the sampling frequency of the loop before, yet that seems to be the usage here.  Old analog loop-closers will think you mean the loop bandwidth (AKA loop closure frequency).</p>
			</div>
			<div id = "comment-3262" class = "comment">
				<p>Setting a high sample rate in a control loop will only cause noise problems (and not just from quantization) if there is a need for low-pass filtering in the loop that is somehow being met by lower-frequency sampling.  This can always be dealt with by putting in explicit low-pass filters, should the situation warrant it.</p>
			</div>
			</div>
				<textarea id = "speech-164" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-164">
					<img id="start_img-164" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-164">Comment</button>
			<br><div id = "ans-1542"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1542" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>When the string isn't under tension you have a non-linear system (i.e. you're pushing on a rope) which may also make this harder to control.  The stiffness of your string is going to limit your bandwidth. (The string acts as a low-pass filter, at least when it's under tension).  I've actually worked a little on a similar setup and it was really hard to control.</p>

<p>Since you're sampling the <a href="http://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem" rel="nofollow">sampling theorem</a> absolutely applies and you must sample at least x2 the highest frequency in your input (either by increasing the sample rate or filtering the input before sampling or both) otherwise you'll get aliasing.</p>

<p>As Kyle points out the other factor is your desired control bandwidth.  I concur with the rule of thumb that the loop should run at least ~x10 that frequency.  </p>

<p>Both these conditions need to be met.</p>

<p>There's a pretty good discussion of this in <a href="http://dissertations.ub.rug.nl/FILES/faculties/science/1995/m.d.van.der.laan/c6.pdf" rel="nofollow">Chapter 6: Sampling in closed loop control systems</a> of Marten Derk van der Laan's (1995) dissertation <a href="http://irs.ub.rug.nl/ppn/138454876" rel="nofollow">Signal sampling techniques for data acquisition in process control</a>:</p>

<blockquote>
  <p>Selection of sampling rates is an important issue. For economical
  reasons, sampling rates are kept as low as possible: A lower rate
  means that there is more time available for control algorithm
  execution, which can thereby be carried out on slower computers.
  Digitizing well behaved analog control systems can heavily affect
  system response. If sampling frequencies is too low, the systems may
  even become unstable. According to the Nyquist criterion, the sampling
  frequency should at least be twice as high as the bandwidth of the
  error signal. This bandwidth is bounded by the system bandwidth, hence
  ws  2wB. However, in order to guarantee satisfactory response, a
  factor of 10 to 20 may be required</p>
</blockquote>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1542" data-toggle = "popover">
				<p>user name : Guy Sirton</p>
				<p> user reputation : 970</p>
				<p class = "tagcontent" id = "usertaginfo-1542">{'None': 75}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1542">Load Comments</button></br>
			<div id = "commentsection-1542" class = 'collapse'>
			<div id = "comment-3263" class = "comment">
				<p>It is very dangerous to start appealing to the Nyquist theorem in a sampled-time control system.  One ends up with all sorts of oddities, not least of which (and definitely undesirable in the majority of circumstances) is anti-aliasing filters inside the control loop.  That cited paper is using an old approach to digital control loop design best suited for personnel who need to spend some time getting used to the z transform and direct design in sampled time.  http://www.wescottdesign.com/articles/Sampling/sampling.pdf</p>
			</div>
			<div id = "comment-3273" class = "comment">
				<p>@TimWescott: Your paper looks very interesting.  I'll read it in more detail.  I agree that people misapply the theorem to the real world in variety of ways (and not only in a control setup).  Nevertheless whenever you're sampling the theorem applies.  I absolutely agree with what you say in your last paragraph of the "Finally" section.  Intuitively the controller can never be better than the sampled error signal so you can prove that if you have aliasing no controller can take out that error.</p>
			</div>
			</div>
				<textarea id = "speech-1542" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1542">
					<img id="start_img-1542" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1542">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>