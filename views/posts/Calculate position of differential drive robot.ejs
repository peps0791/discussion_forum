<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Calculate position of differential drive robot
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1653" class = "post">
			<h2>Question</h2>
			<div id="vote-1653" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">8</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 6899</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Calculate position of differential drive robot</h2>
<p><strong>How do you calculate or update the position of a differential drive robot with incremental sensors?</strong></p>

<p>There is one incremental sensor attatched to each of the two differential wheels. Both sensors determine the distance $\Delta left$ resp. $\Delta right$ their wheel has rolled during a known time $\Delta t$.</p>

<p>First, let's assume the center between both wheels marks the position of the robot. In this case, one could calculate the position as:</p>

<p>$$
x = \frac{x_{left}+x_{right}}{2} \\
y = \frac{y_{left}+y_{right}}{2}
$$</p>

<p>"Deriving" those equations under the assumption that both wheels rolled in a straight line (which should be approximately correct for small distances) I get:</p>

<p>$$
\frac{\Delta x}{\Delta t} = \frac{1}{2}\left( \frac{\Delta left}{\Delta t} + \frac{\Delta right}{\Delta t}\right)cos(\theta) \\
\frac{\Delta y}{\Delta t} = \frac{1}{2}\left( \frac{\Delta left}{\Delta t} + \frac{\Delta right}{\Delta t}\right)sin(\theta)
$$</p>

<p>Where $\theta$ is the angle of orientation of the robot. For the change of this angle I found the equation</p>

<p>$$
\frac{\Delta \theta}{\Delta t} = \frac{1}{w} \left( \frac{\Delta left}{\Delta t} - \frac{\Delta right}{\Delta t}\right)
$$</p>

<p>Where $w$ is the distance between both wheels.</p>

<p>Because $\Delta x$ and $\Delta y$ depend on $\theta$, I wonder whether I should first calculate the new $\theta$ by adding $\Delta \theta$ or if I should rather use the "old" $\theta$ ? <strong>Is there any reason to use one over the other?</strong></p>

<p>Then, let's now assume the center between both wheels does <em>not</em> mark the position of the robot. Instead I want to use a point which marks the geometric center of the robot's bounding box. Then $x$ and $y$ change to:</p>

<p>$$
x = \frac{x_{left}+x_{right}}{2} + l\, cos(\theta)\\
y = \frac{y_{left}+y_{right}}{2} + l\, sin(\theta)
$$</p>

<p>"Deriving" the first gives:</p>

<p>$$
\frac{\Delta x}{\Delta t} = \frac{1}{2}\left( \frac{\Delta left}{\Delta t} + \frac{\Delta right}{\Delta t}\right)cos(\theta) - l\,sin(\theta)\,\frac{\Delta \theta}{\Delta t}
$$</p>

<p>Now there is a dependance on $\Delta \theta$. <strong>Is this a reason to use the "new" $\theta$ ?</strong></p>

<p><strong>Is there any better method to do simulatenous update of position and orientation?</strong> May be using complex numbers (same approach as with quaternions in 3D?) or homogeneous coordinates?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1653" data-toggle = "popover">
				<p>user name : Daniel Jour</p>
				<p> user reputation : 195</p>
				<p class = "tagcontent" id = "usertaginfo-1653">{'None': 0, 'two-wheeled': 8, 'theory': 10, 'kinematics': 18, 'motion': 8, 'design': 10, 'mobile-robot': 18, 'forward-kinematics': 8}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1653" class = 'collapse'>
			</div>
				<textarea id = "speech-1653" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1653">
					<img id="start_img-1653" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1653">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1655"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1655" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>For a repeated calculation, it doesn't matter whether you find $\Delta\theta$ before or after you apply $\theta$ to the $\Delta{x}, \Delta{y}$ calculation.  You will always be alternating between a position and an orientation calculation.  </p>

<p>In a practical sense, it might be better to calculate $\Delta\theta$ after you calculate $\Delta{x}, \Delta{y}$, since your first iteration through the loop requires an initial value of $\theta$.  </p>

<p>Remember that this is an error-prone measurement method anyway -- it's a pair of 1D measurements feeding a 2D approximation of a 3D world.  Even if you are able to get a $\Delta{t}$ very close to $0$, it still won't account for wheel slippage and uneven terrain.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1655" data-toggle = "popover">
				<p>user name : Ian</p>
				<p> user reputation : 9640</p>
				<p class = "tagcontent" id = "usertaginfo-1655">{'planning': 10, 'None': 809, 'power': 1, 'algorithm': 10, 'battery': 1, 'slam': 7, 'coverage': 10, 'mobile-robot': 9, 'sensors': 9}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1655">Load Comments</button></br>
			<div id = "commentsection-1655" class = 'collapse'>
			<div id = "comment-3472" class = "comment">
				<p>Searching for "forward kinematics of differential drive vehicles" should provide a bunch of articles with a more mathematical approach to this question.</p>
			</div>
			</div>
				<textarea id = "speech-1655" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1655">
					<img id="start_img-1655" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1655">Comment</button>
			<br><div id = "ans-1679"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1679" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>To answer your first question: if you really want to find the true kinematic equations for differential drive, I wouldn't start approximating by assuming that each wheel has moved in a straight line. Instead, find the turning radius, calculate the center point of the arc, and then calculate the robot's next point. The turning radius would be infinite if the robot is moving straight, but in the straight case the math is simple. </p>

<p>So, just imagine that over each time step, or each time you calculate the change in the incremental sensors, the robot travels from point A to point B on an arc like this:
<img src="https://i.stack.imgur.com/l0fEQ.png" alt="enter image description here">
Here's some sample code with the math simplified:</p>

<pre><code>// leftDelta and rightDelta = distance that the left and right wheel have moved along
//  the ground

if (fabs(leftDelta - rightDelta) &lt; 1.0e-6) { // basically going straight
    new_x = x + leftDelta * cos(heading);
    new_y = y + rightDelta * sin(heading);
    new_heading = heading;
} else {
    float R = unitsAxisWidth * (leftDelta + rightDelta) / (2 * (rightDelta - leftDelta)),
          wd = (rightDelta - leftDelta) / unitsAxisWidth;

    new_x = x + R * sin(wd + heading) - R * sin(heading);
    new_y = y - R * cos(wd + heading) + R * cos(heading);
    new_heading = boundAngle(heading + wd);
}
</code></pre>

<p>I used similar math in a simulator to demonstrate different ways of steering: <a href="http://www.cs.utexas.edu/~rjnevels/RobotSimulator4/demos/SteeringDemo/" rel="nofollow noreferrer">http://www.cs.utexas.edu/~rjnevels/RobotSimulator4/demos/SteeringDemo/</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1679" data-toggle = "popover">
				<p>user name : Robz</p>
				<p> user reputation : 954</p>
				<p class = "tagcontent" id = "usertaginfo-1679">{'pid': 8, 'embedded-systems': 0, 'slam': 20, 'sensor-error': 8, 'accelerometer': 5, 'kinematics': 7, 'mechanism': 1, 'differential-drive': 8, 'imu': 12, 'kalman-filter': 28, 'actuator': 21, 'gyroscope': 5, 'gps': 20, 'magnetometer': 5, 'None': 25, 'noise': 5, 'power': 0, 'localization': 20, 'microcontroller': 0, 'brushless-motor': 13, 'sensors': 41, 'quadcopter': 13, 'navigation': 7, 'sensor-fusion': 21, 'sonar': 8, 'servos': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1679">Load Comments</button></br>
			<div id = "commentsection-1679" class = 'collapse'>
			<div id = "comment-6847" class = "comment">
				<p>The equations used in the above code snippet are derived here: http://rossum.sourceforge.net/papers/DiffSteer/</p>
			</div>
			</div>
				<textarea id = "speech-1679" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1679">
					<img id="start_img-1679" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1679">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>