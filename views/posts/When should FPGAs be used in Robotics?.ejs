<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>When should FPGAs be used in Robotics?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1153" class = "post">
			<h2>Question</h2>
			<div id="vote-1153" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">9</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 5170</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>When should FPGAs be used in Robotics?</h2>
<p>FPGA has good points such as a lot of IO points but then again you need to think things on very low level with flip-flops and pioneer on areas where things are not yet mature -- for example see this question <a href="https://electronics.stackexchange.com/questions/3107/looking-for-open-source-fpga-hardware-and-dev-tools">here</a> about development-tools on FPGAs -- this is my understanding currently! Now FPGA has been used to create excellent dexterity in robotic hands like <a href="http://www.youtube.com/watch?v=6rhH4YlObkM" rel="nofollow noreferrer">here</a>. Now some people market FPGA for fast prototyping and <em>"forward looking"</em> designs like <a href="http://www.rtcmagazine.com/articles/view/101763" rel="nofollow noreferrer">here</a>, I don't fully understand them: if you don't need a lot of IO points for things such as sensors, why to choose FPGA for a robot? So</p>

<p><strong>When should FPGA be chosen for a project in robotics?</strong></p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1153" data-toggle = "popover">
				<p>user name : hhh</p>
				<p> user reputation : 166</p>
				<p class = "tagcontent" id = "usertaginfo-1153">{'dynamic-programming': 2, 'None': 1, 'logic-control': 9, 'design': 9, 'research': 11}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1153">Load Comments</button></br>
			<div id = "commentsection-1153" class = 'collapse'>
			<div id = "comment-2610" class = "comment">
				<p>If you need parallelism then there is a sense to use FPGA as you could achieve that. Also, you can tailor your own "chip design" and "easily" upgrade some functionality without new hardware chip. I saw examples on multiple object detection from camera in realtime. For sure it is overhead for smaller projects.</p>
			</div>
			</div>
				<textarea id = "speech-1153" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1153">
					<img id="start_img-1153" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1153">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1156"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1156" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I'm not sure what in the linked question about development tools makes you think that they are not mature. It is true that most of them are proprietary and not open source. But I thought that the tools were quite mature even back when that question was asked three years ago. Today <a href="http://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/design-tools.html" rel="nofollow noreferrer">Xilinx</a>, <a href="http://www.altera.com/literature/po/ss_quartussevswe.pdf" rel="nofollow noreferrer">Altera</a>, and <a href="http://www.latticesemi.com/products/designsoftware/diamond/downloads.cfm" rel="nofollow noreferrer">Lattice</a> all have freely available development environments that run on Windows and Linux with 32 and 64-bit support. If you insist on open source <a href="http://iverilog.icarus.com/" rel="nofollow noreferrer">Icarus Verilog</a> can do quite a bit. But I'd personally stick with the vendor specific tools.</p>

<p>FPGA's are more than just a bunch of configurable flip flops. Consider the <a href="http://www.alterawiki.com/wiki/Nios" rel="nofollow noreferrer">Altera NIOS II</a>. A 32-bit soft-core processor capable of running Linux. Mix and match communications and other peripherals from <a href="http://opencores.org/projects" rel="nofollow noreferrer">OpenCores</a> or from <a href="http://www.xilinx.com/products/intellectual-property/index.htm" rel="nofollow noreferrer">Xilinx</a>, <a href="http://www.altera.com/products/ip/ip-index.jsp" rel="nofollow noreferrer">Altera</a>, or <a href="http://www.latticesemi.com/products/intellectualproperty/index.cfm?source=topnav" rel="nofollow noreferrer">Lattice</a> and you've built a custom microcontroller with everything you need and nothing you don't. You can even write C code for the NIOS II processor and have certain functions <a href="https://electronics.stackexchange.com/questions/63690/from-c-to-silicon-how-to-implement-software-firmware-solution-as-hardware/63704#63704">implemented directly in the FPGA hardware</a> if you need the speed. Is that high level enough thinking for you?</p>

<p>FPGA's have a high initial investment cost. But it's cheaper and easier to add functionality later in the design process. That's what's meant by "forward looking" designs. Consider a project where you want to add some additional motors to your robot but you've run out of PWM generators on your microcontroller. What do you do? Add another microcontroller? Buy separate PWM chips and connect them to a communications interface? What if all your communications interfaces are in use? With an FPGA, this is reduced almost entirely to a copy and paste operation. It's a lot easier, cheaper, and quicker to scale a design to include new functionality without buying as much additional hardware with an FPGA.</p>

<p>But probably the biggest reason to use an FPGA is speed. I'm not talking about pure clock speed. But when you need a lot of things to happen simultaneously. As Gossamer mentioned, parallelism is what FPGA's are really good at. Filter designs especially benefit from this kind of parallel architecture. If you need to filter and respond to a rapidly changing sensor, then you need an FPGA. They are also quite good at video processing as this too benefits from parallel processing.</p>

<p>Take for instance <a href="http://www.virtualworldlets.net/Resources/Hosted/Resource.php?Name=HighSpeedRobotDexterity" rel="nofollow noreferrer">this high-speed hand robot</a>. It needs to process the video from the high-speed (1000 frames per second) machine vision camera as well as the tactile sensors and respond by manipulating numerous actuators in only a few milliseconds. This type of project is when you <em>need</em> to choose FPGAs.</p>

<p><img src="https://i.stack.imgur.com/K491N.png" alt="massively parallel vision processing"></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1156" data-toggle = "popover">
				<p>user name : embedded.kyle</p>
				<p> user reputation : 1469</p>
				<p class = "tagcontent" id = "usertaginfo-1156">{'None': 124}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1156">Load Comments</button></br>
			<div id = "commentsection-1156" class = 'collapse'>
			<div id = "comment-2631" class = "comment">
				<p>Could you clarify this "FPGA's have a high initial investment cost."? Related [here](http://electronics.stackexchange.com/questions/2641/cheapest-fpgas): prices look very low. Do you mean high training cost or some other figure?</p>
			</div>
			<div id = "comment-2632" class = "comment">
				<p>@hhh I wasn't talking about raw chip cost. I was talking about development cost. Consider a microcontroller development kit such at the [PandaBoard](http://www.mouser.com/ProductDetail/PandaBoard/UEVM4460G-02-01-00/?qs=%2fha2pyFaduhIPwMlEEYwre%2f2fuMo2pNyN7EZBNikVHk%3d). Contains an ARM Cortext A9 for $181. An FPGA development board that [can hold an A9](http://www.altera.com/devices/processor/arm/cortex-a9/m-arm-cortex-a9.html) such as the [Cyclone V](http://www.buyaltera.com/scripts/partsearch.dll?Detail&name=544-2748-ND) is $1,099.</p>
			</div>
			<div id = "comment-2633" class = "comment">
				<p>@hhh There are of course cheaper FPGA development kits. But I was trying to find some metric by which to compare two things that are so different. So a development kit that has (very) roughly the same processing power is about 10x more.</p>
			</div>
			<div id = "comment-2634" class = "comment">
				<p>@hhh The cheapest ARM on Mouser is [$0.80](http://www.mouser.com/ProductDetail/Microchip-Technology/MCP7940M-I-P/?qs=sGAEpiMZZMtOXy69nW9rM0RwKQ9W9vBNX1h5vf0ZmEs%3d). The cheapest FPGA is [$2.80](http://www.mouser.com/ProductDetail/Lattice/LCMXO2-256ZE-1SG32C/?qs=sGAEpiMZZMtOXy69nW9rM%2fiHuz5dAptuJfxXclv%252bfbk%3d).</p>
			</div>
			<div id = "comment-2635" class = "comment">
				<p>@hhh The most expensive ARM is [$425.11](http://www.mouser.com/ProductDetail/Texas-Instruments/SM470R1B1MHKPS/?qs=sGAEpiMZZMtOXy69nW9rM14NomffMq2kzYYjZ6RPspI%3d). The most expensive FPGA is [$32,131.00](http://www.mouser.com/ProductDetail/Altera-Corporation/5SGTMC7K2F40C2ES/?qs=sGAEpiMZZMtOXy69nW9rM3aQPl8DI%252bpnp6rjT1coX%2f8%3d).</p>
			</div>
			<div id = "comment-2636" class = "comment">
				<p>Let's consider your [robotic hand example](http://www.virtualworldlets.net/Resources/Hosted/Resource.php?Name=HighSpeedRobotDexterity): what kind of investments should be done to do something like it? What kind of hand can you make for example with [DE1 Cyclone II](http://www.altera.com/education/univ/materials/boards/de1/unv-de1-board.html)? If you cannot afford too large investments, is it possible emulate let say the hand? I am trying to get some sense about realistic projects.</p>
			</div>
			<div id = "comment-2637" class = "comment">
				<p>@hhh That hand is cutting edge research with likely tens if not hundreds of thousands of dollars of custom equipment running it. Video processing in general tends to be on the higher end. See [here](http://www.bitec.ltd.uk/ciii_video_dev_kit.html) and [here](http://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&CategoryNo=56&No=498). And neither could probably process 1kfps video. More like 30-60fps. The board you listed doesn't have any video inputs. Though it most certainly could control the actuators and process the tactile sensors. Defiantly could emulate the hand you linked.</p>
			</div>
			<div id = "comment-2665" class = "comment">
				<p>I discussed this hand-idea further with a more-experienced/hw-guy in [Startup Sauna](http://startupsauna.com/) and he said that he can develop this kind of hand for 2k EUR (I don't know whether he meant just HW cost), anyway some reflection on the price of necessary dev board (no idea about quality though). Which video-processing-canabled FPGA would be enough for a hobbyist? I cannot understand yet why different people are giving so different numbers for the development cost/time...</p>
			</div>
			<div id = "comment-2675" class = "comment">
				<p>@hhh Most engineers are terrible at estimating time & cost. See [this translation](http://coding.abel.nu/2012/06/programmer-time-translation-table/). I'm probably shooting high but would you rather have money left over to put polish on your project or would you rather get halfway through and find out you need another grand. This other guy is going way low. Figure \$1000 for a decent high speed camera, \$1000 for FPGA HW, and another couple hundred for additional sensors and HW and that's your 2k EUR right there. Then the guy is doing the work for free and your hand is made of popsicle sticks.</p>
			</div>
			<div id = "comment-2676" class = "comment">
				<p>@hhh You need to decide what kind of project you want to do, what the hardware requirements of that project are, and what your budget is. You then need to look at the available options and decide what board suits your needs. That's a major part of engineering. Accepting the word of some anonymous guy on the internet that "this is the board you need" is just going to end in a lot of frustration and wasted money.</p>
			</div>
			</div>
				<textarea id = "speech-1156" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1156">
					<img id="start_img-1156" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1156">Comment</button>
			<br><div id = "ans-1171"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1171" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I think there might be a misconception around what an FPGA actually is and when it is used in designs.  So let me try to explain that part first.  </p>

<p><strong>FPGAs and when one might want to have one...</strong></p>

<p>At risk of simplication, an FPGA is little more than a processor that happens to be 'reconfigurable'.</p>

<p>Why would someone want a 'reconfigurable' microprocessor?  Well, because it costs far too much to fabricate a silicon processor to afford to do it for one, two, or even two hundred chips.  You'd need to be running batches of thousands of chips to make it economically feasible.  </p>

<p>Since no design is ever bug-free the first time round, going the silicon route effectively commits a company to at least two if not more test runs, all at huge fabrication costs.</p>

<p>Which essentially means that very few commercial companies are going to be interested in designing and bringing to fabrication anything other than chip with broad enough commercial appeal.</p>

<p>So, if you come up with a brilliant design that justifies a custom microprocessor, then you <em>might</em> try to bring your idea to life on a shoestring budget by implementing it in an FPGA, where the actual chip is simply a collection of gates, and a 'program' (typically VHDL or Verilog) arranges those gates into an actual microprocessor.</p>

<p>But that's quite a ways down an entirely different (microprocessor design!) road...</p>

<p>Which leads me to suggest that</p>

<p><strong>... FPGAs are <em>not</em> essential to robotics -- at least at the outset</strong></p>

<p>What you need for robotics is a <em>processor</em>.  An FPGA is just a special kind of processor (reconfigurable). </p>

<p>You ask whether you 'should'?  Well that depends on your knowledge as well as where your real interests lie -- microprocessor design first or robotics first?  </p>

<p>If microprocessors are your passion, then by all means!  And robotics is a great application area for custom microprocessors -- perhaps a vision cortex with many parallel decision pathways handled directly in hardware, or special tensor multiplication in hardware -- basically anything that generic processors can't handle well off-the-shelf.</p>

<p>But if you're going to microprocessor designs in FPGAs, well, then of course you'll need to have all of that low level knowledge you mention, and more -- because fundamentally you'll be designing your own processor.  Which has nothing really to do with robotics, even though your target application might be robotics.</p>

<p>Most designers can probably find an existing processor that will do most of what they'll ever need.</p>

<p>So I think you probably <em>don't</em> need an FPGA.</p>

<p><strong>A starter roadmap: from commercial capabilities to (maybe) an FPGA...</strong></p>

<p>First goal in my opinion is to try to get all of your creative concepts built up into a working robot (quite an intensive challenge in itself).  </p>

<p>If you find that you've got specific and significant processing bottlenecks in your design, then the next goal is optimising the selection / design of your processors, still commercially available chips.  Maybe bigger, faster (trade-off with power draw, heat dissipation).  Maybe smaller, dedicated chips handling specific tasks and interfacing with the main brain (trade-off with algorithm / logic complications).  </p>

<p>Only if there's capabilities that you just won't be able to get commercial chips to handle, then you might consider implementing a specialised processor inside an FPGA because at that point there will be very clear advantages that you hope to gain by 'rolling your own', and you can focus on just implementing those capabilities, with the right interfaces to rest of your design.</p>

<p>Otherwise, you're likely to get side-tracked from your main goal (which I'm going to assume is to actually build a robot!)</p>

<p><strong>Bottom line: FPGAs are a distraction from getting started in robotics --- until you're quite a ways down the robotics road -- and have gained some strong chops in digital electronics / microprocessor design somewhere along the way.</strong></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1171" data-toggle = "popover">
				<p>user name : Assad Ebrahim</p>
				<p> user reputation : 125</p>
				<p class = "tagcontent" id = "usertaginfo-1171">{'None': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1171">Load Comments</button></br>
			<div id = "commentsection-1171" class = 'collapse'>
			<div id = "comment-2667" class = "comment">
				<p>I can think many examples in areas such as video-processing where parallel processing with FPGA is essential for speed and more accurate results. Seen failures where people try to implement noisy iris detection real-time with a single-cpu. No. FPGA has its own specific areas where it rocks such as robotic hands of high dexterity or precise/fast video-processing. I cannot undertand juxtaposing FPGA and microprocessor like that. They are very different beasts with their own good/bad sides. Mistaken? Any idea whether this kind of good areas for FPGA listed somewhere?</p>
			</div>
			<div id = "comment-2668" class = "comment">
				<p>You're certainly correct that there are plenty of areas where FPGAs are an advantage -- I have not excluded those in my answer.  The issue is where you are on the experience curve, and how clear you are on the specific advantages you want to gain out of using an FPGA.  If you don't know the answer to that, then you probably don't need one!  (This echoes Jakob's answer below.)</p>
			</div>
			</div>
				<textarea id = "speech-1171" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1171">
					<img id="start_img-1171" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1171">Comment</button>
			<br><div id = "ans-1173"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1173" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Having worked with both FPGAs and Microcontrollers in robotics projects, I would actually say now: whatever the person implementing the task has the most experience with. If you know both equally well, you wouldn't be asking yourself the question. If you don't know either well, than these would be the points to go by:</p>

<ul>
<li>Is there complex timing on I/O ports required? 3-Phase motor control can have such requirements. FPGAs have a slight advantage here.</li>
<li>Can you parallelize your super low latency algorithm? Here the FPGA doesn't really compete with microcontrollers, but more with embedded PCs. Most things I would go for the embedded PC, but you may have an advantage with an FPGA for some specific applications. Dense stereo processing for example is often done in FPGAs. Lots of cameras use FPGAs for processing the data stream.</li>
</ul>

<p>What is also often used are hybrid solutions. Either with two chips, so one microcontroller for the program code, and an FPGA for IO or some other task. There also are a number of FPGAs that actually have a microcontroller embedded.</p>

<p>I wouldn't be so harsh on FPGAs like some other posts, but would also generally argue, that unless you know your VHDL well, you will be better off using microcontroller, or even better still embedded PCs.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1173" data-toggle = "popover">
				<p>user name : Jakob</p>
				<p> user reputation : 2519</p>
				<p class = "tagcontent" id = "usertaginfo-1173">{'ransac': 3, 'None': 210, 'computer-vision': 1, 'cameras': 1, 'c++': 3, 'slam': 12, 'rock': 1, 'i2c': 3, 'servos': 3, 'software': 1}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1173">Load Comments</button></br>
			<div id = "commentsection-1173" class = 'collapse'>
			<div id = "comment-2666" class = "comment">
				<p>Can you show some example projects that would help to understand what kind of things are good to do with FPGAs and which with microcontrollers? Suppose for example some line-following robot: it works pretty well with a single microcontroller on flat clean surface until more blurry lines that requires image-sharpening/convolutions/etc. If a line in forest (or other noisy surface), it would be far harder challenge (I doubt whether even possible to do with fpga). Have you done any real-world robotic project where you had used fpga for example for image/video-processing realtime? +1 for VHDL.</p>
			</div>
			</div>
				<textarea id = "speech-1173" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1173">
					<img id="start_img-1173" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1173">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>