<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How to combine odometry information with time-shifted information from imu
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8931" class = "post">
			<h2>Question</h2>
			<div id="vote-8931" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 502</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How to combine odometry information with time-shifted information from imu</h2>
<p>I'm working with a differential-drive robot that has odometry measurements from wheel shaft encoders and heading information from an imu (I'm using BNO055 in imu mode to get Euler angles, primarily the heading angle).</p>

<p>I'd like to use the imu header angle to augment the odometry which is prone to slipping and other errors, but the imu lags the odometry by up to 100ms.</p>

<p>How can I combine these measurements to get the best estimate of the robot pose?</p>

<p>Thanks for any word on this.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8931" data-toggle = "popover">
				<p>user name : jstanle1</p>
				<p> user reputation : 23</p>
				<p class = "tagcontent" id = "usertaginfo-8931">{'mobile-robot': 4, 'None': 0, 'imu': 4, 'odometry': 4}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8931" class = 'collapse'>
			</div>
				<textarea id = "speech-8931" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8931">
					<img id="start_img-8931" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8931">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8932"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8932" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Combining two sensor outputs that should theoretically give you the same information is called "sensor fusion". </p>

<p>The easiest way to go about this is with a tool known as a complimentary filter. The complimentary filter uses a "blend" value, between 0 and 1, to produce the output:</p>

<pre><code>filterOutput = blend*sensor1 + (1-blend)*sensor2;
</code></pre>

<p>Typically you have the sensor that is more reliable short term weighted much more than the sensor that is more reliable long term. Blend values around 0.95 are common. If you think both sensors are equally reliable, then set blend to 0.5. This simply averages the two.</p>

<p>In your case you know odometry is unreliable long term because of wheel slip and IMU short term because of delays, so I would weight odometry 0.95 and IMU 0.05 to start. See how that works and adjust as necessary. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8932" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-8932">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8932">Load Comments</button></br>
			<div id = "commentsection-8932" class = 'collapse'>
			<div id = "comment-14725" class = "comment">
				<p>Thanks for these replies.  I am doing data gathering and some work with off-line algorithms now.  I'm concerned that the data from the IMU gets behind the odometry data and stays there; it's not clear how I can compensate for that.  Otherwise, the idea of integrating over a few sampling periods to incorporate the delay sounds good.</p>
			</div>
			<div id = "comment-15165" class = "comment">
				<p>I've begun to get results from this approach (the 'blend' filter).  So far this is working well with a blend value of 1/2.  I'll be trying various blend parameter values to see how this works in general, but for now I'm getting really nice sharp squares from a test program that goes straight for a time then makes a 90-degree turn.  Thanks for this suggestion.</p>
			</div>
			<div id = "comment-15166" class = "comment">
				<p>@jstanle1 - If the answer solves your problem, please accept it. For your reference, it's technically called a "complimentary filter", in the event you wanted to read more about it. Typically you put a higher weight (blend) on the term you think is more correct short-term. But I'm glad it's working well for you!</p>
			</div>
			</div>
				<textarea id = "speech-8932" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8932">
					<img id="start_img-8932" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8932">Comment</button>
			<br><div id = "ans-8933"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8933" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You're robot must be moving pretty fast for this delay to cause problems.</p>

<p>Use a circular buffer to store the odometry readings, so you'll have a record of the last 100ms of odometry readings.</p>

<p>Use the IMU and odom combined at time $T_{-100ms}$ to estimate your last known 'accurate' state. Integrate the odom forward from $T_{-100ms}$ to $T_{0}$ to get your current state. Repeat this at every time step.</p>

<p>If your control can handle the delay, don't bother with integrating the odom. Just use your accurate state 100ms ago.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8933" data-toggle = "popover">
				<p>user name : hauptmech</p>
				<p> user reputation : 2621</p>
				<p class = "tagcontent" id = "usertaginfo-8933">{'battery': 2, 'None': 220, 'lithium-polymer': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8933">Load Comments</button></br>
			<div id = "commentsection-8933" class = 'collapse'>
			<div id = "comment-14726" class = "comment">
				<p>Thanks, I think I understand this.  The robot isn't fast, but small errors, especially heading errors, add up -- after a while it's not going the direction it thinks it is.  I get the most odometry problems when it's turning -- I suspect there's a lot of slippage.  I'm interested now to try what you've suggested.</p>
			</div>
			</div>
				<textarea id = "speech-8933" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8933">
					<img id="start_img-8933" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8933">Comment</button>
			<br><div id = "ans-8937"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8937" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>As the other answers suggest, 100ms of delay in control may not be significant to your application. It would be prudent to first solve your data-fusion problem and then see if the delay is an issue to your controller. I would first record some data of a closed-loop path and do some offline filtering to see if the results are good. For instance, make your robot drive a square and record that data.</p>

<p>Your first problem is then to synchronise the data streams; since your IMU is lagging by 100ms, then simply operate on the newest IMU data you have, with the odometry from the corresponding time. </p>

<p>The data-fusion could be done using a Kalman filter for the 2D case (X,Y,heading). The heading is updated by the IMU and the velocity (and heading, depending on the model) is updated by the odometry.
See the system model in <a href="http://home.isr.uc.pt/~rui/publications/isie20052.pdf" rel="nofollow">this paper</a>, which uses odometry. A good solution would involve a nonlinear KF such as EKF, but I suspect for low speeds and high sensor rates you can get away with a linear KF. I think the states would be $\mathbf{[x, y, \phi, x', y', \phi']}^\top$, where your process model would be the same as the first paper I linked, and the measurement model is simply $\mathbf{y}= \mathbf{u} + v$, where v is Gaussian white noise with known standard deviation. Maybe see <a href="https://github.com/acfr/snark/blob/master/math/filter/test/constant_speed_test.cpp" rel="nofollow">this kalman filter framework</a>.</p>

<p>After you have some working results with your offline data, you can worry about implementing it online. The implementation will greatly depend on your choice of data-fusion algorithm.</p>

<p>See also: <a href="http://www.mrpt.org/tutorials/programming/odometry-and-motion-models/probabilistic_motion_models/" rel="nofollow">particle filter methods</a> and a full <a href="http://wiki.ros.org/robot_localization" rel="nofollow">ROS implementation</a>.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8937" data-toggle = "popover">
				<p>user name : Gouda</p>
				<p> user reputation : 632</p>
				<p class = "tagcontent" id = "usertaginfo-8937">{'control': 0, 'None': 39, 'computer-vision': 1, 'calibration': 1, 'cameras': 1, 'kalman-filter': 0, 'jacobian': 0}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8937">Load Comments</button></br>
			<div id = "commentsection-8937" class = 'collapse'>
			<div id = "comment-14727" class = "comment">
				<p>Thanks for the explanation and the links.  I'll try out simpler data fusion first, as you suggest, then tackle handling the delay if necessary</p>
			</div>
			</div>
				<textarea id = "speech-8937" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8937">
					<img id="start_img-8937" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8937">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>