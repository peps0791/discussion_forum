<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Programming Robots with JavaScript
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-287" class = "post">
			<h2>Question</h2>
			<div id="vote-287" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">36</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 5338</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Programming Robots with JavaScript</h2>
<p>As somebody who is spending the majority of his time programming in JavaScript, what's the best route to get into small-robotics without needing to deviate too much from my current language focus?</p>

<p>Are there any project kits or tools that make use of the JavaScript language that might make the field more approachable for developers like myself? I would even be interested in virtual environments where all code is executed in a simulation.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-287" data-toggle = "popover">
				<p>user name : Sampson</p>
				<p> user reputation : 336</p>
				<p class = "tagcontent" id = "usertaginfo-287">{'None': 0, 'simulator': 11, 'programming-languages': 36, 'children': 11, 'software': 47}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-287">Load Comments</button></br>
			<div id = "commentsection-287" class = 'collapse'>
			<div id = "comment-314" class = "comment">
				<p>You should checkout this post... http://weblog.bocoup.com/javascript-arduino-programming-with-nodejs/  It discusses a pure Js implementation of the protocol used for Arduino. Pretty cool stuff.</p>
			</div>
			<div id = "comment-315" class = "comment">
				<p>I'd like to see some nodejs implementation running on the robot. One might just control the robot over the web using websockets.</p>
			</div>
			<div id = "comment-421" class = "comment">
				<p>You do not programme in JavaScript - You write scripts(which are used on a browser for Client manipulation of the DOM) You can programme in JAVA - which is completely different. `node.js` it not javascript either. It is a C library that interprets AJAX calls as mini server and is used for high volume requests- for example on ebay- You do not need to refresh a page on an item that is ending because javascript synchronises the bidding price and time by using node.js extremely quick response while reducing traffic overhead) node.js is good for arduino cause it is `C`</p>
			</div>
			<div id = "comment-422" class = "comment">
				<p>So you would programme the bot in `c` and interface to it using node.js - which inherently uses JavaScript ajax for request but you can also use server requests or other clever code that is not related to JavaScript in anyway.</p>
			</div>
			<div id = "comment-20764" class = "comment">
				<p>Is the Arduino code the only efficient way currently?</p>
			</div>
			</div>
				<textarea id = "speech-287" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-287">
					<img id="start_img-287" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-287">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-288"  class = "post">
				<h2>Answer</h2>
			<div id="vote-288" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">12</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Hmm, interesting question! I personally would suggest that you take a look at the Arduino platform. It's programmed in C, so the syntax is going to be... familiar, to a JavaScript writer. In my humble opinion, knowing how the syntax (while loops, if/than blocks, etc) is laid out is 70% of the battle, once you're familiar with that, you can plug and play. You can pick up a starter kit for around $30 online from the good folks at SparkFun.com or adafruit.com, you can program it on a PC, Mac or Linux machine, and it comes pre-loaded with enough examples to ease you into the language quickly. I'm not saying that you're just gonna drop some JavaScript code into it and be on your way, but I was a JavaScript programmer when I started out with Arduino, and I found it quite easy to pick up and run with. Good luck, as a part time teacher in robotics it's always awesome to see people getting into the field!</p>

<p>P.S. - you should also be familiar/comfortable with building electronic circuits (lights, motors and the like), but any good Arduino introduction kit worth its salt will get you started if you don't have any experience.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-288" data-toggle = "popover">
				<p>user name : Chris</p>
				<p> user reputation : 562</p>
				<p class = "tagcontent" id = "usertaginfo-288">{'quadcopter': 44, 'None': 15, 'accelerometer': 8, 'power': 29, 'localization': 15, 'battery': 29, 'multi-rotor': 2, 'pid': 2, 'uav': 8, 'motion': 2, 'imu': 8, 'cnc': 6, 'gyroscope': 8, 'gps': 15}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-288">Load Comments</button></br>
			<div id = "commentsection-288" class = 'collapse'>
			<div id = "comment-313" class = "comment">
				<p>P.S. - A good question for the fledgling, newly minted Robotics.SE site, I think :)</p>
			</div>
			<div id = "comment-316" class = "comment">
				<p>Great answer, @Chris. I've heard of the Arduino platform from some other JavaScript developers. Perhaps that's the best gateway drug for a developer looking to get hooked.</p>
			</div>
			<div id = "comment-329" class = "comment">
				<p>As a young JavaScript/web developer I find your question super interesting. As stated before there are platforms for node.js and other various versions, however if you are really comfortable in JavaScript, you could really easily learn any other language, which I would highly recommend. Not only does it expand your ability to understand fundamental computer science, but it also makes learning new things easier.</p>
			</div>
			</div>
				<textarea id = "speech-288" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-288">
					<img id="start_img-288" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-288">Comment</button>
			<br><div id = "ans-294"  class = "post">
				<h2>Answer</h2>
			<div id="vote-294" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">20</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There are a couple of projects out there that mate the Arduino platform to the Node.js javascript execution engine.  Take a look at <a href="https://github.com/rwldrn/johnny-five" rel="nofollow">Johnny-Five</a>, which is a library on top of the Arduino Firmata remote control protocol or <a href="https://github.com/JayBeavers/node-reflecta" rel="nofollow">node-reflecta</a>, which is a Node.js interface for the Arduino Reflecta remote control protocol.</p>

<p>I've personally built a Node.js controlled robot called <a href="https://github.com/JayBeavers/RocketBot" rel="nofollow">RocketBot</a>, that combines node-reflecta with node-joystick on top of a Beaglebone and an Arduino so I can attest this approach works well.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-294" data-toggle = "popover">
				<p>user name : Jay Beavers</p>
				<p> user reputation : 969</p>
				<p class = "tagcontent" id = "usertaginfo-294">{'None': 68}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-294" class = 'collapse'>
			</div>
				<textarea id = "speech-294" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-294">
					<img id="start_img-294" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-294">Comment</button>
			<br><div id = "ans-352"  class = "post">
				<h2>Answer</h2>
			<div id="vote-352" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">8</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p><a href="http://ros.org">Robot Operating System</a> (ROS) offers the ability to use Javascript to control your robots. Specifically you will want to look at <a href="http://ros.org/wiki/rosbridge/Tutorials/Using%20Javascript%20to%20control%20ROS%20via%20rosjs">rosbridge</a>. You will then need to use <a href="http://www.ros.org/wiki/rosserial">rosserial</a> to interface with the microcontroller controlling your robot.</p>

<p>While I am a big fan of ROS this is an overly complicated way to begin exploring the field of robotics IMHO. You would be better served to pick up an <a href="http://arduino.cc">Arduino</a> and learning a little bit of C. Arduino does a great job of making the process simple and C is not a large deviation from JS from a syntax perspective.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-352" data-toggle = "popover">
				<p>user name : DaemonMaker</p>
				<p> user reputation : 3321</p>
				<p class = "tagcontent" id = "usertaginfo-352">{'control': 4, 'stereo-vision': 15, 'None': 271, 'computer-vision': 15, 'battery': 7, 'cameras': 15, 'research': 4, 'troubleshooting': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-352" class = 'collapse'>
			</div>
				<textarea id = "speech-352" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-352">
					<img id="start_img-352" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-352">Comment</button>
			<br><div id = "ans-355"  class = "post">
				<h2>Answer</h2>
			<div id="vote-355" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>A friend of mine actually has a pretty powerful <a href="http://glench.com/make/nodejs-robot/" rel="nofollow">tank robot</a> that's controlled with NodeJS over wifi. The robot itself isn't exactly "small-robotics" at 150 pounds, but you could probably learn quite a bit from the source code. It has a netbook onboard running a webserver and talking to an Arduino. You can find the source code on his Github <a href="https://github.com/Glench/Capstone-Tank-Robot-Software" rel="nofollow">project page</a>. The real-time control from a web browser on another computer is surprisingly responsive.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-355" data-toggle = "popover">
				<p>user name : Joe Baker</p>
				<p> user reputation : 477</p>
				<p class = "tagcontent" id = "usertaginfo-355">{'None': 33}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-355" class = 'collapse'>
			</div>
				<textarea id = "speech-355" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-355">
					<img id="start_img-355" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-355">Comment</button>
			<br><div id = "ans-356"  class = "post">
				<h2>Answer</h2>
			<div id="vote-356" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Generally there are many ways to use node.js with a platform, like <a href="http://blog.tomg.co/post/21322413373/how-to-install-node-js-on-your-raspberry-pi">this one for the RPi</a>. There are a lot more similar ones <a href="https://www.google.co.in/search?sugexp=chrome,mod=3&amp;sourceid=chrome&amp;client=ubuntu&amp;channel=cs&amp;ie=UTF-8&amp;q=nodejs+robotics">if you just search for them</a>.</p>

<p>Another interesting one is <a href="http://www.arduinodev.com/software/ardugate/">ArduGate</a>, which lets web pages communicate with the arduino via JS (though probably not exactly what you wanted since it doesn't compile and load to  the arduino)</p>

<p>Though I really don't see what's wrong with using a different language. I myself write primarily in JS, but I find myself perfectly comfortable programming an Arduino in C++ (it also allows C and Java, and if you put in a bit of work, <a href="http://arduino.cc/playground/Main/Interfacing">quite a few more languages</a> ). Remember, we're not needing anything fancy for programming a robot--just normal <code>if</code>s,<code>for</code>s,<code>while</code>s,<code>switch</code>es, and the occasional <code>class</code>. Learn the syntax, and you're good to go :) The only thing is that C/C++/Java are strongly typed (though if you're using the RPi, python is weakly typed but picky in a million more ways), so you may get a bit of frustration in the beginning when you have to specify types for everything. One advantage of using the native languages is that it's much easier to find APIs and example code on the net. For example, aside from ArduGate(which has it built in and is probably not what you wanted), I can't find any way to access the EEPROM--a common task. So, unless you want to stick to simple programs, it's just better to use the native languages.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-356" data-toggle = "popover">
				<p>user name : Manishearth</p>
				<p> user reputation : 1068</p>
				<p class = "tagcontent" id = "usertaginfo-356">{'underwater': 30, 'None': 53, 'protection': 64, 'motor': 64, 'auv': 30, 'actuator': 11}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-356" class = 'collapse'>
			</div>
				<textarea id = "speech-356" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-356">
					<img id="start_img-356" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-356">Comment</button>
			<br><div id = "ans-1026"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1026" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p><a href="http://www.microsoft.com/robotics/" rel="nofollow">Microsoft Robotics</a> uses a protocol called <a href="http://social.msdn.microsoft.com/Forums/en-US/roboticsdss/thread/babf3e90-8196-40b2-a4a1-5f2ecc4e9b47" rel="nofollow">Decentralized Software Services Protocol (DSSP)</a> and they <a href="http://blogs.msdn.com/b/msroboticsstudio/archive/2007/07/10/decentralized-software-services-protocol-dssp-placed-under-microsoft-open-specification-promise.aspx" rel="nofollow">released the specs</a> under a license that allows anyone to implement it in any language. The DSSP protocol is totally compatible with current web standards and I think it would be a great idea to implement it in JavaScript and NodeJS. That can make it possible for your node application to interact with any DSS robotics services available today.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1026" data-toggle = "popover">
				<p>user name : orad</p>
				<p> user reputation : 121</p>
				<p class = "tagcontent" id = "usertaginfo-1026">{'None': 2}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1026" class = 'collapse'>
			</div>
				<textarea id = "speech-1026" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1026">
					<img id="start_img-1026" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1026">Comment</button>
			<br><div id = "ans-1668"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1668" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There is also a project called <a href="http://www.espruino.com/" rel="nofollow">Espruino</a>, which is a JavaScript interpreter for low power ARM microcontrollers. It is a rewrite of the <a href="https://code.google.com/p/tiny-js/" rel="nofollow">tiny-js</a> project, a small C++ interpreter for Javascript.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1668" data-toggle = "popover">
				<p>user name : Robz</p>
				<p> user reputation : 954</p>
				<p class = "tagcontent" id = "usertaginfo-1668">{'pid': 8, 'embedded-systems': 0, 'slam': 20, 'sensor-error': 8, 'accelerometer': 5, 'kinematics': 7, 'mechanism': 1, 'differential-drive': 8, 'imu': 12, 'kalman-filter': 28, 'actuator': 21, 'gyroscope': 5, 'gps': 20, 'magnetometer': 5, 'None': 25, 'noise': 5, 'power': 0, 'localization': 20, 'microcontroller': 0, 'brushless-motor': 13, 'sensors': 41, 'quadcopter': 13, 'navigation': 7, 'sensor-fusion': 21, 'sonar': 8, 'servos': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1668" class = 'collapse'>
			</div>
				<textarea id = "speech-1668" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1668">
					<img id="start_img-1668" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1668">Comment</button>
			<br><div id = "ans-1690"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1690" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Programming the <a href="http://en.wikipedia.org/wiki/Parrot_AR.Drone" rel="nofollow">AR.Drone 2.0</a> with Javascript is super fun. Here's an example that makes a drone take off, move around, do a flip, then land, all using the <a href="https://github.com/felixge/node-ar-drone" rel="nofollow">node-ar-drone</a> library:</p>

<pre><code>var arDrone = require('ar-drone');
var client = arDrone.createClient();

client.takeoff();

client
  .after(5000, function() {
    this.clockwise(0.5);
  })
  .after(3000, function() {
    this.animate('flipLeft', 15);
  })
  .after(1000, function() {
    this.stop();
    this.land();
  });
</code></pre>

<p>The blog post <a href="http://voodootikigod.com/nodebots-the-rise-of-js-robotics/" rel="nofollow">NodeBots - the Rise of JS Robotics</a> talks about advantages javascript has for robotics, specifically the natural way that real world objects and actions can be modeled as chainable, evented processes.  The example code above to animate a drone looks very similar to using jQuery to animate an HTML element:</p>

<pre><code>$("#foo")
  .slideUp(300)
  .delay(800)
  .fadeIn(400);
</code></pre>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1690" data-toggle = "popover">
				<p>user name : John Wiseman</p>
				<p> user reputation : 138</p>
				<p class = "tagcontent" id = "usertaginfo-1690">{'None': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1690">Load Comments</button></br>
			<div id = "commentsection-1690" class = 'collapse'>
			<div id = "comment-3670" class = "comment">
				<p>I've edited the answer to be more specific and add more context.  Thanks for the feedback.</p>
			</div>
			<div id = "comment-3673" class = "comment">
				<p>Thanks John, that's a great edit, just the sort of thing that makes a future-proof answer.</p>
			</div>
			</div>
				<textarea id = "speech-1690" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1690">
					<img id="start_img-1690" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1690">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>