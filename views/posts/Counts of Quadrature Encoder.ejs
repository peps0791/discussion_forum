<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Counts of Quadrature Encoder
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-4395" class = "post">
			<h2>Question</h2>
			<div id="vote-4395" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 516</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Counts of Quadrature Encoder</h2>
<p>Simply, I had Rover 5 with 2 DC motors and 2 quadrature encoders, I just want to use encoders to measure the distance of travelling for each wheel.</p>

<p>To start with, I just want to determine the total counts per revolution. I read the article about quadratic encoder from <a href="http://letsmakerobots.com/node/24031" rel="nofollow">this broken link</a>.</p>

<p>In Rover 5, each encoder has four wires: red (5V or 3.3V), black(Ground), yellow (Signal 1) and white (Signal 2). I connected each wire in its right place on Arduino Uno board, using the circuit:</p>

<ul>
<li>rotary encoder ChannelA attached to pin 2 </li>
<li>rotary encoder ChannelB attached to pin 3</li>
<li>rotary encoder 5V attached to 5V</li>
<li>rotary encoder ground attached to ground </li>
</ul>

<p>For one encoder, I test the code below to determine the total counts or ticks per revolution, the first program by using loop and second by using an interrupt.</p>

<p>Unfortunately while I run each program separately, rotating the wheel 360 degree by hand, the outputs of these two programs was just "gibberish" and I don't know where is the problem . Could anyone help?</p>

<p>Arduino programs posted below.</p>

<p>First program:</p>

<pre><code>// Constants
const int  ChanAPin = 2;    // pin for encoder ChannelA
const int  ChanBPin = 3;    // pin for encoder ChannelB

// Variables
int encoderCounter = -1;   // counter for the number of state changes
int ChanAState = 0;         // current state of ChanA
int ChanBState = 0;        // current state of ChanB
int lastChanAState = 0;     // previous state of ChanA
int lastChanBState = 0;    // previous state of ChanB

void setup() {
  // initialize the encoder pins as inputs:
  pinMode(ChanAPin, INPUT);
  pinMode(ChanBPin, INPUT);
  // Set the pullup resistors
  digitalWrite(ChanAPin, HIGH);
  digitalWrite(ChanBPin, HIGH);

  // initialize serial communication:
  Serial.begin(19200);
  Serial.println("Rotary Encoder Counter");
}

void loop() {
  // read the encoder input pins:
  ChanAState = digitalRead(ChanAPin);
  ChanBState = digitalRead(ChanBPin); 
  // compare the both channel states to previous states
  if (ChanAState != lastChanAState || ChanBState != lastChanBState) {
    // if the state has changed, increment the counter
      encoderCounter++;
      Serial.print("Channel A State = ");
      Serial.println(ChanAState);
      Serial.print("Channel B State = ");
      Serial.println(ChanBState);      
      Serial.print("State Changes = ");
      Serial.println(encoderCounter, DEC);
    // save the current state as the last state, 
    //for next time through the loop
    lastChanAState = ChanAState;
    lastChanBState = ChanBState;    
  }
}
</code></pre>

<p>The second program (with interrupt)</p>

<pre><code>static long s1_counter=0;
static long s2_counter=0;

void setup()
{
  Serial.begin(115200);

  attachInterrupt(0, write_s1, CHANGE); /* attach interrupt to pin 2*/
  attachInterrupt(1, write_s2, CHANGE); /* attach interrupt to pin 3*/
  Serial.println("Begin test");
}

void loop()
{
}

void write_s1()
{
  s1_counter++;
  Serial.print("S1 change:");
  Serial.println(s1_counter);
}

void write_s2()
{
  s2_counter++;
  Serial.print("S2 change:");
  Serial.println(s2_counter);
}
</code></pre>

			</div>
			<div class = "userinfosection"  id = "userinfo-4395" data-toggle = "popover">
				<p>user name : Maria88</p>
				<p> user reputation : 43</p>
				<p class = "tagcontent" id = "usertaginfo-4395">{'mobile-robot': 8, 'None': 0, 'wheeled-robot': 4, 'quadrature-encoder': 6}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4395">Load Comments</button></br>
			<div id = "commentsection-4395" class = 'collapse'>
			<div id = "comment-17419" class = "comment">
				<p>I would not expect any interrupt routine to have a serial print in it. If your interrupt is waiting around to send to a serial port, it is probably missing subsequent interrupts. This could easily account for gibberish data. As a quick check, your `_counter` values should never differ by more than 1 for a quadrature encoder. I would try removing the print statements, and have your `loop` function print the `_counter` values if they change.</p>
			</div>
			</div>
				<textarea id = "speech-4395" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4395">
					<img id="start_img-4395" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4395">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-4400"  class = "post">
				<h2>Answer</h2>
			<div id="vote-4400" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You're likely getting something analogous to "<a href="http://www.opencircuits.com/Debouncing_Microcontroller_Inputs" rel="nofollow">contact bounce</a>".
When you slowly rotate the wheel,
there are regions where channel A is Lo for a while,
then channel A is Hi for a while.
While it would be nice if the Arduino only saw one low-to-high transition
between those regions,
often a encoder will oscillate a few or a dozen times
during the brief period when the encoder is balanced on the edge of the transition.</p>

<p>Have you noticed that the original code always increments the counter, never decrements it?
If you had code that
handled both forward rotation (clockwise; incrementing the counter) and reverse rotation (counterclockwise; decrementing the counter),
it would automatically fix the "bounce" problem.</p>

<p>One popular approach: while B is low, low-to-high transitions on A increment the count,
while high-to-low transitions decrement the count.
Then if A bounces a few extra times while B is low --
instead of a crisp Lo-Hi (+1), it does Lo-Hi-Lo-Hi-Lo-Hi (+1, -1, +1, -1, +1) --
we still get the correct final count.
In either case the final result is one count more.
(While B is high, low-to-high transitions on A decrement the count, etc.)</p>

<p>A quick Google search
<a href="https://www.google.com/search?q=arduino+quadrature+encoder+library" rel="nofollow">https://www.google.com/search?q=arduino+quadrature+encoder+library</a>
shows many quadrature encode libraries for the Arduino.
Many of them are reviewed at
<a href="http://playground.arduino.cc/Main/RotaryEncoders" rel="nofollow">http://playground.arduino.cc/Main/RotaryEncoders</a>
.</p>

<p>Could you maybe try one of those libraries and tell us how well it worked (or didn't work) ?</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-4400" data-toggle = "popover">
				<p>user name : David Cary</p>
				<p> user reputation : 3365</p>
				<p class = "tagcontent" id = "usertaginfo-4400">{'quadcopter': 38, 'stepper-driver': 9, 'None': 256, 'multi-rotor': 2, 'force-sensor': 9, 'stability': 36, 'industrial-robot': 1, 'design': 18, 'motor': 2, 'stepper-motor': 9}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4400">Load Comments</button></br>
			<div id = "commentsection-4400" class = 'collapse'>
			<div id = "comment-6973" class = "comment">
				<p>You are welcome. Good luck.</p>
			</div>
			</div>
				<textarea id = "speech-4400" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4400">
					<img id="start_img-4400" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4400">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>