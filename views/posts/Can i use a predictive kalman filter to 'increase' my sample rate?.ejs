<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Can i use a predictive kalman filter to 'increase' my sample rate?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-12008" class = "post">
			<h2>Question</h2>
			<div id="vote-12008" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 102</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Can i use a predictive kalman filter to 'increase' my sample rate?</h2>
<p>I have a slam algorithm that outputs at around 30Hz, an implementation of ORBSLAM2.</p>

<p><a href="https://github.com/raulmur/ORB_SLAM2" rel="nofollow noreferrer">https://github.com/raulmur/ORB_SLAM2</a></p>

<p>I am reading this into a renderer that expects 60+ Hz.</p>

<p>Because my sample speed is low, I am getting 'shuddering' in the display, as the renderer adds linear 'steps' between the samples. </p>

<p>For example, I am seeing a result like:</p>

<pre><code>time   sample    result

1         20          20
2         n/a         20
3         n/a         20
4         22          22
5         n/a         22
6         n/a         22
7         24          24
8         n/a         24
9         n/a         24
</code></pre>

<p>What i need to do, is predict the next sample, and fill in the gaps, so to speak, so that I end up with something like:</p>

<pre><code>time   sample    result

1         20          20
2         n/a         20.66
3         n/a         21.33
4         22          22
5         n/a         22.66
6         n/a         23.66
7         24          24
8         n/a         24.33
9         n/a         25.66
</code></pre>

<p>I need to predict 6DOF, for which i have translation xyz, and a quaternion xyzw.
But if I can find a way to predict even one axis, for a start, that would be great.</p>

<p>I have the data outputting as xyz and xyzw, at around 30Hz. I also have an xsens IMU, which i am using to pass in an initial rotation value.</p>

<p>Can i use a predictive filter for this purpose? Is a kalman suitable? </p>

<p>I am looking at:</p>

<p><a href="https://github.com/simondlevy/TinyEKF" rel="nofollow noreferrer">https://github.com/simondlevy/TinyEKF</a></p>

<p>and a Bayes filter:</p>

<p><a href="http://bayesclasses.sourceforge.net/Bayes++.html" rel="nofollow noreferrer">http://bayesclasses.sourceforge.net/Bayes++.html</a></p>

<p>But am a little out of my depth.</p>

<p>Thank you, please ask if I have not made sense!</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-12008" data-toggle = "popover">
				<p>user name : anti</p>
				<p> user reputation : 128</p>
				<p class = "tagcontent" id = "usertaginfo-12008">{'stereo-vision': 1, 'None': 0, 'monocular': 1, 'c++': 5, 'slam': 2, 'kalman-filter': 4}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-12008">Load Comments</button></br>
			<div id = "commentsection-12008" class = 'collapse'>
			<div id = "comment-21294" class = "comment">
				<p>What type of SLAM are you using? Also, what are the states you need to "fill in"? Are you trying to predict pose, landmarks, point clouds?</p>
			</div>
			<div id = "comment-21297" class = "comment">
				<p>Hi, thanks for your reply. I have added more info. I need to predict camera pose as translation xyz and quaternion rotation. It is an implementation of ORBSLAM2.</p>
			</div>
			<div id = "comment-21300" class = "comment">
				<p>... But for now, if I could get even a single value predicting as i want, i can extrapolate from there!</p>
			</div>
			</div>
				<textarea id = "speech-12008" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12008">
					<img id="start_img-12008" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12008">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-12014"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12014" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>In this situation, you probably shouldn't use a Kalman filter for "filling" in the gaps. Typically, you use a Kalman filter (or Bayes filter etc...) to fuse information from different sources.</p>

<p>In your case, you have are using SLAM for localization. The SLAM algorithm is taking in data and estimating the pose of the camera as well as a sparse 3D reconstruction of the environment. Internally, this probably already performs some type of prediction/update for tracking etc...</p>

<p>The problem you are having is that the algorithm is only running at 30Hz, and you need 60Hz of pose data if I understand correctly. If I were you, I would take the states (position and velocity) at each time step and propagate them forward (at 60Hz).</p>

<p>To propagate them forward, I mean integrate your pose using your previous state estimates. For example, if your states were x position, y position, x velocity, and y velocity, then you can assume your velocity is constant and propagate your position using that velocity. </p>

<p>$$x_{k+1} = x_k + v_{x,k} \Delta t$$</p>

<p>$$y_{k+1} = y_k + v_{y,k} \Delta t$$</p>

<p>Note that you will need to write out the equations for your system. In the above equations, the $k$ is the previous time step, and $\Delta t$ is the change in time between the previous time step and the current time step. Once you receive another measurement from the SLAM algorithm, use that measurement instead of the propagated state, then repeat. You can keep the intermediate propagated states, but you don't want to perform an update because your propagated states are not based on sensor measurements. So, basically in between the measurements you get from ORBSLAM, you will have these intermediate measurements.</p>

<p>Edit: Keep in mind that the question you asked is about how to fill in the gaps given low frequency data. I am assuming you do not have extra sensors such as IMU, GPS, encoders, etc... Regardless, if additional sensors are available, this still doesn't address how to obtain data at a higher frequency (although it is likely the IMU will operate above 50Hz). I am suggesting an approach to fill in missing data without adding complexity to your system. Assuming constant velocity is reasonable if the motion isn't highly dynamic. If you do have additional sensors you want to incorporate, I think you would want to reconsider your overall approach because you can use IMU and encoders to improve the feature tracking and reconstruction.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12014" data-toggle = "popover">
				<p>user name : Ralff</p>
				<p> user reputation : 158</p>
				<p class = "tagcontent" id = "usertaginfo-12014">{'None': 4}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-12014">Load Comments</button></br>
			<div id = "commentsection-12014" class = 'collapse'>
			<div id = "comment-21306" class = "comment">
				<p>Thanks! Can you please explain what you mean by `propagate them forward (at 60Hz) ` ? I need to avoid the 'stepping' as above, so i cannot just duplicate the same value until i get a new updated value.</p>
			</div>
			<div id = "comment-21307" class = "comment">
				<p>See my edit, I provided a simple 2D example of what I mean.</p>
			</div>
			<div id = "comment-21311" class = "comment">
				<p>Thank you once again, I have looked through the SLAM code and the velocity is already calculated, so I can access it.  Sorry to bother you again, but I am trying to convert your equation into c++, and am lost. (my memory of math symbols is failing me) Something like:

`predicted x value = (current x value)  + current velocity, (difference?)`

if you have another moment, could you explain the `k t` for me? Is it the difference between k and t? if so, what is `t`?

Thank you again for your time.</p>
			</div>
			<div id = "comment-21313" class = "comment">
				<p>@anti, the 'k' you see is a second subscript on the velocity variable. You want (new x value) = (current x value) + (current velocity) * (time difference). NOTE: To be most correct you should also propagate for the covariance matrices for the save time difference. If you do this then you can simply apply the measurement when it arrives and it will 'just work'. If you don't want to do that, or it's too confusing, you need to remember all the variables from the last measurement step (i.g. ignore any variables from the intermediate propagation)</p>
			</div>
			<div id = "comment-21322" class = "comment">
				<p>Thank you! Apologies for my math idiocy. If you have  a moment more, could you please explain ` propagate for the covariance matrices for the save time difference` for me?</p>
			</div>
			<div id = "comment-21323" class = "comment">
				<p>Sorry, that sentence was horrible (fingers not typing what I told them). It should read "propagate the covariance matrices for the same time difference". I'm not sure what source you're using for your Kalman filter, but using https://en.wikipedia.org/wiki/Kalman_filter as a reference I'm talking about the second equation under the Details::Predict section (the first equation is just the x update equation you already have now, but in a fancied up form)</p>
			</div>
			<div id = "comment-21324" class = "comment">
				<p>`If you don't want to do that, or it's too confusing` I think it is, my math is sadly lacking!  `you need to remember all the variables from the last measurement step`... Do you mean that i should use the time since the last measured value for each intermediate step, rather than the time BETWEEN intermediate steps?</p>
			</div>
			<div id = "comment-21325" class = "comment">
				<p>No, I mean when you get a new measurement you need to throw away all the intermediate steps before applying the new measurement. This means using all the old variable values you had immediately after the last measurement.</p>
			</div>
			<div id = "comment-21326" class = "comment">
				<p>Something like:

`VALUE1 IN`
`(new value) = (VALUE1) + (current velocity) * (time difference since VALUE1).`
`(new value) = (VALUE1) + (current velocity) * (time difference since VALUE1).`
`(new value) = (VALUE1) + (current velocity) * (time difference since VALUE1).`
`VALUE2 IN`
`(new value) = (VALUE2) + (current velocity) * (time difference since VALUE2).`
`(new value) = (VALUE2) + (current velocity) * (time difference since VALUE2).`
`(new value) = (VALUE2) + (current velocity) * (time difference since VALUE2).`

.. or am I looking at this wrong?</p>
			</div>
			<div id = "comment-21327" class = "comment">
				<p>Hmm, that will work in a crude sense but it is not a Kalman filter.  This reply thread is already getting too long so I'd recommend to try what you have and if it works great! If it doesn't work as well as you'd like you'll have to read up on different filtering algorithms.</p>
			</div>
			<div id = "comment-21328" class = "comment">
				<p>Please see my additional edits. I still do not recommend a Kalman filter for this application. You do not need to propagate covariance since you would just be filling in the gaps. You are not modifying the 30Hz solution.</p>
			</div>
			<div id = "comment-21330" class = "comment">
				<p>Thank you all for your time. i will look at this  approach:
`xk+1=xk+vx,k t
xk+1=xk+vx,k t`
 and see what I get. Thanks again!</p>
			</div>
			</div>
				<textarea id = "speech-12014" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12014">
					<img id="start_img-12014" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12014">Comment</button>
			<br><div id = "ans-12018"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12018" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Short answer, yes, if you use your IMU to fill in the gaps.</p>

<p>You can use additional Bayesian filtering to fill in the pose gaps as long as you fuse in your IMU data. The IMU (assuming it has reasonable covariance and frequency) will be closer to the ground truth between the gaps than the forward propogation cBEiN recommends. cBEiN gives the solution for constant velocity between frames, but if you can't assume your robot has zero acceleration or angular acceleration (e.g. it's vibrating) between frames, you have all the tools you need at your fingertips in your trusty IMU. There's not so much drift creating a full state estimate in just 33ms. Integrating the IMU data to create poses between fused states (that is, state estimates made using both IMU and visual data) can fill in the time between your visual frames. An additional benefit is that it will account for sharp accelerations that are too blurry on camera to properly estimate your pose. These are situations which would often result in loss of localization, but by feeding the fused estimate back into your visual SLAM when its covariance is better than the visual odometry's covariance, it ought to put you back on track and prevent some of the major distortions that require additional loop closures to correct. Lastly, if you're using a depth camera, many of these cameras suffer from depth distortion during lateral movements or rotations, which can throw off your localization. If you notice these effects, it's again a great opportunity to fuse your IMU.</p>

<p>If you're using ROS, this is a great use-case for the <code>robot_localization</code> package.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12018" data-toggle = "popover">
				<p>user name : Nate Gardner</p>
				<p> user reputation : 154</p>
				<p class = "tagcontent" id = "usertaginfo-12018">{'None': 3}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-12018">Load Comments</button></br>
			<div id = "commentsection-12018" class = 'collapse'>
			<div id = "comment-21312" class = "comment">
				<p>Hi, and thank you for your reply. I am on windows, without ROS, sadly. (Our renderer is windows only).

So I could potentially use:

http://bayesclasses.sourceforge.net/Bayes++.html 

here? I am a bit lost on how to proceed!</p>
			</div>
			<div id = "comment-21314" class = "comment">
				<p>Have you considered using ROS on the robot and simply feeding the data in to Windows? While it's a bad plan to use ROS exclusively on Windows, I've been able to have simple ROS nodes on Windows and send data back and forth between the robot and Windows base station.</p>
			</div>
			<div id = "comment-21315" class = "comment">
				<p>we are too tied into a windows pipeline at this point, and it has to stay that way for now!</p>
			</div>
			<div id = "comment-21316" class = "comment">
				<p>It's been a long time since I've looked at Bayes++, but, without knowing much about your robot, I suggest you think about the linearity of your system to decide whether KF, EKF, or UKF meets your needs. There's also always particle filtering if you have multimodal data, but I'm pretty sure ORBSLAM has a unimodal/normal pose estimate.

You should create a 15-dimensional state estimate and fuse the data according to covariance of both your visual odometry and your IMU. The covariance exponentiates each time you integrate. Also, do you have a pre-fused IMU? That can help a lot in this situation</p>
			</div>
			<div id = "comment-21317" class = "comment">
				<p>This is old but really relevant here: https://www.youtube.com/watch?v=C7JQ7Rpwn2k

If you have a pre-fusion package like this for the IMU, you can then simply run the direct state estimates out of the fused datastream into your filter, along with the pose coming off your visual odometry.</p>
			</div>
			<div id = "comment-21318" class = "comment">
				<p>it is xsens vru-10, and gives low drift quaternions, eulers, or a matrix as well as raw gyro/accel data. Is that what you mean by pre-fused?</p>
			</div>
			<div id = "comment-21319" class = "comment">
				<p>Cool. pop in the orientation / angular velocity directly, then add acceleration, integrate acceleration for velocity and position (unless your fusion comes with a velocity or position stream). Keep in mind covariance on those are linear and quadratic respectively over time.</p>
			</div>
			<div id = "comment-21320" class = "comment">
				<p>By pre-fused, I mean does it provide hardware-fused state data (e.g. orientation, angular velocity) instead of raw un-fused data that can be combined to be improved.</p>
			</div>
			<div id = "comment-21321" class = "comment">
				<p>thanks! this is starting to sound a little out of my league. i have some learning to do.  `pop in the orientation / angular velocity directly, then add acceleration, integrate acceleration for velocity and position`...

Can you suggest a filter that is set up in this way already? I am a bit lost on how to implement this. Thanks again</p>
			</div>
			<div id = "comment-21329" class = "comment">
				<p>I don't think throwing another filter on top of ORBSLAM is a good idea. If he wants to use an IMU to fill in gaps, that would be fine, but if he wants to use an IMU to increase perform, it needs to be integrated with ORBSLAM.</p>
			</div>
			<div id = "comment-21349" class = "comment">
				<p>It really depends on how the transforms/reference frames are set up. In ROS terms, is ORBSLAM spitting out `map` or `odom`? That is, is ORBSLAM simply providing odometry between loop closures that is relative to a point? Or is it providing the pose relative to a map? In the SLAM case, if your map is wrong, your camera will tend to win disagreements between itself and the IMU, because it has a low covariance even though it's far from ground truth and the IMU may be closer (at least in terms of orientation). Like cBEiN says, it's ideal to be able to factor the IMU back into the SLAM itself.</p>
			</div>
			<div id = "comment-21350" class = "comment">
				<p>However, it is relatively standard practice to run filters on filters because sometimes it just isn't practical to feed all the data into a single place (we all wish it were so!). If you take your IMU which is almost certainly pre-filtered, and your odometry from ORBSLAM (which should reset with each loop closure), and your map is pretty good quality, you should get your higher frequency and still be closer to ground truth by running all of the data through one final filter. `[x,y,z,theta,phi,psi,dx,dy,dz,dtheta,dphi,dpsi,d2x,d2y,d2z]` are the 15 dimensions you need for your state estimation.</p>
			</div>
			</div>
				<textarea id = "speech-12018" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12018">
					<img id="start_img-12018" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12018">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>