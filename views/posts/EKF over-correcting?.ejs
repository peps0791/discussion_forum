<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>EKF over-correcting?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-6982" class = "post">
			<h2>Question</h2>
			<div id="vote-6982" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 65</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>EKF over-correcting?</h2>
<p>I've been implementing an extended kalman filter, following Thrun's Probabilistic Robotics implementation. I believe my correct step may be wrong, as the state appears to be corrected <em>far</em> too much.</p>

<p>Here's a screen capture showing the issue <a href="https://youtu.be/gkSpFK27yvg" rel="nofollow">https://youtu.be/gkSpFK27yvg</a> </p>

<p>Note, the bottom status reading is the 'corrected' pose coordinates.</p>

<p>This is my correct step:</p>

<pre><code>    def correct(self, reobservedLandmarks):
    for landmark in reobservedLandmarks:
        storedLandmark = self.getLandmark(landmark.id)

        z = Point(landmark.dist, math.radians(landmark.angle))
        h, q = self.sensorModel(storedLandmark)

        inv = np.array([[z.x-h.x], [wrap_radians(z.y-h.y)]])

        JH = np.zeros([2, 3 + (self.landmarkCount*2)])
        JH[1][2] = -1.0/q

        JH[0][0] = -((self.X[0] - storedLandmark.x) / math.sqrt(q))
        JH[0][1] = -((self.X[1] - storedLandmark.y) / math.sqrt(q))
        JH[1][0] = (storedLandmark.y - self.X[1]) / q
        JH[1][1] = -((storedLandmark.x - self.X[0]) / q)

        JH[0][3+(landmark.id*2)] = -JH[0][0]
        JH[0][4+(landmark.id*2)] = -JH[0][1]
        JH[1][3+(landmark.id*2)] = -JH[1][0]
        JH[1][4+(landmark.id*2)] = -JH[1][1]

        R = np.array([[landmark.dist*self.sensorDistError, 0],[0, self.sensorAngleError]])

        Z = matmult(JH, self.P, JH.T) + R
        K = matmult(self.P, JH.T, np.linalg.inv(Z))

        self.X = self.X + matmult(K, inv)
        self.P = matmult((np.identity(self.X.shape[0]) - matmult(K, JH)), self.P)
</code></pre>

<p>h = The range and bearing of state landmark.</p>

<p>q = (landmark.x - self.X[0])^2 + (landmark.y - self.X[1])^2</p>

<p>My sensor covariance errors are 1cm per meter, and pi/180 for the bearing. My assumption was that the correction should be relative to the size of the robot's pose error. Which is very small in this example, as it only moved forward less than 30cm.</p>

<p>Is the kalman gain applied correctly here, and if yes, what other factors would result in this 'over-correcting'?</p>

<p>Thanks.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-6982" data-toggle = "popover">
				<p>user name : jabz</p>
				<p> user reputation : 17</p>
				<p class = "tagcontent" id = "usertaginfo-6982">{'python': 2, 'ekf': 2, 'None': 0, 'slam': 2}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-6982" class = 'collapse'>
			</div>
				<textarea id = "speech-6982" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6982">
					<img id="start_img-6982" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6982">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-6997"  class = "post">
				<h2>Answer</h2>
			<div id="vote-6997" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I think you have a number of errors:</p>

<p>Your R matrix is the covariance of the measurement.  You are using a diagonal matrix which is fine.  The elements along the diagonal should be the variance of each input variable.  It looks like you are passing a deviation instead.  You would need to square those values to turn them into variances.</p>

<p>Your Jacobians look wrong.  The matrix terms should be the derivatives of the measurement variables with respect to the state variables.  Your measurement variables are range and bearing, not x and y.  You should end up with some trig functions in your Jacobian matrix due to the rotation of the robot.  The bearings are measured relative to the heading of the robot so you should have a rotation in the measurement function to cancel the rotation of the robot.  The Jacobian for the landmark variables is also more complex as q is not static with changes in self.X.</p>

<p>Edit:</p>

<p>I looked some more at your Jacobians.  I actually think they are pretty close.  The J[1][2] term should just be -1.0 I think which it sounds like you have already fixed.  I think you might have a sign error in JH[0][0] and JH[0][1].  I was coming up with the negative of the expression you have.  I find calculating the derivatives for the Jacobians to be error prone as I have trouble seeing my own errors for any mistakes I make.  I always try to test my Jacobians with a small test function to make sure I did it right.  This is very easy to do by comparing the analytical Jacobian versus numerical derivatives.  You can trivially calculate the numerical derivatives via (f(x+dx) - f(x))/dx for an appropriate delta dx doing each input variable separately.  Appropriate here means small enough to be a local value and large enough to not run into numerical error.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-6997" data-toggle = "popover">
				<p>user name : DrRoboto</p>
				<p> user reputation : 151</p>
				<p class = "tagcontent" id = "usertaginfo-6997">{'None': 12}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-6997">Load Comments</button></br>
			<div id = "commentsection-6997" class = 'collapse'>
			<div id = "comment-9968" class = "comment">
				<p>Thanks for the reply. 

With regards to the measurement covariance, are you saying I should be squaring my pre-defined error values, the input, or the product? 

I should've posted my sensor model, which acts on the cartesian coordinates. http://pastebin.com/qQwGU1Vp I assume the jacobian 'JH' is the correct derivative of that. Though I could be wrong, of course.

And you're correct, the angle is offset by the current angle of the robot. Thanks again.</p>
			</div>
			<div id = "comment-9970" class = "comment">
				<p>Update: Thanks @DrRoboto squaring the deviation value appears to have helped greatly. The landmarks are no longer being flung about. I also changed part of my measurement jacobian to -1.0 instead of -1.0/q.</p>
			</div>
			</div>
				<textarea id = "speech-6997" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6997">
					<img id="start_img-6997" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6997">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>