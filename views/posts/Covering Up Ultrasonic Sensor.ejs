<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Covering Up Ultrasonic Sensor
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-10172" class = "post">
			<h2>Question</h2>
			<div id="vote-10172" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 268</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Covering Up Ultrasonic Sensor</h2>
<p>I'm using a basic trig/echo <strong>Ultrasonic Sensor</strong> with an <strong>Arduino Uno</strong>. I get accurate readings until I <em>cover the sensor</em> at which point I receive very large numbers. Why is this?</p>

<p><strong>Program</strong></p>

<pre><code>int trigPin = 8;
int echoPin = 9;
float pingTime;
float targetDistance;
const float speedOfSound = 776.5; // mph

void setup() {
  Serial.begin(9600);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

}

void loop() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2000);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(15);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(10);

  pingTime = pulseIn(echoPin, HIGH);
  pingTime /= 1000000; // microseconds to seconds
  pingTime /= 3600; // hours
  targetDistance = speedOfSound * pingTime; // miles
  targetDistance /= 2; // to from target (averaging distance)
  targetDistance *= 63360; // miles to inches

  Serial.print("distance: ");
  Serial.print(targetDistance);
  Serial.println("");

  delay(100);
}
</code></pre>

<p><strong>Example Output</strong></p>

<p>I moved my hand from 10" away until I cover the sensor</p>

<pre><code>10.20 distance: // my hand is 10" away from the sensor
10.01 distance:
9.51 distance:
8.71 distance:
7.85 distance:
6.90 distance:
5.20 distance:
4.76 distance:
3.44 distance:
2.97 distance:
1.65 distance:
1211.92 distance: // my hand is now pressed up against the sensor
1225.39 distance:
1197.16 distance:
1207.43 distance:
1212.66 distance:
1204.60 distance:
</code></pre>

<h1>EDIT</h1>

<p>I changed the amounts from <code>inches</code> to <code>milimeters</code> to get a more precise reading. I held the sensor ~100mm from a granite counter-top and quickly lowered it until the tabletop covered the front of the sensor.</p>

<pre><code>distance: 103.27 // 100mm from tabletop
distance: 96.50
distance: 79.84
distance: 76.72
distance: 62.66
distance: 65.78
distance: 54.85
distance: 47.04
distance: 44.95
distance: 38.71
distance: 28.81
distance: 25.69
distance: 27.08
distance: 25.17
distance: 27.77
distance: 22.04 // sensor continues toward table but values start to increase when they would logically decrease ??
distance: 23.95
distance: 26.73
distance: 28.81
distance: 46.52
distance: 2292.85 // sensor is now flush against tabletop
distance: 2579.59
distance: 2608.75
distance: 2595.56
distance: 2591.57
distance: 2583.75
distance: 2569.87
distance: 2570.91
distance: 2600.07
distance: 30579.64 // extreme high &amp; low values with sensor is same place against tabletop
distance: 37.66
distance: 30444.43
distance: 37.66
distance: 30674.23
distance: 38.71
</code></pre>

			</div>
			<div class = "userinfosection"  id = "userinfo-10172" data-toggle = "popover">
				<p>user name : Jacksonkr</p>
				<p> user reputation : 220</p>
				<p class = "tagcontent" id = "usertaginfo-10172">{'quadcopter': 2, 'None': 6, 'ardupilot': 0, 'imu': 2, 'localization': 1, 'battery': 0, 'arduino': 4, 'precise-positioning': 1, 'uav': 3, 'kinect': 0, 'microcontroller': 3, 'mobile-robot': 1, 'ultrasonic-sensors': 3}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10172">Load Comments</button></br>
			<div id = "commentsection-10172" class = 'collapse'>
			<div id = "comment-18111" class = "comment">
				<p>What output do you get when you measure distance to a solid flat object, like a book or piece of cardboard?</p>
			</div>
			<div id = "comment-18129" class = "comment">
				<p>Ideally these tests would be run in an anechoic chamber and you would examine the returns (signal at the receiver) with an oscilloscope. Ultrasonics are not as "clean" as is usually assumed. There are often issues with surface hardnesses, echos all over the place, beam-spread, external interference, etc., etc.</p>
			</div>
			<div id = "comment-18130" class = "comment">
				<p>@Jacksonkr, you listed the measurement values, but not the ground truth distance. If you repeat the procedure, but use a ruler to measure the actual distance while the sensor takes a measurement, you can begin to build a simple model for your sensor, which will allow you to account for noise and bad measurements. Out of curiosity, what is your application?</p>
			</div>
			</div>
				<textarea id = "speech-10172" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10172">
					<img id="start_img-10172" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10172">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-10175"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10175" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">-1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You should consider building a measurement model for your sensor--this will enable you to use your measurements in an effective probabilistic manner. The problem is that beam sensors are noisy, ultrasonic sensors especially so; furthermore, this sensor noise is not typically uniformly distributed. </p>

<p>Sebastian Thrun covers this topic quite well in Chapter 6 of <em>Probabilistic Robotics,</em> in fact, he considers an ultrasonic sensor explicitly. Thrun suggests that the probability distribution of measurements is combination of four different distributions characterized by beam sensor response.</p>

<p><a href="https://i.stack.imgur.com/Z2QQl.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/Z2QQl.png" alt="Beam Sensor Model"></a> </p>

<p>The image above shows the four distributions and is taken from Thrun's text. The upper left is a Gaussian distribution centered on the ground truth distance. The upper right is a truncated exponentially decaying distribution for measurements that are too close to the sensor. The bottom graphs depict the uniform noise of the sensor and the max value measurement. These four distributions are combined and normalized to give a single measurement model; to do this properly, you need to build a model for every distance.</p>

<p>There are two takeaway points:</p>

<ol>
<li>Ultrasonic sensors are noisy/not accurate, so you probably aren't doing anything wrong; it looks like you found the minimum sensing distance of the sensor</li>
<li>You need measurement models to inform your predictions about the robot's pose, which is important for things like control and navigation</li>
</ol>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10175" data-toggle = "popover">
				<p>user name : NBCKLY</p>
				<p> user reputation : 741</p>
				<p class = "tagcontent" id = "usertaginfo-10175">{'None': 44, 'roomba': 4, 'irobot-create': 4, 'arduino': 2}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-10175" class = 'collapse'>
			</div>
				<textarea id = "speech-10175" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10175">
					<img id="start_img-10175" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10175">Comment</button>
			<br><div id = "ans-10176"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10176" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You said it yourself: you're using an echo-based ultrasonic sensor. </p>

<p>Imagine this: you are a sensor looking at a piece of fiber optic cable. From far enough away, you see the cable as an <em>object</em>. You can determine how far away it is because you are looking <em>at</em> it. </p>

<p>The cable gets closer and you continue looking <em>at the object</em> until, at some point, it becomes <em>coupled</em> to you and you now begin to look <em>through</em> the cable. </p>

<p>I would imagine the same thing is happening with your hand. In time of flight sensors there's usually some "turn on" time that delays turning on the receiver to prevent the transmitter from directly driving the receiver. This turn on time corresponds with some minimum distance, inside which an object cannot be detected. </p>

<p>At your skin there is an <em>interface</em>, where some of the sound is reflected <em>and some of the sound is absorbed</em>. This is like a window or a two-way mirror. Depending on some properties (acoustic impedance mismatch), the percentage of sound energy that gets absorbed varies, but some always gets absorbed. </p>

<p>So, your hand gets closer, and the sensor sees your hand as an object. At some point you pass the minimum threshold, and the sensor no longer detects the reflection at the air/skin interface. It still listens for an echo, though, but now all the remaining sound energy is <em>inside you</em>.</p>

<p>You are now akin to a (crappy) fiber optic cable - the sound is free to bounce around inside you, reflecting off of whatever doesn't have the same acoustic impedance as your skin. Every time it hits an interface (skin/muscle, muscle/bone, etc.), some energy is absorbed and some is reflected. This is exactly how a medical ultrasound works. </p>

<p>At some point the sound waves scatter back to the point where they entered, and pass back through your skin and that's when the echo is recorded. The scattered path length is the distance you are seeing. </p>

<p>I would bet the value would change based on what part of your arm you use (not that I would recommend doing it).</p>

<p>Also,  FYI, ultrasound jelly exists to help match acoustic impedances to minimize reflection and get more sound energy into the body. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10176" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-10176">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10176">Load Comments</button></br>
			<div id = "commentsection-10176" class = 'collapse'>
			<div id = "comment-18107" class = "comment">
				<p>Instead of using different parts of the arm, different objects could be brought into direct contact with the sensor: a block of metal, wood, a cardboard box, foam. I also guess that the results will be different.</p>
			</div>
			<div id = "comment-18119" class = "comment">
				<p>I was convinced of your logic but the results came out different. I added the details in an `EDIT` at the bottom of my original post.</p>
			</div>
			<div id = "comment-18120" class = "comment">
				<p>@Jacksonkr - Granite isn't homogeneous, like water or Jell-o or pudding. It's got a crystalline structure, so again, like bones and muscle, there are things inside of it that can direct sound waves other than the back side of the material. You could try laying the sensor on its back, putting a cup on it, then filling the cup with varying levels of water, though there is the cup/water interface after the sensor/cup interface. You could also try metal rods of varying length, but the minimum distance for that would change because the speed of sound in metal is considerably higher than air.</p>
			</div>
			<div id = "comment-18121" class = "comment">
				<p>Yikes. I tried my laptop from the aluminum casing, solid oak table, and a wall (3/4" dry wall) with the same results. The table and wall I can understand a bit but the aluminum laptop (mbp '15) I don't quite understand. As far as I can tell I'm stuck with having to measure at 20mm+ for many things.</p>
			</div>
			<div id = "comment-18126" class = "comment">
				<p>@Jacksonkr what exact sensor are you using? What does the datasheet say about limits to the measured value? Sensor usually operate within a certain range of values.</p>
			</div>
			<div id = "comment-18136" class = "comment">
				<p>I'm still pretty new around this stuff so I didn't even think to look up the data sheet. I found the [data sheet](http://www.micropik.com/PDF/HCSR04.pdf) and it lists the min range as 2cm which exactly what I'm seeing. Sorry for the trouble / thanks for the great help!</p>
			</div>
			</div>
				<textarea id = "speech-10176" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10176">
					<img id="start_img-10176" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10176">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>