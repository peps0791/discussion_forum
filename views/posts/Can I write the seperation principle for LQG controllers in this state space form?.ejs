<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Can I write the seperation principle for LQG controllers in this state space form?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-12672" class = "post">
			<h2>Question</h2>
			<div id="vote-12672" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 60</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Can I write the seperation principle for LQG controllers in this state space form?</h2>
<p>Look at this picture. This is the seperation principle diagram. 
<a href="https://i.stack.imgur.com/lWXlR.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/lWXlR.png" alt="enter image description here"></a></p>

<p>It is an LQG controller which going to control the real life process. What I want to do, is to create a state space model for this seperation principle system, including the real life process. A LQG controller is a LQR controller together with the Kalmanfilter. Kalmanfilter is also called an observer. </p>

<p>The LQR controler is a feedback gain matrix <strong>L</strong> and the kalmanfilter is just a mathematical description of the real life system with a gain matrix <strong>K</strong>.</p>

<p><strong>r(t)</strong> is the reference signal vector which describe how the system's states should hold e.g. temperature or pressure. 
<strong>y(t)</strong> is the output from the real life process.
$\hat{y}$ is the estimated output from the kalmanfilter.
<strong>d(t)</strong> is the disturbance vector for the input. That's a bad thing, but the Kalman filter are going to reduce the disturbance and noise. 
<strong>u(t)</strong> is the in signal vector to the real life system and the kalmanfilter.
<strong>n(t)</strong> is the noise vector from the measurement tools.
<strong>x(t)</strong> is the state vector for the system.
$\dot{x}$ is the state vector derivative for the system.
$\hat{x}$ is the estimated state vector for the system.
$\dot{\hat{x}}$ is the estimated state vector derivative for the system.</p>

<p><strong>A</strong> is the system matrix. <strong>B</strong> is the in signal matrix. <strong>C</strong> is the output matrix. <strong>L</strong> is the LQR controler gain matrix. <strong>K</strong> is the kalmanfilter gain matrix. </p>

<p>So....a lot of people create the state space system as this: $$ $$
For the real life system:
$$ \dot{x} = Ax + Bu + d$$
For the kalmanfilter:
$$\dot{\hat{x}} = A\hat{x} + Bu + Ke$$
But $u(t)$ is:</p>

<p>$$u = r - L\hat{x}$$</p>

<p>And $e(t)$ is:
$$e = y + n - \hat{y} = Cx + n - C\hat{x} $$</p>

<p>And then...for some reason, people says that the state space model should be model by the state estimation error:</p>

<p>$$\dot{\tilde{x}} = \dot{x} - \dot{\hat{x}}  = (Ax + Bu + d) - (A\hat{x} + Bu + Ke)
$$
$$ \dot{\tilde{x}}  = (Ax + Bu + d) - (A\hat{x} + Bu + K(Cx + n - C\hat{x})$$
$$ \dot{\tilde{x}} = Ax - A\hat{x} + d - KCx - Kn + KC\hat{x} $$
And we can say that:
$$\tilde{x} = x - \hat{x} $$
Beacuse:
$$\dot{\tilde{x}} = \dot{x} - \dot{\hat{x}}$$
The kalmanfilter will be:
$$ \dot{\tilde{x}} = (A - KC)\tilde{x} + Kn$$</p>

<p>The real life process will be:
$$ \dot{x} = Ax + Bu + d = Ax + B(r - L\hat{x}) + d = Ax + Br - BL\hat{x} + d$$</p>

<p>But:
$$\tilde{x} = x - \hat{x} \Leftrightarrow  \hat{x} = x - \tilde{x}$$</p>

<p>So this will result for the real life process:
$$ \dot{x} =  Ax + Br - BL(x - \tilde{x}) + d = Ax + Br - BLx + BL\tilde{x} + d$$</p>

<p>So the whole state space model will then be:</p>

<p>$$
\ \begin{bmatrix} \dot{x} \\ \\\dot{\tilde{x}} \end{bmatrix} =\begin{bmatrix} A - BL&amp; BL \\ 0 &amp; A-KC \end{bmatrix} \begin{bmatrix} x\\ \tilde{x} \end{bmatrix}+\begin{bmatrix} B &amp; I &amp; 0\\ 0 &amp; 0 &amp; K \end{bmatrix}\begin{bmatrix} r\\ d\\ n \end{bmatrix}\
$$</p>

<p>Youtube example:
<a href="https://youtu.be/H4_hFazBGxU?t=2m13s" rel="nofollow noreferrer">https://youtu.be/H4_hFazBGxU?t=2m13s</a></p>

<p>$I$ is the identity matrix. But doesn't need to be only ones on digonal form. 
$0$ is the zero matrix.</p>

<p><strong>The Question:</strong> $$ $$
If I write the systems on this forms:
$$ \dot{x} = Ax + Bu + d = Ax + B(r - L\hat{x}) + d$$
For the kalmanfilter:
$$\dot{\hat{x}} = A\hat{x} + Bu + Ke = A\hat{x} + B(r - L\hat{x}) + K(y + n - \hat{y})$$
Beacuse $u(t)$ and $e(t)$ is:
$$u = r - L\hat{x}$$
$$e = y + n - \hat{y} = Cx + n - C\hat{x} $$</p>

<p>I get this:
$$\dot{x} = Ax + Br - BL\hat{x} + d$$
$$\dot{\hat{x}} = A\hat{x} + Br - BL\hat{x} + KCx + Kn - KC\hat{x}$$
Why not this state space form:
$$
 \begin{bmatrix} \dot{x} \\ \\\dot{\hat{x}} \end{bmatrix} =\begin{bmatrix} A &amp; -BL \\ KC &amp; [A-BL-KC] \end{bmatrix} \begin{bmatrix} x\\ \hat{x} \end{bmatrix}+\begin{bmatrix} B &amp; I &amp; 0\\ B &amp; 0 &amp; K \end{bmatrix}\begin{bmatrix} r\\ d\\ n \end{bmatrix}\
$$
Youtube example:
<a href="https://youtu.be/t_0RmeSnXxY?t=1m44s" rel="nofollow noreferrer">https://youtu.be/t_0RmeSnXxY?t=1m44s</a></p>

<p>Who is best? Does them both works as the LQG diagram shows? Which should I use?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-12672" data-toggle = "popover">
				<p>user name : Daniel M rtensson</p>
				<p> user reputation : 62</p>
				<p class = "tagcontent" id = "usertaginfo-12672">{'control': 11, 'None': 0, 'noise': 6, 'robotic-arm': 6, 'arduino': 0, 'microcontroller': 3, 'pid': 3, 'simulation': 2, 'matlab': 6, 'kalman-filter': 11, 'mobile-robot': 2, 'dynamics': 5}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-12672" class = 'collapse'>
			</div>
				<textarea id = "speech-12672" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12672">
					<img id="start_img-12672" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12672">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-12673"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12673" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>This is really a lot to look at, but the most glaring issue I noticed off the bat is your definition of the control signal $u(t)$. </p>

<p><em>What is the input to your controller?</em> What <em>should</em> be the input to your controller? <em>What is the output of the controller?</em></p>

<p>State feedback controllers (and LQR controllers) attempt to drive the system states to zero. The control law for these controllers is:</p>

<p>$$
u = -Lx \\
$$</p>

<p>or, in the case of a state estimator (Kalman filter, EKF, etc.), is:</p>

<p>$$
u = -L\hat{x} \\
$$</p>

<p>You are attempting to implement reference tracking by passing an input $r(t)$ to the controller. With a state feedback controller, this is generally done with integral control by adding a state to the state matrix such that:</p>

<p>$$
\dot{e_I} = r(t) - x(n) \\
$$</p>

<p>where $x(n)$ is the state you're trying to control. Consider, for instance, an oscillating system (spring/mass/damper, etc.) where you're trying to control position. The states would all be the same (position/speed/acceleration), so how would your controller "know" that you're attempting to control position and not speed if you're using a control signal of $u(t) = r(t) - Kx$? </p>

<p>So again, for an oscillator, your system might look like:</p>

<p>$$
\left[\begin{array}{c}
\dot{x} \\
\ddot{x} \\
\end{array}\right] = \left[\begin{array}{cc}
0 &amp; 1 \\
-\omega_n^2 &amp; 0 \\ 
\end{array}\right]\left[\begin{array}{c}
x \\
\dot{x} \\
\end{array}\right]
$$</p>

<p>Your integral controller then appends a state. Now, if you're trying to control position, you get:
$$
\left[\begin{array}{c}
\dot{x} \\
\ddot{x} \\
\dot{e_I} \\
\end{array}\right] = \left[\begin{array}{ccc}
0 &amp; 1 &amp; 0 \\
-\omega_n^2 &amp; 0 &amp; 0\\
-1 &amp; 0 &amp; 0 \\
\end{array}\right]\left[\begin{array}{c}
x \\
\dot{x} \\
e_I \\
\end{array}\right]
$$</p>

<p>Note the $\dot{e_I}$ state - the derivative of an integral error is just the control error. The integral error term $e_I$ doesn't impact either the $x$ or $\dot{x}$ states, but it gives you a new state for control purposes, $u(t) = -Kx$. Now you get a third gain to tune (third pole to place). </p>

<p>Again, this is all specific for state feedback controllers, but the method works the same for integral control of an LQR system - this is referred to as <a href="https://www.mathworks.com/help/control/ref/lqi.html" rel="nofollow noreferrer">linear-quadratic-integral control</a>.</p>

<p>Now you can also clearly change which states you're trying to control by altering how the $\dot{e_I}$ term is defined. You can "pick" the position state with $[1,0]$, or the speed state with $[0,1]$, or the acceleration state by recognizing the definition from the state space form: $\ddot{x} = [-w_n^2,0][_{\dot{x}}^{x}]$.</p>

<hr>

<p>In re-reading your question, it looks like there may be some confusion too on observer setup/design. Observer design is commonly referred to as the "dual" of the controller design because they take similar forms and you can generally do the same steps to get the answer. </p>

<p>A state feedback controller attempts to drive the states to zero. With an observer, you commented:</p>

<blockquote>
  <p>And then...for some reason, people says that the state space model should be model by the state estimation error</p>
</blockquote>

<p>Correct. The observer "states" are the <em>errors</em> between the modeled states and the actual system states. This is where duality comes in. A state feedback controller and an observer BOTH attempt to drive their states to zero.</p>

<p>In a controller, the states are the actual system states. </p>

<p>In an observer, the states are the differences between actual and modeled system states. When the observer has done its job, the modeled states should be exactly equal to the actual system states. In order for the observer to have a meaningful use for the controller, the observer should converge <strong>faster</strong> than the controller such that the controller has the actual system states (or very close to) by the time the controller begins to respond. </p>

<p>This is the basis for the thumb rule that the observer poles should be "faster" than the control poles (I've read and generally use 5-10 times faster). The observer will cause the modeled states to fluctuate while it converges (hunts) to the correct state measurement, so it's important for that fluctuation to happen faster than the system is able to respond so it doesn't ripple through the controller output. </p>

<p>SO, that's the reasoning for observer design - it's basically a second controller that exists to drive <em>state error</em> to zero. </p>

<hr>

<p>:EDIT: - I removed the previous last section here because I mis-read $\tilde{x}$ in the first set of equations as $\hat{x}$ and then confused myself comparing the two. That said, I think the second form is still a <em>little</em> incorrect (assuming the first form is correct) because of how the exogenous inputs are incorporated. Working entirely from the first form, it starts as:</p>

<p>$$
\ \begin{bmatrix} \dot{x} \\ \\\dot{\tilde{x}} \end{bmatrix} =\begin{bmatrix} A - BL&amp; BL \\ 0 &amp; A-KC \end{bmatrix} \begin{bmatrix} x\\ \tilde{x} \end{bmatrix}+\begin{bmatrix} B &amp; I &amp; 0\\ 0 &amp; 0 &amp; K \end{bmatrix}\begin{bmatrix} r\\ d\\ n \end{bmatrix}\
$$</p>

<p>First, recognize that the state error $\tilde{x} = x-\hat{x}$, and then look just at the first row:</p>

<p>$$
\dot{x} = \left[A-BL\right]x + \left[BL\right]\tilde{x} + Br + Id \\
$$</p>

<p>For the purposes of the rest of this, I'm just going to refer to $Id$ as $d$. So, substitute in the definition of $\tilde{x}$:</p>

<p>$$
\dot{x} = \left[A-BL\right]x + \left[BL\right]\left(x-\hat{x}\right) + Br + d \\
$$
$$
\dot{x} = \left[A-BL\right]x + \left[BL\right]\left(x\right) + \left[BL\right]\left(-\hat{x}\right) + Br + d \\
$$
$$
\dot{x} = \left[A-BL+BL\right]x + \left[-BL\right]\hat{x} + Br + d \\
$$</p>

<p>$$
\boxed{\dot{x} = \left[A\right]x + \left[-BL\right]\hat{x} + Br + d} \\
$$</p>

<p>Great! This is the same first row as the second form. Now, to the second row of the first form:</p>

<p>$$
\dot{\tilde{x}} = [A-KC]\tilde{x} + Kn \\
$$</p>

<p>Again, make the substitutions of $\tilde{x} = x-\hat{x}$ and now also $\dot{\tilde{x}} = \dot{x} - \dot{\hat{x}}$:</p>

<p>$$
\dot{x} - \dot{\hat{x}}= [A-KC]\left(x-\hat{x}\right) + Kn \\
$$</p>

<p>Expand the $x-\hat{x}$ term:</p>

<p>$$
\dot{x} - \dot{\hat{x}}= [A-KC]x - [A-KC]\hat{x} + Kn \\
$$</p>

<p>To get rid of the $\dot{x}$ on the left hand side, just use the definition of $\dot{x}$ from the result of the first row!</p>

<p>$$
\dot{x} = \left[A\right]x + \left[-BL\right]\hat{x} + Br + d
$$</p>

<p>$$
\left[A\right]x + \left[-BL\right]\hat{x} + Br + d - \dot{\hat{x}}= [A-KC]x - [A-KC]\hat{x} + Kn \\
$$</p>

<p>Rearrange:
$$
\left[A\right]x + \left[-BL\right]\hat{x} + Br + d - \left([A-KC]x - [A-KC]\hat{x} + Kn\right) = \dot{\hat{x}}\\
$$</p>

<p>$$
\dot{\hat{x}} = \left[A\right]x + \left[-BL\right]\hat{x} + Br + d - \left([A-KC]x - [A-KC]\hat{x} + Kn\right)\\
$$</p>

<p>Distribute the negative:
$$
\dot{\hat{x}} = \left[A\right]x + \left[-BL\right]\hat{x} + Br + d + \left(-[A-KC]x + [A-KC]\hat{x} - Kn\right)\\
$$</p>

<p>$$
\dot{\hat{x}} = \left[A\right]x + \left[-BL\right]\hat{x} + Br + d - [A-KC]x + [A-KC]\hat{x} - Kn\\
$$</p>

<p>Rearrange again:</p>

<p>$$
\dot{\hat{x}} = \left[A\right]x - [A-KC]x + [A-KC]\hat{x} + \left[-BL\right]\hat{x} + Br + d - Kn\\
$$</p>

<p>Simplify one last time:</p>

<p>$$
\boxed{\dot{\hat{x}} = [KC]x + [A-BL-KC]\hat{x} + Br + d - Kn}\\
$$</p>

<p>This is <em>almost</em>, but not quite what is given as the second row of the second form. This equation has the term $d$ (really $Id$) included and also has $-Kn$ instead of $Kn$. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12673" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-12673">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-12673">Load Comments</button></br>
			<div id = "commentsection-12673" class = 'collapse'>
			<div id = "comment-22195" class = "comment">
				<p>Thank you for your answer. So to summarize this. The first state space form is the correct form to use, not the second one?</p>
			</div>
			<div id = "comment-22196" class = "comment">
				<p>If you wonder why I took the long way to explain, it's beacuse all information you can find on the internet, has a very poor explanation how the modeling should look like.</p>
			</div>
			<div id = "comment-22205" class = "comment">
				<p>@DanielM rtensson - Yes, that's what I'm saying. And no worries about the long question; I wound up writing a long answer, too :P</p>
			</div>
			<div id = "comment-22210" class = "comment">
				<p>Can you give me a proof why the fist state space model is the correct model, and the second state space model is not correct?</p>
			</div>
			<div id = "comment-22212" class = "comment">
				<p>@DanielM rtensson - Sorry, ran through the math and realized my mistake was looking at $\tilde{x}$ as though it were $\hat{x}$. Re-ran the math again and found a tiny discrepancy, but otherwise the second form looks correct. *That said*, I still stand by my comment about integral control being the correct way to do reference tracking and the statements I made about output error driving the observer, etc.</p>
			</div>
			<div id = "comment-22213" class = "comment">
				<p>I know that intergral control is a good control to remove the last error. But LQG control is an excellent tool too. Ok. I prefer the second state space equations beacuse I have no use for the estimation error. I want to know the estimated state, and the real state of the state space model. By the way! I have made up a LQG controller but I have not sucseed to reduce the disturbance https://pastebin.com/UG2inMdq You need Octave with OctSympy + Control package. It's free to download. Try to run this code and see what have done wrong?</p>
			</div>
			<div id = "comment-22216" class = "comment">
				<p>@DanielM rtensson - If you've got another question, then please open a new question :) If I had to guess, I would bet that the observer response isn't fast enough. As I mentioned in the answer, the observer poles should be generally 5-10 times faster than the controller poles. This helps to ensure that the estimated states are approximately equal to the actual system states. But again - questions are free. Just ask another!</p>
			</div>
			<div id = "comment-22218" class = "comment">
				<p>I will do that! Thanks for the mathematical proof you gave me. That really helps to understand that the first state space model is the correct one! By the way! I have a book with $Kn$ and I think choosing $-Kn$ or $Kn$ doesn't matter beacuse the $n$ is gaussian white noise. It can be negative too.</p>
			</div>
			</div>
				<textarea id = "speech-12673" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12673">
					<img id="start_img-12673" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12673">Comment</button>
			<br><div id = "ans-12677"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12677" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Both state space representations are equivalent. For example the eigenvalues of the two closed-loop system matrices should be the same. However when implementing LQG you only have access to the outputs and the variables you introduced yourself, so either $\hat{x}$ or $\tilde{x}$. But you are still limited by the given dynamics of the states of the system you want to control</p>

<p>$$
\dot{x} = A\,x+B\,u,
$$</p>

<p>where only $u$ can be chosen freely. As stated before, the true state $x$ is not known. This together implies that the matrix entry of the closed-loop system matrix at the first row and first column should remain $A$, as in your last state space form with $\hat{x}$.</p>

<p>However your first state space with $\tilde{x}$ is often used to proof stability. Namely the eigenvalues of the closed-loop system matrix are equal to the combination of the eigenvalues of $A-B\,L$ and $A-K\,C$, which should both be Hurwitz.</p>

<p>As also stated in the answer of Chuck, your incorporation of the reference signal $r$ in the feedback law will in general not give good (steady state) tracking. Namely LQR is only good at controlling the state space to zero. If you do want good reference tracking you should look at Linear Quadratic Integral, or add feed forward.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12677" data-toggle = "popover">
				<p>user name : fibonatic</p>
				<p> user reputation : 373</p>
				<p class = "tagcontent" id = "usertaginfo-12677">{'quadcopter': 2, 'None': 19, 'design': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-12677">Load Comments</button></br>
			<div id = "commentsection-12677" class = 'collapse'>
			<div id = "comment-22209" class = "comment">
				<p>So I can use both of the state space models? Ok, then I use the second state space model beacuse I find it more easier to model. The reason I have choosen *r(t)* as the reference signal, is beacuse my books about optimal control, describe the LQG controller in that way.</p>
			</div>
			<div id = "comment-22211" class = "comment">
				<p>If you want to model it then indeed it does not matter which state space representation you use. The only thing you occasionally have to worry about is how well balanced each state space representation is. And for the use of $r$, don't get confused when the tracking error does not go to zero if you for example apply some sort of step input.</p>
			</div>
			<div id = "comment-22214" class = "comment">
				<p>But the reference $r(t)$ are supposed to describe where the system should be and act when the system is in a static state.</p>
			</div>
			<div id = "comment-22215" class = "comment">
				<p>@DanielM rtensson Then you should use a different control law. The easiest to add would be feed forward.</p>
			</div>
			<div id = "comment-22217" class = "comment">
				<p>Why? $r(t)$ is allways used in LQG.</p>
			</div>
			<div id = "comment-22219" class = "comment">
				<p>@DanielM rtensson Are you sure? Often when I see a block diagram related to LQG I do often see a summation block (in order to get negative feedback) but with the reference set to zero. And in equation form I almost always see $u=-L\,\hat{x}$. For example [Matlab](https://nl.mathworks.com/help/control/ref/lqg.html) also includes LQI when you want to track a reference (however this reference is related to $y$ and not $x$).</p>
			</div>
			<div id = "comment-22223" class = "comment">
				<p>look at this url link http://ctms.engin.umich.edu/CTMS/index.php?example=InvertedPendulum&section=ControlStateSpace</p>
			</div>
			<div id = "comment-22224" class = "comment">
				<p>@DanielM rtensson there they also used rscale.m (a limear scaling of $r$ I believe) to achieve close to zero tracking error. So $u=N\,r-L\,\hat{x}$.</p>
			</div>
			<div id = "comment-22225" class = "comment">
				<p>So, using $r(t)$ as a reference signal...is wrong?</p>
			</div>
			<div id = "comment-22372" class = "comment">
				<p>You're wrong about the reference signal. Every controller needs a reference signal.</p>
			</div>
			</div>
				<textarea id = "speech-12677" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12677">
					<img id="start_img-12677" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12677">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>