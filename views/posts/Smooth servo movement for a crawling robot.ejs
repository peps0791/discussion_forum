<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Smooth servo movement for a crawling robot
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1678" class = "post">
			<h2>Question</h2>
			<div id="vote-1678" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">7</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 1367</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Smooth servo movement for a crawling robot</h2>
<p>I made a small crawler robot a little while ago that had two legs with two degrees of freedom each, so 4 RC servos total. While I was programming the movement of the legs I noticed that they moved rather stiffly. It makes sense that the RC servo's internal controller would have a very quick response to position commands, but I wanted my crawler to move in a way that seems a little more smooth and life-like.</p>

<p>My solution was create a cubic function of time that describes the path of the servos, and then set their position in small time increments, resulting in more smooth motion. Essentially what I did was solve for the $a_i$ coefficients in a cubic equation using the time interval, starting and ending position of the servo, and starting and ending rates the servo should move (which is just the derivative of the position):</p>

<p>Solve for $a_0$, $a_1$, $a_2$, and $a_3$:</p>

<p>$$ position(t) = a_0 + a_1t + a_2t^2 + a_3t^3 $$
$$ rate(t) = position'(t) = a_1 + 2a_2t + 3a_3t^2 $$</p>

<p>Given: $position(0)$, $position(t_f)$, $rate(0)$, $rate(t_f)$</p>

<p>I set the rate of the servo between a pair of movements to be zero if the movements were in opposite directions, and positive or negative if the movements were both in the positive or negative direction, respectively. </p>

<p>This worked pretty well, but this solution is limited in a few ways. For one, it's difficult to decide what exactly the rates between movements that go in the same direction should be. I used the average of the slopes ahead and behind of a particular position between movements, but it isn't clear to me that is optimal. Second of all, cubic curves could take the servo to a position outside of the range of the positions at the beginning and end of a movement, which may be undesirable. For example, at some point during the time interval, the curve could cause the servo to go beyond the second position, or below the first position. Thirdly, curve generation here does not consider the maximum rate that the servo can turn, so a curve may have the servo move at a speed that is unrealistic. With that, a minor concern is that the maximum turning rate depends on the response of servo's internal controller, and may change depending on the size of the position interval. </p>

<p>Neglecting that last concern, these issues may be solved by increasing the degree of the polynomial and adding constraints to solve for the coefficients, but I'm now starting to wonder...</p>

<p>Is there a better way than this to make servo movement smooth and seem more life-like?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1678" data-toggle = "popover">
				<p>user name : Robz</p>
				<p> user reputation : 954</p>
				<p class = "tagcontent" id = "usertaginfo-1678">{'pid': 8, 'embedded-systems': 0, 'slam': 20, 'sensor-error': 8, 'accelerometer': 5, 'kinematics': 7, 'mechanism': 1, 'differential-drive': 8, 'imu': 12, 'kalman-filter': 28, 'actuator': 21, 'gyroscope': 5, 'gps': 20, 'magnetometer': 5, 'None': 25, 'noise': 5, 'power': 0, 'localization': 20, 'microcontroller': 0, 'brushless-motor': 13, 'sensors': 41, 'quadcopter': 13, 'navigation': 7, 'sensor-fusion': 21, 'sonar': 8, 'servos': 7}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1678">Load Comments</button></br>
			<div id = "commentsection-1678" class = 'collapse'>
			<div id = "comment-3516" class = "comment">
				<p>The code should have been relatively straight forward. Can you talk more about why it was involved?</p>
			</div>
			<div id = "comment-3517" class = "comment">
				<p>You're right, the code was fairly straight forward, although the resulting method to control the servos was more complex than before. I have edited my question to include a description of the limitations of this method instead.</p>
			</div>
			<div id = "comment-3518" class = "comment">
				<p>[NURBS](http://en.wikipedia.org/wiki/NURB), non-uniform rational B-splines, might do the job</p>
			</div>
			<div id = "comment-3521" class = "comment">
				<p>@jwpat7 thanks for your input, but I don't think NURBS would work because those curves are not guaranteed to hit the points provided</p>
			</div>
			<div id = "comment-3526" class = "comment">
				<p>Is it as simple as lowering your $K_p$ coefficient?</p>
			</div>
			<div id = "comment-3528" class = "comment">
				<p>What does your control loop look like?  Do you have a position controller and a velocity controller?  As ddevaz says the answer is most definitely generating a motion profile.  For more smoothness add jerk (seriously, jerk is the derivative of acceleration).</p>
			</div>
			<div id = "comment-3529" class = "comment">
				<p>@Ian what is that?</p>
			</div>
			<div id = "comment-3531" class = "comment">
				<p>@GuySirton After piece-wise functions to describe the servos' motions are calculated, there's just a single loop that runs with a small fixed interval. On each iteration, it uses the piecewise functions to set a position for each servo.</p>
			</div>
			<div id = "comment-3532" class = "comment">
				<p>Also, cubic position functions of time already have jerk. In this case, `position'''(t) = 6*a3`</p>
			</div>
			<div id = "comment-3536" class = "comment">
				<p>@GuySirton That's why I've always preferred the term *jolt* to *jerk* for the [derivative of acceleration with respect to time](http://en.wikipedia.org/wiki/Jerk_%28physics%29).</p>
			</div>
			<div id = "comment-3541" class = "comment">
				<p>@Robz: I was aware that what you're doing is some sort of profile.  As you point out though unlike a traditional motion profile you're not respecting any limits (position, velocity, acceleration) and you're also not telling us how your loop is constructed.  A motion profile needs to go over a well tuned position loop.</p>
			</div>
			<div id = "comment-3549" class = "comment">
				<p>@Robz: $K_p$ is one of the adjustable factors involved in [PID control](http://en.wikipedia.org/wiki/PID_controller).  I assumed that since you mentioned "very quick PID response", you were familiar with configuring a PID.  Is that not the case?</p>
			</div>
			<div id = "comment-3555" class = "comment">
				<p>@Ian I am not configuring a PID controller. I was referring to the internal controller hobby servos use to maintain position.</p>
			</div>
			<div id = "comment-3556" class = "comment">
				<p>@GuySirton I apologize for not being clear. What part of my [explanation](http://robotics.stackexchange.com/questions/1678/smooth-servo-movement-for-a-crawling-robot?noredirect=1#comment3531_1678) needs elaboration?</p>
			</div>
			<div id = "comment-3558" class = "comment">
				<p>@Robz: It's probably a problem on my end :-) I'm just not clear about the internals of your control loop.  That is what happens after "set a position".  Are you using RC servo motors or are those brushless motors with some sort of control loop on top?  I think you've kind of answered this in another comment.</p>
			</div>
			<div id = "comment-3559" class = "comment">
				<p>@Robz: See my answer.  We can get into more details of what it would take to optimize for this particular motor.  The bottom line is that your control "envelope" is limited by the internal performance of the motor system.  You can spend some time to characterize that (but it's generally a low-pass filter).  Given those limits there is going to be some S curve that is smooth but if you try and use higher jerk, or acceleration, or velocity you'll be back to not getting a smooth profile at the output because the motor can't keep up...</p>
			</div>
			<div id = "comment-3560" class = "comment">
				<p>@GuySirton Ahh sorry about that--yes I'm using RC servos. I'll modify the question to be explicit about that. "Setting the RC servo's position" amounts to just outputting a certain PWM signal from my microcontroller. When I mentioned a "PID controller" I was referring to what I (probably incorrectly) imagined to be an RC servo's internal controller--what I thought of as the thing inside the servo's black box that takes in a PWM signal and sets the motor to go to a certain position.</p>
			</div>
			</div>
				<textarea id = "speech-1678" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1678">
					<img id="start_img-1678" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1678">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1681"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1681" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">6</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p><strong>Motion Profile Generation</strong></p>

<p>In the past, I've used a motion profile generator to solve this problem. To use it you would need the desired target position (set point), maximum velocity, and acceleration values that are associated with your motors. It works by integrating a trapezoidal velocity curve in order to get a smooth position profile. An S-curve can be used if the motion has to be even smoother.
<a href="http://www.pmdcorp.com/news/articles/html/Mathematics_of_Motion_Control_Profiles.cfm">Reference to article explaining Motion profiling</a>.</p>

<p><strong>Set Point Pre-filtering</strong> </p>

<p>Aside from the motion profiling route, you can try simply low pass filtering the command to the servos. This type of setpoint filtering will slow your response down but it will also smooth it out and it's easy to implement. The cut-off frequency will have to be chosen so that it supports the bandwidth of your system (so it does not filter out desired motion). 
<a href="https://ccrma.stanford.edu/~jos/filters/Definition_Simplest_Low_Pass.html">Simple Low-pass filter implementation in C</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1681" data-toggle = "popover">
				<p>user name : ddevaz</p>
				<p> user reputation : 503</p>
				<p class = "tagcontent" id = "usertaginfo-1681">{'None': 34}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1681">Load Comments</button></br>
			<div id = "commentsection-1681" class = 'collapse'>
			<div id = "comment-3530" class = "comment">
				<p>+1: definitely motion profile generation.</p>
			</div>
			</div>
				<textarea id = "speech-1681" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1681">
					<img id="start_img-1681" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1681">Comment</button>
			<br><div id = "ans-1705"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1705" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I think the question refers to this sort of device: <a href="http://en.wikipedia.org/wiki/Servo_%28radio_control%29" rel="nofollow">RC servo</a></p>

<p>Those usually aren't very high performance so they're not going to be able to track a generated motion profile very well.  Most commercial motor control systems use an S curve for a point to point move (see @ddevaz's answer) which do a piece-wise profile where each segment uses a different equation.  Your problem is going to be that in order for your motor to track the generated profile you're probably going to have a very "slow" profile.  Otherwise the profile you try and command the device to follow is going to have a large position error vs. the actual position of the device.</p>

<p>Ideally you'll want some sort of feedback you can look at while you are executing the motion so you can see how well the device is tracking the command.  From a more practical perspective, if you want significantly better motion you may need different motors and different motor control.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1705" data-toggle = "popover">
				<p>user name : Guy Sirton</p>
				<p> user reputation : 970</p>
				<p class = "tagcontent" id = "usertaginfo-1705">{'None': 75}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1705" class = 'collapse'>
			</div>
				<textarea id = "speech-1705" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1705">
					<img id="start_img-1705" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1705">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>