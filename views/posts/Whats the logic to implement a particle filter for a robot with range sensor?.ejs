<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Whats the logic to implement a particle filter for a robot with range sensor?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-4513" class = "post">
			<h2>Question</h2>
			<div id="vote-4513" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">6</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 434</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Whats the logic to implement a particle filter for a robot with range sensor?</h2>
<p>I am trying to implement a particle filter for a robot in Java. This robot is having a range sensor. The world has 6 obstacles - 3 in the top and 3 in bottom. I am calculating the distance of the robot from each obstacle's center and then performing the same activity for each particle. Then, i calculate the difference between the robot and particles. The particles for which the difference with robot measured distance are small, i give them higher probability in resampling.</p>

<p>But, the problem with this approach as told by my friend is that I am assuming that I already know the locations of the obstacles, which make this all process useless. How should I approach it rather in a sense that I don't know the obstacles. How can the particle filter be implemented then? How will the particle filter work in case i don't know the obstacles location? An example of process would be great help. Thanks</p>

<p><img src="https://i.stack.imgur.com/VQ8tz.jpg" alt="Screenshot of my application"></p>

			</div>
			<div class = "userinfosection"  id = "userinfo-4513" data-toggle = "popover">
				<p>user name : StarksAreBack</p>
				<p> user reputation : 164</p>
				<p class = "tagcontent" id = "usertaginfo-4513">{'particle-filter': 8, 'None': 0, 'theory': 3, 'localization': 11}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-4513" class = 'collapse'>
			</div>
				<textarea id = "speech-4513" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4513">
					<img id="start_img-4513" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4513">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-4517"  class = "post">
				<h2>Answer</h2>
			<div id="vote-4517" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">5</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Your question addresses three very different problems, all of which are hard with complicated research-type algorithms.</p>

<ol>
<li><strong>Localization:</strong> When you have a known map of the environment and an unknown robot position. The most common algorithm for this is <a href="https://en.wikipedia.org/wiki/Monte_Carlo_localization">Monte Carlo Localizataion</a>. This is a particle filter exactly like what you're describing.</li>
<li><strong>Mapping:</strong> When the robot wakes up in an unknown environment and has to build a map. Usually mapping algorithms assume that you know the location of the robot, ie from GPS or similar. I've never done pure mapping so I don't know any algorithms, but a quick google should find them.</li>
<li><strong>SLAM:</strong> When you combine the two problems, an unknown environment and an unknown location the problem is called <em>simultaneous localization and mapping (SLAM)</em>. This is very hard. There are good algorithms and good software packages to do it, but they are all still experimental and only work for certain types of environments / sensors. I highly highly recommend that you use an existing package rather than implementing SLAM yourself because it can take months of research work to tune all the parameters. I have no idea if there are SLAM packages for Java, but <a href="https://www.openslam.org/">openslam.org</a> has a great list of state-of-the-art SLAM algorithms. Personally I've used GMapping quite a bit and I trust it not to crash my $25k robot. Be aware that you are treading in research waters.</li>
</ol>

<p>Sorry for giving you such a long answer to a short question. My suggestion would be to assume that you know the locations of the obstacles and do a simple <a href="https://en.wikipedia.org/wiki/Monte_Carlo_localization">Monte Carlo Particle Filter</a>.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-4517" data-toggle = "popover">
				<p>user name : Mike Ounsworth</p>
				<p> user reputation : 218</p>
				<p class = "tagcontent" id = "usertaginfo-4517">{'None': 10}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-4517" class = 'collapse'>
			</div>
				<textarea id = "speech-4517" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4517">
					<img id="start_img-4517" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4517">Comment</button>
			<br><div id = "ans-4521"  class = "post">
				<h2>Answer</h2>
			<div id="vote-4521" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>If you don't know the location of the obstacles and want to apply your filter, I see two solutions:</p>

<ol>
<li><ul>
<li>Do a quick mapping using a simple algorithm easy to implement like the Occupancy Grid Algorithm (with this you localize the obstacles relatively to your robot)</li>
<li>Apply your particles filter</li>
<li>Move the robot</li>
<li>Relocalize your robot using odometry</li>
<li>Correct odometry errors by using another sensor measurements if possible</li>
</ul></li>
<li><p>Using a SLAM algorithm to simultaneously Localize and Map obstacles. The SLAM algorithms are more robust to sensors and odometry errors than the Occupancy Grid Algorithm but are more difficult to implement and need generally more CPU consumption.</p></li>
</ol>

<p>N.B: you must understand that there is no "optimal" solution since this problem still a very active research domain in robotics, the two solutions have advantages and drawbacks.
Consider also the speed of your processor or microcontroller.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-4521" data-toggle = "popover">
				<p>user name : Amine Horseman</p>
				<p> user reputation : 176</p>
				<p class = "tagcontent" id = "usertaginfo-4521">{'control': 1, 'quadcopter': 1, 'None': 14, 'wireless': 1}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-4521" class = 'collapse'>
			</div>
				<textarea id = "speech-4521" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4521">
					<img id="start_img-4521" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4521">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>