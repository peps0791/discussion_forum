<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Should I use gyro or encoders for robot moving in straight line?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-10019" class = "post">
			<h2>Question</h2>
			<div id="vote-10019" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 1332</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Should I use gyro or encoders for robot moving in straight line?</h2>
<p>I've recently succeeded in building my first collision-avoidance Arduino robot with 2 DC motors, and it works pretty well. However, it doesn't move in a straight line yet, when it should. I'm now studying which method should I implement to make the robot go straight. I've heard about using IMU or encoders with feedback control. I pretty much understand how to use the encoders, but I'm not sure about the gyro. Should I use just one of those or a combination of them?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-10019" data-toggle = "popover">
				<p>user name : Vinicius</p>
				<p> user reputation : 6</p>
				<p class = "tagcontent" id = "usertaginfo-10019">{'control': 1, 'mobile-robot': 1, 'None': 0, 'gyroscope': 1, 'arduino': 1}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-10019" class = 'collapse'>
			</div>
				<textarea id = "speech-10019" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10019">
					<img id="start_img-10019" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10019">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-10020"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10020" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Either is going to require feedback control (PID or some subset thereof) to function correctly. I personally have had the most success with encoders, however, I haven't spent a ton of time with accelerometers, but I would assume unless you have an accurate one it may be kind of a pain. Encoders are usually built into motors and are fairly idiot proof. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10020" data-toggle = "popover">
				<p>user name : Ben Stewart</p>
				<p> user reputation : 1</p>
				<p class = "tagcontent" id = "usertaginfo-10020">{'None': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-10020" class = 'collapse'>
			</div>
				<textarea id = "speech-10020" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10020">
					<img id="start_img-10020" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10020">Comment</button>
			<br><div id = "ans-10021"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10021" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There is no good substitute for knowing exactly what your wheels are doing. Even with a gyro, you may not get a straight line, as all gyros have drift (and the ones with low drift are expensive). Also, a gyro won't allow you to accurately control wheel speed and won't tell you when a wheel is slipping or stuck. Encoders will buy you much more than a gyro.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10021" data-toggle = "popover">
				<p>user name : Mark</p>
				<p> user reputation : 321</p>
				<p class = "tagcontent" id = "usertaginfo-10021">{'None': 16}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-10021" class = 'collapse'>
			</div>
				<textarea id = "speech-10021" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10021">
					<img id="start_img-10021" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10021">Comment</button>
			<br><div id = "ans-10024"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10024" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The problem here is that you are trying to drive in a straight line without any external reference. Wheels slip (making encoders give error), gyro's drive (so there's error there to), magnetometers have issues with nearby magnets, and GPS may not work on the scale you want it to. So what are we left with? Sensor fusion.</p>

<p>If we use a combination of an encoders (to measure the actual wheel speed) with a gyro (to measure the short-term rotation changes), with a magnetometer (to achieve long-term direction management).</p>

<p>Hang on, this is getting expensive and hard. How long did you want to drive in a straight line for? 1m, 100m, 100km? What terrain. If it's a tabletop, encoders or a gyro would work. If it's off road, you need more.</p>

<p><strong>Encoders</strong></p>

<p>An encoder gives ... rotational velocity of the wheel. You can integrate this into rotational angle of the wheel to determine how far you've moved. You can compare this with the other wheel's distance to figure out whether the robot has rotated. At high speeds, you need to poll the encoder really fast, or set up interrupts.</p>

<p><strong>Gyro</strong></p>

<p>Don't ask me how a solid state gyro works, but it gives you the rotation change of the robot directly. Unfortunately, this include the rotation of the earth, and so gyro's drift over time. In my experience, with a small RC car-sized robot over ten minutes, the drive of even a cheap gyro is negligible. Once again you're integrating though, so you have to poll it quite fast, and most gyro's talk over i2c, which can be a bit of a pain.</p>

<p>Note that the accuracy of a gyro depends on it's mounting as well. If it's subject to lots of vibration, it will drift faster.</p>

<p><strong>Magnetometer/compass</strong></p>

<p>With some soft iron, you can shield them from your motors just fine, and they provide and absolute orientation relative to earth. Sounds great? Yup, worked fine one one of my robots, but on the competetion day, someone else had three magnets capable of lifting 25kg each. My robot went into orbit around it.
But, if you can ensure that there aren't going to be massive magnets near your robot (other than the robots own motors, which you can shield and then calibrate out to some extent), you can get ~2-3 degree accuracy with very little effort.</p>

<p><strong>Fusing</strong></p>

<p>If you spend a couple more dollars, you can find a 10DOF board that includes a gyroscope, magnetometer (and accelerometer and barometer). Then you can apply some sensor filtering to combine the long-term accuracy of the magnetometer (assuming you drive past the magnets) with the short term (ok, ten minutes or so) sub-degree accuracy of a gyro. Where did the encoders go? Well, I tend to deal with vehicles with tracks (which slip) or offroad (which slip), so I haven't worked with encoders as much as the others.</p>

<hr>

<p>The physical device that I use in my hobby projects is the <a href="http://www.dx.com/p/gy-87-10dof-3-axis-gyro-3-axis-acceleration-3-axis-magnetic-field-air-pressure-module-149359#.V1ZWIXWcFhE" rel="nofollow">GY-87</a> 10DOF board, which uses the MPU6050 accelerometer-gyro and the HMC5883L magnetometer. You speak i2c to the MPU6050, and the MPU6050 can speak to the HMC5883L for you. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10024" data-toggle = "popover">
				<p>user name : sdfgeoff</p>
				<p> user reputation : 131</p>
				<p class = "tagcontent" id = "usertaginfo-10024">{'None': 3}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10024">Load Comments</button></br>
			<div id = "commentsection-10024" class = 'collapse'>
			<div id = "comment-17911" class = "comment">
				<p>Fusion is the best way to go for sure. I've got only one concern about encoders' output: normally, they provide position feedback. Hence, the corresponding velocity needs to be estimated somehow. This task could be easy with high (thus expensive) resolution encoders and simple differentiation, or tougher with state-space or SG filtering.</p>
			</div>
			<div id = "comment-17913" class = "comment">
				<p>It all depends how accurate you need to go. If you have a 1024 tics per rev encoder and a 5cm radius wheel you get an accuracy of 0.3mm. A cheap $4 encoder is 24 pulses, or about 1.3cm. So you use a smaller wheel or measure before gear reduction. And to go from the tics of an encoder to a position or velocity isn't actually very hard. I've yet to meet something that standard quadrature decoding didn't work fine for.</p>
			</div>
			</div>
				<textarea id = "speech-10024" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10024">
					<img id="start_img-10024" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10024">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>