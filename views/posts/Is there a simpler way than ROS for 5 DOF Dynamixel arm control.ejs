<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Is there a simpler way than ROS for 5 DOF Dynamixel arm control
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8187" class = "post">
			<h2>Question</h2>
			<div id="vote-8187" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 472</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Is there a simpler way than ROS for 5 DOF Dynamixel arm control</h2>
<p>I will have a 5 or 6 DOF arm build with Dynamixel or HerculeX smart servos. I need  to move the gripper along Cartesian trajectory, which I will calculate in my C++ application. I looked at ROS, but the learning curve is pretty steep and it looks like a major overkill for this use case. I don't need a distributed system with all the complexity it brings. Preferably, I would like to call a standalone C++ library or libraries to get the arm actuated. </p>

<p>What are my options? What will be the limitations of not using a full blown robotics framework like ROS or YARP in this case.</p>

<p><strong>EDIT</strong></p>

<p>Here is how I would like to code it:</p>

<pre><code>vector&lt;Point&gt; way_points;
vector&lt;Pose&gt;  way_poses;

compute_Cartesian_trajectory(way_points, way_poses);   // my code
execute_Cartesian_trajectory(way_points, way_poses);   // library call
</code></pre>

<p>The last line can be spread over several library function calls and intermediate data structures, if needed. The end result should be the gripper physically following Cartesian trajectory given by <code>way_points</code> and <code>way_poses</code>.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8187" data-toggle = "popover">
				<p>user name : Paul Jurczak</p>
				<p> user reputation : 131</p>
				<p class = "tagcontent" id = "usertaginfo-8187">{'motion-planning': 2, 'None': 2, 'ros': 2, 'c++': 2, 'robotic-arm': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8187">Load Comments</button></br>
			<div id = "commentsection-8187" class = 'collapse'>
			<div id = "comment-13069" class = "comment">
				<p>If you use ROS, you have a lot of other tools, e.g. RVIZ which is a nice visualization that you definitely need in some kind.</p>
			</div>
			<div id = "comment-13085" class = "comment">
				<p>Can you elaborate on what you are trying to achieve, and what you need?  Do you need something to do the Jacobian math for you, trajectory control, hardware interface, visualization, something else, or all of the above?  Also, what are you calculating and what do you want the library to calculate?</p>
			</div>
			<div id = "comment-13086" class = "comment">
				<p>@Ben I edited my question with code example. I need _Jacobian math, trajectory control, hardware interface_, visualization is optional.</p>
			</div>
			<div id = "comment-13102" class = "comment">
				<p>Why not using OpenGL directly? It seems the project is not impossible. You will have control over every thing. Use odeint C++ for solving the differential equations and OpenGL for the visualization and Eigen library for linear algebra. I did this for simulating quadrotor.</p>
			</div>
			<div id = "comment-13104" class = "comment">
				<p>@CroCo It is doable, but I'm trying to avoid reinventing the wheel and focus on solving my core problem. There has been thousands of people, who did it before and I want to mostly reuse their effort.</p>
			</div>
			<div id = "comment-13105" class = "comment">
				<p>@PaulJurczak, Fair enough. You can double check Gazebo library http://gazebosim.org/</p>
			</div>
			</div>
				<textarea id = "speech-8187" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8187">
					<img id="start_img-8187" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8187">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8189"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8189" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Cross post on YARP Q&amp;A channel:</p>

<p><a href="https://github.com/robotology/QA/issues/54" rel="nofollow">https://github.com/robotology/QA/issues/54</a></p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8189" data-toggle = "popover">
				<p>user name : Ugo</p>
				<p> user reputation : 1482</p>
				<p class = "tagcontent" id = "usertaginfo-8189">{'None': 99}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8189" class = 'collapse'>
			</div>
				<textarea id = "speech-8189" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8189">
					<img id="start_img-8189" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8189">Comment</button>
			<br><div id = "ans-8192"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8192" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The library call could be as simple as these two <a href="http://openrave.org/" rel="nofollow">OpenRave</a> Python lines:</p>

<pre><code>robot.GetController().SetPath(traj)
robot.WaitForController(0)
</code></pre>

<p>Of course the types would have to match and all that.  You would also have to write a controller plugin, which I have heard can be quite a bit of work.  (These are just Python bindings for the C++ API, but I am not familiar enough with the C++ API and the calls are slightly different).</p>

<p>That being said, I use OpenRave a lot for forward / inverse kinematics and Jacobian stuff.  But wrote my own trajectory follower and robot interface.</p>

<p>You should also check out <a href="http://www.orocos.org/kdl/user-manual" rel="nofollow">Orocos KDL</a>, it seems to have some support for trajectories, but I don't know if will "execute" the trajectory.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8192" data-toggle = "popover">
				<p>user name : Ben</p>
				<p> user reputation : 3608</p>
				<p class = "tagcontent" id = "usertaginfo-8192">{'None': 277, 'inverse-kinematics': 3, 'accelerometer': 5, 'calibration': 10, 'kinematics': 14, 'robotic-arm': 8, 'jacobian': 6, 'dh-parameters': 8, 'imu': 5, 'sensors': 5}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8192">Load Comments</button></br>
			<div id = "commentsection-8192" class = 'collapse'>
			<div id = "comment-13101" class = "comment">
				<p>That looks great. I found a video of [Dynamixel arm controlled with OpenRAVE](https://www.youtube.com/watch?v=upQU07Z0S0k), but he was using ax12_controller_core ROS package for hardware interface and ROS for glue logic. Can OpenRAVE provide glue logic while using ax12_controller_core?</p>
			</div>
			<div id = "comment-13115" class = "comment">
				<p>No.  OpenRave is pretty much a standalone library.  Unlike ROS which is basically just a [IPC](https://en.wikipedia.org/wiki/Inter-process_communication) library.  OpenRave pretty much only knows how to talk to its own controllers, (which you can write a plugin for).</p>
			</div>
			</div>
				<textarea id = "speech-8192" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8192">
					<img id="start_img-8192" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8192">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>