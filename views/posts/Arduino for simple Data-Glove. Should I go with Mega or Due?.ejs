<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Arduino for simple Data-Glove. Should I go with Mega or Due?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1895" class = "post">
			<h2>Question</h2>
			<div id="vote-1895" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 282</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Arduino for simple Data-Glove. Should I go with Mega or Due?</h2>
<p>First, I'm a beginner in MCU/Robotic world (been working with ATMega+CVavr, but that's all). so please bear with me.</p>

<p>I'm making a prototype data glove (Like <a href="http://keyglove.com" rel="nofollow">KeyGlove</a>, but much more simpler), it consist of:</p>

<ol>
<li>IMU sensors (MPU 9150 9DOF, all reading is fused with built in DMP) ->
Reads hand position and orientations</li>
<li>Minimum of 2 flex sensors -> Reads Figer flexion</li>
<li>MCU (well, Arduino to be specific)</li>
</ol>

<p>The sensors are plugged in to the Arduino and the reading will be filtered (e.g Low pass, Kalmann) in the Arduino before being transferred over serial to PC. The PC will then translates the data into virtual gripper to move an object (VR)  </p>

<p>Initially I planned to use UNO +  Pansenti s MPU9150 Library in my code, then I realised the flash memory size left would be so tiny (i.e MPU9150 lib code size is ~29k, Uno has 32k).
My project is still in very early stage, so a lot things are expected to be changed and added, with so little flash memory left. I can only do so much.  </p>

<p>I immediately looking for Mega as replacement (256k flash) but I realised there is also newer Due with faster processor. </p>

<p>They cost effectively the same as for now.
.</p>

<p>My main concern here is the robustness and compatibility when:</p>

<ul>
<li><p>Designing  the HW interface to Arduino (making circuits, addding
shield)</p></li>
<li><p>Code development (available library)</p></li>
<li><p>Streaming and filtering the sensor readings <strong>(would 32 bit MCus helps, or it's overkill?)</strong></p></li>
</ul>

<p><em>I know this question might sound as too localized, but I believe a lot of projects that utilize multiple sensor reading + filtering similarly will also benefits from this discussion</em>.</p>

<p>I'll revise the question if it's needed. The main question is probably
<strong>Would 32 bit MCUs perform <em>significantly</em> better in multiple sensor reading and signal filtering compared to 8 bit MCUs?</strong></p>

<p>Or in my case.. should I go with Mega or Due?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1895" data-toggle = "popover">
				<p>user name : Arya S.</p>
				<p> user reputation : 8</p>
				<p class = "tagcontent" id = "usertaginfo-1895">{'None': 0, 'imu': 1, 'arduino': 1}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1895" class = 'collapse'>
			</div>
				<textarea id = "speech-1895" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1895">
					<img id="start_img-1895" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1895">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1900"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1900" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The number of bits in the instruction set for the MCU will directly affect the precision of the math operations on that given MCU. If you're going to be doing a lot of 16/32 bit math operations, then yes, a 32 bit MCU will perform significantly better compared to an 8 bit MCU.</p>

<p>This article may help you understand the difference: <a href="http://www.embedded.com/electronics-blogs/industry-comment/4027627/The-8-bit-MCUs-won-t-be-going-away-anytime-soon" rel="nofollow">http://www.embedded.com/electronics-blogs/industry-comment/4027627/The-8-bit-MCUs-won-t-be-going-away-anytime-soon</a>.</p>

<p>The Due has an 84MHz CPU vs the Mega's 16MHz...this isn't even taking into account that a 32-bit core allows the Due to perform operations on 4 byte wide data within a single CPU clock cycle, whereas the Mega will need a clock cycle for each byte at least.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1900" data-toggle = "popover">
				<p>user name : Andrew Capodieci</p>
				<p> user reputation : 826</p>
				<p class = "tagcontent" id = "usertaginfo-1900">{'None': 54}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1900">Load Comments</button></br>
			<div id = "commentsection-1900" class = 'collapse'>
			<div id = "comment-3948" class = "comment">
				<p>Thanks, I'll stick with 9 bit since I think I'm doing rather simple math.</p>
			</div>
			<div id = "comment-3953" class = "comment">
				<p>Well, of course I meant 8 bit in my previous comment. @andrew sorry not enough rep to upvote. Will do later. :)</p>
			</div>
			</div>
				<textarea id = "speech-1900" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1900">
					<img id="start_img-1900" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1900">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>