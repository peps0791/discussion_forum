<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Find object using only distance
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-10259" class = "post">
			<h2>Question</h2>
			<div id="vote-10259" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 55</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Find object using only distance</h2>
<p>I'm working on a extremely simple robot (very first project) that attempts to find the source of a Bluetooth signal. There are two motors that drive the platform and each has an encoder. We've already used a Kalman filter to calculate the approximate distance to the Bluetooth beacon within reasonable error.</p>

<p>I worked out a manual solution using some trig that solves the problem in theory, but it fails if there is any error (For example, it attempts to turn 73 degrees, but turns 60).</p>

<p>My question is how can I reasonably drive the motors based on the encoder data to continuously minimize the distance to the signal? Furthermore, is there a generic solution to problems like these? (I guess you might call it a stochastic "Hotter/Colder" problem)</p>

<p>Thanks in Advance.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-10259" data-toggle = "popover">
				<p>user name : robits28371</p>
				<p> user reputation : 13</p>
				<p class = "tagcontent" id = "usertaginfo-10259">{'None': 0, 'wheeled-robot': 2, 'raspberry-pi': 2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10259">Load Comments</button></br>
			<div id = "commentsection-10259" class = 'collapse'>
			<div id = "comment-18495" class = "comment">
				<p>Welcome to *Robotics*, robits28371. This is a great first question! I hope you come back, with more questions and with answers for other users!</p>
			</div>
			</div>
				<textarea id = "speech-10259" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10259">
					<img id="start_img-10259" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10259">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-10262"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10262" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>There are two challenges that you will have to address. First is localization of the robot relative to the Bluetooth source; second is the controller that will drive the robot to the source.</p>

<p>To localize the robot, I would consider using a triangulation method. One robotic platform that addresses a similar problem is the <a href="http://science.sciencemag.org/content/sci/345/6198/795.full.pdf?ijkey=6HDqxr.PcBD7o&amp;keytype=ref&amp;siteid=sci" rel="nofollow noreferrer">Kilobot</a>, which is used in swarm robotics research. The Kilobot has an IR sensor, which it uses to determine the distance to its neighbours--this sensor is very susceptible to noise. Furthermore, the Kilobot uses vibrating motors to move, which are even worse for control than low quality motor encoders. The triangulation method is given on page 794--the only difference will be that your robot will be green and the source will be blue. To triangulate, you must take a minimum of three relative distance measurements from the source at different known locations (approximated due to dubious encoder quality)--you can now use this coordinate as a desired position for the controller. </p>

<p>To control the robot, we need to drive the robot to the source by applying control inputs. Because you don't have any specific robot in mind, let's assume that you have a two-wheeled differential drive robot (TWDDR). TWDDRs can be modeled with unicycle dynamics of the following form: $$\dot{z}=\left[\begin{matrix}\dot{x}\\ \dot{y} \\ \dot{\theta} \end{matrix}\right] = \left[\begin{matrix}cos(\theta)&amp;0\\sin(\theta)&amp;0\\0&amp;1\end{matrix}\right] \left[\begin{matrix}v\\\omega\end{matrix}\right],$$ where $x$ and $y$ are Cartesian coordinates of the robot, and $\theta \in (-\pi,\pi]$ is the angle between the heading and the $x$-axis. The input vector $\left[v, \omega \right]^T$ consists of linear and angular velocity inputs. For simplicity, I will assume that you can specify these inputs directly, which is reasonable for most off-the-shelf robots--if you want to implement this from scratch, then you have to specify velocities for the left and right wheels.</p>

<p>Driving the robot to the source is equivalent to shifting the origin of the state and driving the state of the robot to 0. For unicycle robots, a easy method of control is achieved by controlling a point, which is holonomic, some small distance $l$ away from the center of the the two wheels rather than controlling the unicycle robot directly. To do this, we can derive the following rotation matrix to transform the control law of the robot to the control law of the point: $$\dot{p}=\left[\begin{matrix}\dot{p_x}\\\dot{p_y}\end{matrix}\right]=\left[\begin{matrix}\text{cos}(\theta)&amp;-l\text{sin}(\theta)\\\text{sin}(\theta)&amp;l \text{cos}(\theta)\end{matrix}\right]\left[\begin{matrix}v\\\omega\end{matrix}\right]$$</p>

<p>$\dot{p}$ is the velocity of the point being controlled, and it is decomposed into its $x$ and $y$ components. </p>

<p>At this point, control is quite simple; we control the point directly! The dynamics become: $$\dot{z}=\left[\begin{matrix}\dot{x}\\ \dot{y} \\ \dot{\theta} \end{matrix}\right] = \left[\begin{matrix}cos(\theta)&amp;0\\sin(\theta)&amp;0\\0&amp;1\end{matrix}\right] \left[\begin{matrix}v\\\omega\end{matrix}\right]=\left[\begin{matrix}cos(\theta)&amp;0\\sin(\theta)&amp;0\\0&amp;1\end{matrix}\right] \left[\begin{matrix}cos(\theta)&amp;sin(\theta)\\-\frac{sin(\theta)}{l}&amp;-\frac{cos(\theta)}{l}\end{matrix}\right]\left[\begin{matrix}\dot{p}_x\\\dot{p}_y\end{matrix}\right],$$Setting $$\dot{p}=u=\left[\begin{matrix}x_{desired}\\y_{desired}\end{matrix}\right],$$ accomplishes the objective of driving the robot to the desired pose, where $u$ is the input, and $[x_{desired},y_{desired}]^T$ is the location of the source.</p>

<p>The gif below uses this controller, driving all of the robots from arbitrary initial positions to the desired position at $(-5,-5)$.</p>

<p><a href="https://i.stack.imgur.com/OsXCK.gif" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/OsXCK.gif" alt="Unicycle Robots"></a></p>

<p>I have glossed over the challenges of noisy sensor and actuators, but the core idea has been presented--both triangulation and control should be possible in simulation, and with a little tweaking, it should work on a physical system.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10262" data-toggle = "popover">
				<p>user name : NBCKLY</p>
				<p> user reputation : 741</p>
				<p class = "tagcontent" id = "usertaginfo-10262">{'None': 44, 'roomba': 4, 'irobot-create': 4, 'arduino': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10262">Load Comments</button></br>
			<div id = "commentsection-10262" class = 'collapse'>
			<div id = "comment-18374" class = "comment">
				<p>Whoa, thanks for the comprehensive answer. I will have to input motor speed for the left and right wheels, unfortunately, but that doesn't add too much complexity.</p>
			</div>
			<div id = "comment-18375" class = "comment">
				<p>No problem. Control of unicycle robots using individual wheel velocities as inputs has been discussed on the robotics stack exchange, so most of the math is done for you!</p>
			</div>
			</div>
				<textarea id = "speech-10262" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10262">
					<img id="start_img-10262" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10262">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>