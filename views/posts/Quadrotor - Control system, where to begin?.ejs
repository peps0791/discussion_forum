<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Quadrotor - Control system, where to begin?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-8448" class = "post">
			<h2>Question</h2>
			<div id="vote-8448" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 345</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Quadrotor - Control system, where to begin?</h2>
<p>I am starting to assemble a quadrotor from scratch.</p>

<p>Currently, I have this:</p>

<ul>
<li>Structure;</li>
<li>an IMU (accelerometer, gyro, compass);</li>
<li>4 ESCs and DC motors;</li>
<li>4 propellers;</li>
<li>Raspberry Pi to control the system, and;</li>
<li>LiPo battery.</li>
</ul>

<p>I have calibrated the ESCs and the four motors are already working and ready.
But now I am stuck.</p>

<p>I guess the next step is to dive deeply in the control system, but I am not sure where to begin. I read some articles about the control using PIDs, but I don't know how many should I use, or whether I need to model the quadrotor first to compute kinematic and dynamic of the quadrotor inside the RPi.
Sorry if the question is too basic!</p>

<p><strong>More details</strong></p>

<p>The structure is from a kit. Well, all I have now is the ESCs calibrated, although I do not have documentation of them to adjust the cut off voltage for the LiPo battery. I have been made tests with some Python code I found to have PWM outputs for the motors and to control I2C bus to communicate with IMU. </p>

<p>One of my problems now is that I need RPIO library for PWM and the <code>quick2wire-python-api</code> to work with the I2C libraries from the MIT to control my IMU but as far as I know RPIO works with Python2 and <code>quick2wire</code> works with Python3 so I don't know how to manage this.</p>

<p>So actually, I have no code yet to control the four motors in parallel, only have testing code to test them separately and also with the IMU.</p>

<p>About the IMU, I am still learning how to work with it and how to use the MIT library. The unit includes those sensors:</p>

<ul>
<li>ADXL345</li>
<li>HMC5883L-FDS</li>
<li>ITG3205</li>
</ul>

<p>You can see a picture of the quadrotor below,</p>

<p><a href="https://i.stack.imgur.com/fV5Oy.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/fV5Oy.jpg" alt="Quadrotor"></a></p>

<p>So as I said before, I would like to know how to handle the control system and how it is implemented inside the Raspberry Pi, and then start to work with the Python code to assemble the motors, the IMU and the control.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-8448" data-toggle = "popover">
				<p>user name : osuarez</p>
				<p> user reputation : 128</p>
				<p class = "tagcontent" id = "usertaginfo-8448">{'control': 5, 'stereo-vision': 2, 'beginner': 3, 'pid': 3, 'uav': 5, 'slam': 3, 'robotic-arm': 0, 'mobile-robot': 7, 'forward-kinematics': 0, 'cameras': 2, 'kinect': 0, 'visual-servoing': 2, 'matlab': 1, 'motion-planning': 4, 'movement': 1, 'odometry': 1, 'None': 2, 'inverse-kinematics': 0, 'raspberry-pi': 7, '3d-reconstruction': 2, 'quadcopter': 9, 'computer-vision': 6, 'geometry': 3, 'c++': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8448">Load Comments</button></br>
			<div id = "commentsection-8448" class = 'collapse'>
			<div id = "comment-13677" class = "comment">
				<p>Can you elaborate more on how much all of this is assembled and ready to fly? There are a lot of different things you are going to have to do if you are starting from scratch, balancing and trimming the thrust distribution between rotors, calibrating your IMU, etc. Is this something built from a kit or have you carved it out of wood yourself? Show us a picture!</p>
			</div>
			<div id = "comment-13681" class = "comment">
				<p>I have edited the post with more details!</p>
			</div>
			<div id = "comment-14103" class = "comment">
				<p>Is the code you are working on open source? I'm working on a project that uses RPi with a 10-DOF IMU. I've been porting code to Java based on the implementations from Arduino and would be very interested in seeing how you are doing it.</p>
			</div>
			</div>
				<textarea id = "speech-8448" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8448">
					<img id="start_img-8448" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8448">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-8456"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8456" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I would advise against using a Raspberry Pi for your flight control. The Raspberry could be used for higher level decision making algorithms with regards to automation of your vehicle, but the vehicle also needs some real-time algorithms that can react instantaneously to deviations from desired attitude, etc.</p>

<p>The reason the Raspberry is not the best for this is because it is OS based which means that at any moment in time it could preempt your flight control logic in order to service another request from the OS. This is not what you want. I'm not saying its impossible to do this on an ARM chip but using a Linux based solution would be less than optimal.  </p>

<p>There are Arduino boards that are ARM based which are not pre-emptive, but then there are also less expensive arduino (AtMel chips) that would have ample processing speed to handle the flight controls.</p>

<p>There are several affordable of flight controllers that are available to the hobbyist including:</p>

<ul>
<li>Naze</li>
<li>Ardupilot</li>
<li>MultiWii</li>
<li>CC3D</li>
<li>KK2</li>
</ul>

<p>If you are wanting to write the software yourself, I would suggest buying a MultiWii or CC3D board. Those are basically an arduino with all of the sensors that you would need to control a flying vehicle already attached to the board (accelerometers, gyros, barometer, magnetometer) and with serial ports so you can easily attach GPS, On-screen displays, radio links, etc, etc. Then you only need the basic Arduino developer's kit (opensource) to start coding in C.</p>

<p>You can check into other opensource software solutions that will work on some of these boards such as MultiWii, ArduPilot or OpenPilot.</p>

<p>I would strongly suggest starting with one of these ready-to-go solutions first as you will soon discover that your vehicle will require plenty of attention as far as tuning, balancing and calibrating before it will be airworthy. You might discover that your design isn't well suited to the motors you bought and you might have to buy different kV motors or adjust prop sizes to compensate. Once you know it can fly then you might want to start experimenting with adjusting the code in the existing opensource packages or if you're really bold, build new code from scratch.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8456" data-toggle = "popover">
				<p>user name : Octopus</p>
				<p> user reputation : 886</p>
				<p class = "tagcontent" id = "usertaginfo-8456">{'control': 3, 'None': 60, 'gyroscope': 3, 'motor': 7, 'automation': 0}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-8456">Load Comments</button></br>
			<div id = "commentsection-8456" class = 'collapse'>
			<div id = "comment-13711" class = "comment">
				<p>Thanks for your comment!! Is not there any RTOS available for Raspberry Pi? In fact Linux OS can be made RTOS with some patches. And about writing the code, how should I start to coding the control system? What to stabilize first? Is the PID the best design for quadrotor?</p>
			</div>
			<div id = "comment-17863" class = "comment">
				<p>i agree with your thinking...but how to interface raspberry pi with cc3d , i have arduino 2560 and cc3d , now i want to control through a server via wifi...i will write the server code..but i dont have any clue about connections..pls help</p>
			</div>
			</div>
				<textarea id = "speech-8456" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8456">
					<img id="start_img-8456" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8456">Comment</button>
			<br><div id = "ans-8978"  class = "post">
				<h2>Answer</h2>
			<div id="vote-8978" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p><strong>Helping with inspiration</strong></p>

<p>Hello,</p>

<p>I suggest you to evaluate separately the altitude and attitude dynamics. Then you can start thinking in the control you need to achieve your own objectives.</p>

<p>For example:</p>

<p>The altitude of a Quadrotor is how high it can get. For this, we need to have a mathematical model:</p>

<p><a href="https://i.stack.imgur.com/E4Lfx.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/E4Lfx.jpg" alt="quadrotor schematic"></a></p>

<p>For this approach, you should read about <a href="https://en.wikipedia.org/wiki/Euler_angles" rel="nofollow noreferrer">euler angles &amp; rotation matrices</a>.</p>

<p>From Newton's equation:</p>

<p>$\ddot{z} = \frac{1}{M}{\cos(\phi)\cos(\theta)\sum_{n=1}^{4} \omega_n^{2}} - g$</p>

<p>Where the expression can be derived from the relationship of the two frames represented in the figure above! Please, observe that the angles are essential to control the altitude, but we can do (and should do!) some approximations to simplify our model. Suppose $\phi$ and $\theta$ very small</p>

<p>$\ddot{z} = \frac{1}{M}{\sum_{n=1}^{4} \omega_n^{2}} - g$</p>

<p>(...)</p>

<p>For more, I recommend this book <a href="http://www.springer.com/br/book/9784431538554" rel="nofollow noreferrer">here</a></p>

<p>Hope I have inspired you to start your cool project. Good luck!</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-8978" data-toggle = "popover">
				<p>user name : leCrazyEngineer</p>
				<p> user reputation : 123</p>
				<p class = "tagcontent" id = "usertaginfo-8978">{'None': 9}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-8978" class = 'collapse'>
			</div>
				<textarea id = "speech-8978" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-8978">
					<img id="start_img-8978" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-8978">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>