<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>What is the intuitive explanation of using Jacobian of observation model while calculating Kalman gain in EKF SLAM?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-12540" class = "post">
			<h2>Question</h2>
			<div id="vote-12540" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 37</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>What is the intuitive explanation of using Jacobian of observation model while calculating Kalman gain in EKF SLAM?</h2>
<p>The idea of using Kalman gain in EKF SLAM is to figure out how much we trust our motion model and sensor/observation model. As explained in <a href="https://home.wlu.edu/~levys/kalman_tutorial/kalman_05.html" rel="nofollow noreferrer">The Extended Kalman Filter: An Interactive Tutorial for Non-Experts - Part 5: Computing the Gain</a>, the Kalman gain can be calculated as,</p>

<p>$$K_t = \frac{p}{(p +r)}$$</p>

<p>where $p$ denotes prediction error and $r$ denotes sensor noise. </p>

<p>Now, if we look into the equation in <a href="https://i.stack.imgur.com/XLGZZ.jpg" rel="nofollow noreferrer">the image</a>, </p>

<p>$$K_t = \bar{\Sigma_t}H_t^T(H_t\bar{\Sigma_t}H_t^T +Q_t)^{-1}$$</p>

<p>we can see that Kalman gain is calculated using Covariance matrix ($\Sigma$), Jacobian of observation model ($H$) and Sensor noise ($Q$). Comparing with earlier equation, $p$ can be considered equivalent of $\Sigma$, while $r$ can be equivalent of $Q$. </p>

<p>How does $H$ fit in, in this equation? What would be an intuitive explanation?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-12540" data-toggle = "popover">
				<p>user name : skr_robo</p>
				<p> user reputation : 8</p>
				<p class = "tagcontent" id = "usertaginfo-12540">{'None': 0, 'motion-planning': 0, 'ekf': 1, 'gazebo': 0, 'slam': 1, 'kalman-filter': 1, 'mobile-robot': 1, 'ros': 0, 'navigation': 1}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-12540" class = 'collapse'>
			</div>
				<textarea id = "speech-12540" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12540">
					<img id="start_img-12540" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12540">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-12546"  class = "post">
				<h2>Answer</h2>
			<div id="vote-12546" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Let's try breaking it down.</p>

<h1>Projection of uncertainty</h1>

<p>$H\Sigma H^T$ is projecting the state uncertainty into measurement space. How do we know that?</p>

<p>$\Sigma$ denotes the the covariance of our belief in the filter's <em>state</em></p>

<p>$h(x)$ maps some belief about state to a measurement that we would expect if that were the true state</p>

<p>$H(x)$ is a linear approximation of $h(x)$.</p>

<p>Why? Covariance itself provides little intuition for what is happening under the "hood". What is more informative is a <em>square root</em> of the covariance. Imagine that $\Sigma = LL^T$ for some $L$. $L$ is what is really stretching the space in a linear fashion. If you were to deform the unit circle by $L$, you would get the uncertainty ellipse that we all know and love. By stretching and shrinking $L$, we can change our distribution.</p>

<p>That means that $HL$ would first deform the unit circle into an ellipse governed by $L$, and then $H$ would stretch and shear that ellipse into a different ellipse. Now we can recover the covariance of the deformed points: it would be $HL(HL)^T$, which is $HLL^TH^T = H\Sigma H^T$</p>

<h1>Why does any of this matter?</h1>

<p>The kalman gain is like a ratio, governing how much we should trust a new measurement. Often, your measurements will have different dimension and different units than your state. So you need to express uncertainty in the filter state as uncertainty in observation space.</p>

<p>The first equation is meaningless if $p$ and $r$ are different shapes or different units. We need to munge $p$ into the same shape and units as $r$ by projecting into $p$ observation space. The above rambling outlines how one does that.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-12546" data-toggle = "popover">
				<p>user name : Jacob Panikulam</p>
				<p> user reputation : 136</p>
				<p class = "tagcontent" id = "usertaginfo-12546">{'None': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-12546">Load Comments</button></br>
			<div id = "commentsection-12546" class = 'collapse'>
			<div id = "comment-22000" class = "comment">
				<p>Thank you. This did improve my understanding. However, the **_HL_** part left me a bit confused. I believe what you meant there was the fact that deformation due to **_L_** is further changed by **_H_**, just like Jacobian **_H_** projects Covariance matrix to observation space?</p>
			</div>
			</div>
				<textarea id = "speech-12546" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-12546">
					<img id="start_img-12546" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-12546">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>