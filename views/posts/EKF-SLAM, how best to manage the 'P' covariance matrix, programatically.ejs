<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>EKF-SLAM, how best to manage the 'P' covariance matrix, programatically
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-6908" class = "post">
			<h2>Question</h2>
			<div id="vote-6908" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 321</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>EKF-SLAM, how best to manage the 'P' covariance matrix, programatically</h2>
<p>I've recently been learning about SLAM and EKF-SLAM. </p>

<p>I've began my implementation in python, but have had trouble managing the updating of P, especially when it comes to adding new landmarks. Currently there is no 'P' but just a few separate matrices that I have to stitch together when needed.</p>

<p>My implementation can be seen here: <a href="http://pastebin.com/r7wUMgY7" rel="nofollow">http://pastebin.com/r7wUMgY7</a> </p>

<p>How best should I manage the large covariance matrix, should I be using one matrix, like the algorithm suggests? Thanks in advance.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-6908" data-toggle = "popover">
				<p>user name : jabz</p>
				<p> user reputation : 17</p>
				<p class = "tagcontent" id = "usertaginfo-6908">{'python': 2, 'ekf': 2, 'None': 0, 'slam': 2}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-6908" class = 'collapse'>
			</div>
				<textarea id = "speech-6908" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6908">
					<img id="start_img-6908" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6908">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-6911"  class = "post">
				<h2>Answer</h2>
			<div id="vote-6911" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>You must use one matrix, because you must manage the cross covariances. The best way to add a landmark is to expand the matrix, by copying it into a larger one (with two extra rows for x,y and two extra columns for the same). Then, you have to initialize all the off-diagonal terms using the jacobian matrix.  Similarly, the state vector must be expanded to include the new landmark as well.</p>

<p><a href="https://robotics.stackexchange.com/a/5173/163">This answer</a> shows how to initialize a new landmark in this way.  Note the matrix shown there is <em>block</em> represented. It could in fact be very large.</p>

<p>Now how you represent that matrix is up to you. However, keeping many small matrices that you stitch together is no more efficient (cpu or memory) than keeping one large one.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-6911" data-toggle = "popover">
				<p>user name : Josh Vander Hook</p>
				<p> user reputation : 3960</p>
				<p class = "tagcontent" id = "usertaginfo-6911">{'None': 345}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-6911">Load Comments</button></br>
			<div id = "commentsection-6911" class = 'collapse'>
			<div id = "comment-9876" class = "comment">
				<p>Fair point and thanks for the link. I'll most likely go for the 'initialise big empty matrix' approach.</p>
			</div>
			</div>
				<textarea id = "speech-6911" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6911">
					<img id="start_img-6911" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6911">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>