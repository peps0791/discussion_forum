<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Altitude hold for quadcopter with Accelerometer and Barometer
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-2683" class = "post">
			<h2>Question</h2>
			<div id="vote-2683" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 8395</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Altitude hold for quadcopter with Accelerometer and Barometer</h2>
<p>I wonder currently how to implement an altitude control for a quadcopter. I have atm just a barometer/GPS and an accelerometer. </p>

<p>Barometer and GPS are relatively straight forward implemented, but not very precise and slow. For the accelerometer readout, I remove the constant 9.81 m/s  acceleration by a low pass filter. Then I take this data and calculate out of it the climb-rate(in cm per s). I know the speed approximation by this way is not so great. However I don't know a better approach so far.</p>

<p>For the calculation of the motor speeds I use atm two PIDs (STAB and RATE). </p>

<p>I coded the example shown below, without much testing so far. I believe it will not work out in a smooth and nice way. E. g. instead of the speed calculated of the accelerometer I could use the climb-rate of the barometer. However for low altitudes and small changes I do need very likely the accelerometer. </p>

<p>ArduPilot seems to use somehow in a different way both with a third PID for the acceleration. I believe they calculate the height difference like me. Then they use maybe for STAB-Pid the barometer climb rate (not like me the accelerometer) and calculate with acceleration data another output. Unfortunately I don't know how exactly, or whether there are other methods.</p>

<p>Does someone know the exact layout to implement with a barometer and accelerometer an altitude hold function. I mean I am really not sure whether my ideas would be correct. Maybe I can post some options later.</p>

<p>My PIDs:</p>

<pre><code>m_rgPIDS[PID_THR_STAB].kP(1.25);  // For altitude hold

m_rgPIDS[PID_THR_RATE].kP(0.35);  // For altitude hold
m_rgPIDS[PID_THR_RATE].kI(0.15);  // For altitude hold
m_rgPIDS[PID_THR_RATE].imax(100); // For altitude hold
</code></pre>

<p>Code for altitude hold:</p>

<pre><code>// Stabilizing code done before

float fCurAlti_cm       = _HAL_BOARD.get_alti_m() * 100.f;        // Barometer and GPS data
float fAcclClimb_cms    = _HAL_BOARD.get_accel_mg_ms().z * 100;   // Accelerometer output in cm per s (gravitational const. corrected)

// calculate the difference between current altitude and altitude wanted
float fAltStabOut       = _HAL_BOARD.m_rgPIDS[PID_THR_STAB].get_pid(fCurAlti_cm - (float)(rcalt_m*100), 1);
// Rate it with climb rate (here with accelerometer)
int_fast16_t iAltOutput = _HAL_BOARD.m_rgPIDS[PID_THR_RATE].get_pid(fAltStabOut - fAcclClimb_cms, 1);

// Modify the speed of the motors
iFL += iAltOutput;
iBL += iAltOutput;
iFR += iAltOutput;
iBR += iAltOutput;
</code></pre>

			</div>
			<div class = "userinfosection"  id = "userinfo-2683" data-toggle = "popover">
				<p>user name : dgrat</p>
				<p> user reputation : 213</p>
				<p class = "tagcontent" id = "usertaginfo-2683">{'quadcopter': 14, 'magnetometer': 1, 'None': 0, 'ardupilot': 4, 'orientation': 0, 'accelerometer': 4, 'arduino': 2, 'multi-rotor': 7, 'c++': 1, 'mavlink': 1, 'calibration': 1, 'compass': 1, 'sensors': 5, 'navigation': 3, 'gyroscope': 1, 'gps': 3}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2683" class = 'collapse'>
			</div>
				<textarea id = "speech-2683" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2683">
					<img id="start_img-2683" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2683">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-2685"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2685" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Sorry, I'm not sure exactly what your code is doing but generally speaking ... </p>

<p>Instead of trying to control using the accelerometer directly, it is usually better to estimate velocity and control using that (as the D part of your PID controller). </p>

<p>If you're willing to dig into the math, the most common way to do this is to combine the barometer and accelerometer measurements using a Kalman filter. This will give you a smooth estimate of the altitude and velocity which can then be used as the P and D of the attitude controller.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2685" data-toggle = "popover">
				<p>user name : ryan0270</p>
				<p> user reputation : 1814</p>
				<p class = "tagcontent" id = "usertaginfo-2685">{'None': 133}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-2685">Load Comments</button></br>
			<div id = "commentsection-2685" class = 'collapse'>
			<div id = "comment-5049" class = "comment">
				<p>A sensor fusion is easy to make I think. Anyway I don't understand how these acceleration PID should work explained here: http://copter.ardupilot.com/wiki/altholdmode/:


"The Throttle Accel PID gains convert the acceleration error (i.e the difference between the desired acceleration and the actual acceleration) into a motor output.  The 1:2 ratio of P to I (i.e. I is twice the size of P) should be maintained if you modify these parameters.  These values should never be increased but for very powerful copters you may get better response by reducing both by 50% (i.e P to 0.5, I to 1.0)."</p>
			</div>
			<div id = "comment-5050" class = "comment">
				<p>I mean for altitude hold, the accelerometer data would already go into the calculation.</p>
			</div>
			<div id = "comment-5051" class = "comment">
				<p>It CAN be done like that, but it's not ideal. The problem with using accelerometer data like that is dealing with noise. Quadrotors usually have low-cost accelerometers which, when you add in vibrations, makes them rather noisy. That is why most research groups use special algorithms (e.g. Kalman filter) to combine all the sensor measurements but reduce noise.</p>
			</div>
			</div>
				<textarea id = "speech-2685" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2685">
					<img id="start_img-2685" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2685">Comment</button>
			<br><div id = "ans-2690"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2690" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I made a small routine for that, but not yet completely without errors. E.g.the acceleration term is still contradicting the differcence in height term, but working for it's own well.</p>

<pre><code>const float fBias_g   = 0.1f;
const float fScaleF_g = 100.0f;

int_fast16_t iAltZOutput = 0; // Barometer &amp; Sonar
int_fast16_t iAccZOutput = 0; // Accelerometer

// Return estimated altitude by GPS and barometer 
bool bOK_H, bOK_R, bOK_G;
int_fast32_t fCurAlti_cm = altitude_cm(&amp;_HAL_BOARD, bOK_H);
float fClimbRate_cms = climbrate_cms(&amp;_HAL_BOARD, bOK_R);
// Get the acceleration in g
Vector3f vAccel_g = accel_g(&amp;_HAL_BOARD, bOK_G) * fScaleF_g;

// Calculate the motor speed changes by the error from the height estimate and the current climb rates
// If the quadro is going down, because of an device error, then this code is not used
if(_RECVR.m_Waypoint.mode != GPSPosition::CONTRLD_DOWN_F) {
  float fAltZStabOut = _HAL_BOARD.m_rgPIDS[PID_THR_STAB].get_pid((float)(rcalt_cm - fCurAlti_cm), 1);
  iAltZOutput        = _HAL_BOARD.m_rgPIDS[PID_THR_RATE].get_pid(fAltZStabOut - fClimbRate_cms, 1);
}


// Don't change the throttle if acceleration is below a certain bias
vAccel_g.z           = sign_f(vAccel_g.z) * (abs(vAccel_g.z) - fBias_g) * fScaleF_g;

// Calculate the throttle changes if copter changes altitude
float fAccZStabOut   = _HAL_BOARD.m_rgPIDS[PID_ACC_STAB].get_pid(vAccel_g.z, 1);
iAccZOutput          = _HAL_BOARD.m_rgPIDS[PID_ACC_RATE].get_pid(fAccZStabOut, 1);

// Modify the speed of the motors to hold the altitude
iFL += iAltZOutput + iAccZOutput;
iBL += iAltZOutput + iAccZOutput;
iFR += iAltZOutput + iAccZOutput;
iBR += iAltZOutput + iAccZOutput;
</code></pre>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2690" data-toggle = "popover">
				<p>user name : dgrat</p>
				<p> user reputation : 213</p>
				<p class = "tagcontent" id = "usertaginfo-2690">{'quadcopter': 14, 'magnetometer': 1, 'None': 0, 'ardupilot': 4, 'orientation': 0, 'accelerometer': 4, 'arduino': 2, 'multi-rotor': 7, 'c++': 1, 'mavlink': 1, 'calibration': 1, 'compass': 1, 'sensors': 5, 'navigation': 3, 'gyroscope': 1, 'gps': 3}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2690" class = 'collapse'>
			</div>
				<textarea id = "speech-2690" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2690">
					<img id="start_img-2690" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2690">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>