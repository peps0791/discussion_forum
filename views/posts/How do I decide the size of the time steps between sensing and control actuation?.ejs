<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How do I decide the size of the time steps between sensing and control actuation?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-7781" class = "post">
			<h2>Question</h2>
			<div id="vote-7781" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">6</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 170</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How do I decide the size of the time steps between sensing and control actuation?</h2>
<p><strong>My Background:</strong></p>

<p>My experience is in solid mechanics and FEA.  So I have zero experience in robotics/controls.  </p>

<p><strong>Problem Description</strong></p>

<p>I'm developing a control strategy to stabilize a complicated 6-legged dynamical system.  Torques <strong><em>Ti</em></strong> from each leg's joints will be used to create a net moment <strong><em>M</em></strong> on the body, stabilizing the system.  This moment <strong><em>M</em></strong> is known from the pre-determined control strategy.  (Side note: the dynamical solver is of the nonlinear computational type)</p>

<p>Due to my lack of background, I have a fundamental confusion with the dynamical system.  I want to use joint torques <strong><em>Ti</em></strong> to create this known net moment <strong><em>M</em></strong> on the body.  This moment <strong><em>M</em></strong> is a function of the</p>

<ol>
<li>current positions/angles of all the leg segments</li>
<li>reaction forces and moments (that cannot be controlled) of each leg</li>
<li>controllable joint torques <strong><em>Ti</em></strong> of each leg</li>
<li>time</li>
</ol>

<p><strong>$(*)$ At a given time $(n-1)\Delta$t:</strong> </p>

<blockquote>
  <p>--From the control strategy, the desired net moment <strong><em>M</em></strong> is computed/known</p>
  
  <p>--One can read/sense the legs' positions, angles, reaction forces, and reaction moments (say, from well placed sensors), at this time $t = (n-1)\Delta$t.  </p>
  
  <p>--From this information, vector algebra easily yields the desired joint torques <strong><em>Ti</em></strong> required to create the net moment <strong><em>M</em></strong></p>
</blockquote>

<p><strong>$(**)$ At the time $(n)\Delta$t:</strong></p>

<blockquote>
  <p>--one applies the previously determined joint torques <strong><em>Ti</em></strong> (determined at $t=(n-1)\Delta$t) to create the desired moment <strong><em>M</em></strong> </p>
  
  <p>--of course these torques <strong><em>Ti</em></strong> are applied at the immediate proceeding time step because they cannot be applied instantaneously</p>
</blockquote>

<p>So this is exactly where my fundamental confusion exists.  The torques <strong><em>Ti</em></strong> were calculated in $(*)$, based on data of angles/positions/reactions in $(*)$, with the objective to create moment <strong><em>M</em></strong>.  However, these torques <strong><em>Ti</em></strong> are applied in $(**)$, where the data (angles/positions/reactions) are <strong>now different</strong> - thus the desired net moment <strong><em>M</em></strong> can never be created (unless you an magically apply actuation at the instantaneous time of sensing).  Am I understanding the controls problem correctly?  </p>

<p><strong>Questions</strong></p>

<ol>
<li>Am I understanding the robotics problem correctly?  What are the terms and strategies around this dilemma?</li>
<li>Of course I could create the time steps between the sensing and the actuation to be infinitely small, but this would be unrealistic/dishonest.  What is the balance between a realistic time step, but also performs the task well?</li>
</ol>

			</div>
			<div class = "userinfosection"  id = "userinfo-7781" data-toggle = "popover">
				<p>user name : Guy</p>
				<p> user reputation : 33</p>
				<p class = "tagcontent" id = "usertaginfo-7781">{'control': 6, 'actuator': 6, 'None': 0, 'legged': 6, 'stability': 6}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7781" class = 'collapse'>
			</div>
				<textarea id = "speech-7781" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7781">
					<img id="start_img-7781" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7781">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-7783"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7783" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Regarding point 1, yes you are understanding the problem correctly. </p>

<p>Regarding points 1 and 2, I believe what you are looking for is the <a href="https://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem" rel="nofollow noreferrer">Nyquist-Shannon sampling theory</a>. This theory says that your sampling frequency should be greater than 2x your "highest frequency of interest". This is to prevent aliasing, where you can incorrectly measure a high-frequency signal as low frequency. </p>

<p><a href="https://i.stack.imgur.com/LXPDO.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/LXPDO.png" alt="From Wikipedia on Aliasing"></a></p>

<p>The image above is from Wikipedia. So, you have your robot with all its joints and limbs and such - how fast can those limbs move? Your moments and torques will all cause accelerations at the joints; what is the top rotational speed at a joint? Or, put another way, what's the peak moment you would expect and how long would it be applied? You can calculate a speed from that as well. </p>

<p>You want to sample your joints fast enough that you can capture the full dynamics of the system. That's the sampling threshold (minimum!) I would set for my own robotics project for <em>sensing</em>. For <em>control</em>, <a href="http://www.ni.com/white-paper/2709/en/" rel="nofollow noreferrer">most</a> , <a href="http://ai.stanford.edu/manips/publications/pdfs/Vischer_1990.pdf" rel="nofollow noreferrer">reputable</a> , <a href="https://books.google.com/books?id=2WQP5JGaJOgC&amp;pg=PA316&amp;lpg=PA316&amp;dq=sampling+frequency+for+control+frequency+of+interest+five+times#v=onepage&amp;q=sampling%20frequency%20for%20control%20frequency%20of%20interest%20five%20times&amp;f=false" rel="nofollow noreferrer">sources</a> , <a href="https://books.google.com/books?id=hRtn5ZyViMAC&amp;pg=PA102&amp;lpg=PA102&amp;dq=sampling+frequency+for+control+frequency+of+interest" rel="nofollow noreferrer">say 5-10 times the frequency of interest.</a></p>

<p>Your peak accelerations, from your peak torques and moments, are going to be limited by the mass (moment of inertia) of your limbs. The limbs that limit your accelerations are also going to act as a low-pass filter to keep the system relatively constant between samples such that the fact that you're off by one sample shouldn't matter too much. </p>

<p>Hope this helps!</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7783" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-7783">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7783" class = 'collapse'>
			</div>
				<textarea id = "speech-7783" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7783">
					<img id="start_img-7783" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7783">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>