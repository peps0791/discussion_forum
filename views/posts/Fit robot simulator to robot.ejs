<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Fit robot simulator to robot
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-2580" class = "post">
			<h2>Question</h2>
			<div id="vote-2580" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 102</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Fit robot simulator to robot</h2>
<p>I have odometry data $(x, y, angle)$ of a real two-wheeled robot, who received control commands $(forward speed, angular speed)$.</p>

<p>Now I want to code a motion model (in C++ (/ROS)) which should follow the same trajectory, given the same control commands.</p>

<p>Normally, the kinematics should look something like this:</p>

<p>$$ 
\begin{align} 
v_{fwd} &amp;= control_{fwd} \\
v_{ang} &amp;= control_{ang} \\
x &amp;= x_{old} + 0.5(control_{fwd} + v_{fwd,old}) * \cos(angle) * dt \\
y &amp;= y_{old} + 0.5(control_{fwd} + v_{fwd,old}) * \sin(angle) * dt \\
angle &amp;= angle_{old} + 0.5(control_{ang} + v_{ang,old}) * dt
\end{align} 
$$</p>

<p>And I thought about just setting </p>

<p>$$ 
\begin{align} 
v_{fwd} &amp;= control_{fwd} + k_1 v_{fwd,old} + k_2 v_{fwd,old}^2 + k_3 v_{ang,old} + k_4 v_{ang,old}^2 \\
v_{ang} &amp;= \text{ ...analog...} \\
x, y, angle &amp;\text{ unchanged}
\end{align} 
$$</p>

<p>and then just search the minimum of the squared distance of the computed trajetory to the real one - depending on the values of $k_i$. This would mean either a good optimization algorithm or just brute-forcing / randomly testing a lot of values.</p>

<p>Is this the way to go here? I tried the 2nd approach, but the results so far are not that good. </p>

<p>So, as you might guess now, I'm pretty new at this, so any help is appreciated.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-2580" data-toggle = "popover">
				<p>user name : user3926</p>
				<p> user reputation : 16</p>
				<p class = "tagcontent" id = "usertaginfo-2580">{'kinematics': 3, 'None': 0, 'wheeled-robot': 3, 'algorithm': 3}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-2580">Load Comments</button></br>
			<div id = "commentsection-2580" class = 'collapse'>
			<div id = "comment-5110" class = "comment">
				<p>How great are the error values of wheel slip, and angle inaccuracy? The model could be perfect, but if your real-world errors are high, than the model will deviate strongly from reality, regardless of algorithm, unless this is taken into effect.</p>
			</div>
			</div>
				<textarea id = "speech-2580" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2580">
					<img id="start_img-2580" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2580">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-10513"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10513" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>What are you trying to reach is called "system identification": for given raw data of a real system, a computersimulation has to build with the same behavior. The challange is hard, because the simulation is done on a computer and the computer needs a turing-like program. The program consists of loops, if-then-statements and variables. To automate the generation of such a program is not possible. Nevertheless there is research on this field which is called "model learning". Until now, this research is not good enough for a practical demonstration. The alternative to automatic system identification is to programm the simulation manually. The results are physics-engines like ODE which are used in Gazebo or box2D which is well suited for 2D simulation. It is possible to tune these simulators for fitting to real world by adjustig gravity parameter or damping-values.</p>

<p>A more advanced technique is to build a motion model from scratch. This can be done on a basis of a gui, where the objects are visable and a program which control these objects. A good starting point is the motion model of the Original Post which calculate new x/y value with help of the old value and a sin(angle) addition. The limit of this motion model is that no obstacle is detected. A tutorial for programming a better bouncing ball physics engine in pygame is give <a href="http://www.petercollingridge.co.uk/pygame-physics-simulation" rel="nofollow">here</a>.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10513" data-toggle = "popover">
				<p>user name : Manuel Rodriguez</p>
				<p> user reputation : 463</p>
				<p class = "tagcontent" id = "usertaginfo-10513">{'None': 18, 'motion-planning': 0, 'machine-learning': 1, 'algorithm': 0}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10513">Load Comments</button></br>
			<div id = "commentsection-10513" class = 'collapse'>
			<div id = "comment-18912" class = "comment">
				<p>How on earth is programming a "*bouncing ball physics engine*" an answer to this question?</p>
			</div>
			<div id = "comment-18913" class = "comment">
				<p>@Bending: IMHO a motion model and a physics simulation is the same.</p>
			</div>
			</div>
				<textarea id = "speech-10513" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10513">
					<img id="start_img-10513" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10513">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>