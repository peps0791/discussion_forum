<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Is ROS (Robot Operating System) mandatory?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-7178" class = "post">
			<h2>Question</h2>
			<div id="vote-7178" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">8</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 1224</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Is ROS (Robot Operating System) mandatory?</h2>
<p>Do we have to build ROS for robotic research/application? What is the main advantage? When or in which situations ROS is mandatory?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-7178" data-toggle = "popover">
				<p>user name : acs</p>
				<p> user reputation : 838</p>
				<p class = "tagcontent" id = "usertaginfo-7178">{'stereo-vision': 4, 'control': 1, '3d-printing': 2, 'simulator': 8, 'multi-agent': 0, 'pid': 1, 'slam': 2, 'robotic-arm': 1, 'mobile-robot': 10, 'ros': 8, 'battery': 0, 'swarm': 2, 'cameras': 4, 'lidar': 4, '3d-model': 2, 'imu': 3, 'kalman-filter': 3, 'gazebo': 1, 'gps': 2, 'None': 34, 'localization': 4, 'sensors': 7, '3d-reconstruction': 2, 'quadcopter': 0, 'computer-vision': 2, 'algorithm': 1, 'sensor-fusion': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7178">Load Comments</button></br>
			<div id = "commentsection-7178" class = 'collapse'>
			<div id = "comment-10216" class = "comment">
				<p>I would have written an answer, but I'm typing on a phone. Generally, ROS is not mandatory. In my personal opinion, depending on ROS is even bad. Whatever component you have, make a portable library out of it and then write a ROS module using it. When ROS dies or your requirements change, you would appreciate having done this.</p>
			</div>
			</div>
				<textarea id = "speech-7178" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7178">
					<img id="start_img-7178" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7178">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-7184"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7184" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>"ROS" is a relative term, the APM runs full custom code specifically designed for quadrocopter control where a custom ROS might be desirable to keep from crashing, on the other hand the Navio+ runs on a Linux kernel and runs code other than the autopilot, and still manages to keep from crashing. Most ROSs are really a set of functions on top of an existing OS as opposed to writing an os from the ground up. As with anything, it depends.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7184" data-toggle = "popover">
				<p>user name : Mark Omo</p>
				<p> user reputation : 1786</p>
				<p class = "tagcontent" id = "usertaginfo-7184">{'None': 119}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7184">Load Comments</button></br>
			<div id = "commentsection-7184" class = 'collapse'>
			<div id = "comment-20331" class = "comment">
				<p>He's talking about the RobotOperatingsystem, not RealtimeOperatingSystem...</p>
			</div>
			</div>
				<textarea id = "speech-7184" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7184">
					<img id="start_img-7184" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7184">Comment</button>
			<br><div id = "ans-7220"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7220" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">17</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I'm back to a computer!</p>

<p>Like I said in <a href="https://robotics.stackexchange.com/questions/7178/is-ros-robot-operating-system-mandatory#comment10216_7178">this comment</a>, ROS is generally not mandatory. ROS is one platform among many, famous mostly due to Willow Garage giving away free robots at some point in time to whoever wrote the most ROS modules. That said, it's not the best platform possible, and is certainly nothing overly special. Particularly, the said contest resulted in a lot of low-quality modules just to get the numbers higher.</p>

<p>Over time, the quality of the ROS modules have got better and there are a lot of them as well. Using ROS therefore, you have the benefit of reusing a lot of what's already done. You can read <a href="http://answers.ros.org/question/33811/why-choose-ros/" rel="nofollow noreferrer">here</a> some reasons why you may want to use ROS.</p>

<p>With that in mind, you should look out for the side effects as well.</p>

<h3>Distributed Control</h3>

<p>With ROS, you have many nodes that talk with each other through the network. This is sometimes good and easy, but generally results in a wildly varying delay in reception of messages. As a result, you would have to have a large control delay to make sure all messages arrive, which means you cannot react fast to events, which in turn means you have to move your robot at slower speeds so as not to miss those events.</p>

<p>Believe it or not, people actually do robot control through ROS (<a href="http://moveit.ros.org/" rel="nofollow noreferrer">MoveIt!</a> is the name of the relevant set of components). Slow. Unsafe. But easy!</p>

<h3>Non-Real-time</h3>

<p>Even when not distributed, ROS is not a real-time platform. That means you are at complete discretion of the Linux kernel to schedule your tasks at any time it sees fit. This is ok for some applications, but not ok for others. So you need to look at your own requirements. Do you need to have a <em>guarantee</em> that your task would finish within a known time frame? If so, you need a real-time system.</p>

<h3>Hosted Runtime Environment</h3>

<p>Another point to consider is that, while ROS is a general protocol of communication, it's essentially only supported for hosted environments. <em>Hosted</em> means the code runs on top of a kernel, as opposed to <em>freestanding</em> which means the code directly controls the hardware (e.g., on a microcontroller).</p>

<p>If your robotics application is run close to hardware, and therefore you would require a program that runs on a microcontroller, ROS is of no help to you.</p>

<h3>Platform Lock-in</h3>

<p>Last but not least, developing for ROS results in a platform lock-in. This means that if in the future, for one reason or another, you decide to base your work on another robotic platform, such as OROCOS, YARP, etc, that would be excruciating.</p>

<p>You would also be somewhat locked to Linux. Linux is the best, no doubt, but one day you may end up having to support another system, such as QNX, VxWorks etc, and you would have problems there as well.</p>

<hr>

<p>If you are writing for microcontrollers, then forget about ROS. If you are writing high-level modules, I highly recommend writing portable code. For example, say you have developed a new sensor, and you want to write a module that acquires data from this sensor, which is connected to your computer via the CAN bus.</p>

<p>What you could do in this situation is to write an independent library, with functions that are able to work with your sensor and acquire data. You could even think of spawning a thread in the library that acquires and enqueues data periodically.</p>

<p>Once you have this helper library, you are free to write a CLI, GUI, ROS module, OROCOS module, YARP module, connect to Matlab, or whatever else you want to use to interact with your sensor.</p>

<p>Final note: what I've said here is generally applicable to all robotics platforms and not just ROS.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7220" data-toggle = "popover">
				<p>user name : Shahbaz</p>
				<p> user reputation : 2615</p>
				<p class = "tagcontent" id = "usertaginfo-7220">{'None': 193, 'usb': 12, 'distributed-systems': 7, 'microcontroller': 1, 'embedded-systems': 7, 'servomotor': 1, 'platform': 18, 'can': 1, 'machine-learning': 12, 'real-time': 18, 'mobile-robot': 1, 'rs232': 12, 'software': 20}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7220">Load Comments</button></br>
			<div id = "commentsection-7220" class = 'collapse'>
			<div id = "comment-20442" class = "comment">
				<p>Comments are not for extended discussion; this conversation has been [moved to chat](http://chat.stackexchange.com/rooms/51072/discussion-on-answer-by-shahbaz-is-ros-robot-operating-system-mandatory).</p>
			</div>
			</div>
				<textarea id = "speech-7220" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7220">
					<img id="start_img-7220" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7220">Comment</button>
			<br><div id = "ans-11249"  class = "post">
				<h2>Answer</h2>
			<div id="vote-11249" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Disclaimer:
This answer is somehow a reaction to the Shahbaz' post, so it has a pro-ROS bias. </p>

<p>I do not think that ROS is mandatory, but it is a great starting point and worth the time to invest. It started within Willow Garage, but this company vanished and
ROS is still alive, used and developed. Most of ROS is fully open source and also
commercially usable so there is no way that ROS is just going to vanish if a company is no longer interested in it. 
The code quality of course differs between the core modules and implementations of cutting edge algorithms that some phd student published with his paper. </p>

<p>ROS is picking up more and more speed in industrial settings (I'd be surprised if there is a significant portion of robotics startup worldwide that do not use ROS). 
Some algorithms are going to be further maintained and developed by the ros-industrial consortium and if you have a look at the members, it's a good bet that ROS is going to become a standard in the industry:</p>

<p><a href="http://ROS%20industrial%20consortium">http://rosindustrial.org/ric/current-members/</a></p>

<p>The distributed way of using ROS helps a lot to create and maintain new packages, especially within teams. The message and action definitions help a lot in defining interfaces so that hardware and algorithms can be exchanged quickly. It also helps to integrate new team members as a new node will node bring down other nodes if it crashes (as long as it does not eat all the RAM..) so it's rather safe to integrate partially working nodes into the running system as their effect is limited. The communication uses TCP which is reliable and fast (on a local machine), so that message passing is very quick (several hundred Hz for a control loop is possible). </p>

<p>Non-Real-Time</p>

<p>ROS is currently not realtime as the vast majority of algorithms have no need for realtime. Sensing or planning does not have realtime constraints in most cases (how many people are building self driving high speed cars?). It's enough if the final control loop runs in realtime and this can in many cases be done directly on the motor (to which the final position is send e.g. via CAN). Real Time however is one of the core goals of ROS2 (<a href="https://github.com/ros2/ros2/wiki/Real-Time-Programming" rel="nofollow noreferrer">https://github.com/ros2/ros2/wiki/Real-Time-Programming</a>) so even if you need this in the future for the whole system, ROS has you covered. </p>

<p>If you really want to run stuff embedded, there is of course a connection to arduino, so that you can write ROS messages directly on the arduino which then are send via serial connection. </p>

<p>Running ROS on Windows is currently rather a pain, but as Windows is moving closer to Linux (even starting to have something bash-like), it's only a matter of time until it's possible. (But who wants to run a robot with windows anyway?)</p>

<p>Hardware Interfaces and Algorithms:</p>

<p>I think this really is a strong point for ROS. A lot of commercially available robots already come with a ROS interface or someone already invested some time to implement the interface. Most commercial arms can be used in MoveIt so much of the work to get an application to run with a specific arm can be reused with another hardware. </p>

<p>Community:</p>

<p>Another strong point for ROS. New algorithms get a ROS-interface very quickly and a lot of people had the same problems as you so you will find someone to help you.</p>

<p><a href="http://ROS%20metrics">http://download.ros.org/downloads/metrics/metrics-report-2016-07.pdf</a> </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-11249" data-toggle = "popover">
				<p>user name : FooBar</p>
				<p> user reputation : 578</p>
				<p class = "tagcontent" id = "usertaginfo-11249">{'untagged': 0, 'None': 33, 'laser': 3, 'industrial-robot': 4}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-11249">Load Comments</button></br>
			<div id = "commentsection-11249" class = 'collapse'>
			<div id = "comment-20357" class = "comment">
				<p>Last thing I'd want to see is look back 20 years from now where everything is built around ROS, and realize that, oops, we need robots to work at a human-comparable speed but we can't because 20 years ago we thought _how many people are building self driving high speed cars anyway_?</p>
			</div>
			<div id = "comment-20358" class = "comment">
				<p>I think I have to side with @Shahbaz on this one. It's not that ROS doesn't have its place, it's that you shouldn't be using ROS in lieu of good coding practices. The ROS protocol you make should be derived from an interface library, not the other way around.</p>
			</div>
			</div>
				<textarea id = "speech-11249" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11249">
					<img id="start_img-11249" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11249">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>