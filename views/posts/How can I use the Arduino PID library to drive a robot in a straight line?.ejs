<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How can I use the Arduino PID library to drive a robot in a straight line?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-1232" class = "post">
			<h2>Question</h2>
			<div id="vote-1232" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">16</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 14280</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How can I use the Arduino PID library to drive a robot in a straight line?</h2>
<p>I would like to create an Arduino based robot with 2 wheels, quadrature encoders on each wheel, a H-bridge driver chip (or motor controller) and a caster.  I want to use the PID library to ensure the speed is proportional to the distance to travel.  </p>

<p>At a conceptual level, (assuming the motors do not respond identically to PWM levels) how can I implement the PID control so that it travels in a straight line and at a speed proportional to the distance left to travel? </p>

			</div>
			<div class = "userinfosection"  id = "userinfo-1232" data-toggle = "popover">
				<p>user name : Robert</p>
				<p> user reputation : 206</p>
				<p class = "tagcontent" id = "usertaginfo-1232">{'None': 0, 'encoding': 21, 'driver': 16, 'interrupts': 5, 'arduino': 21, 'pid': 16, 'pwm': 5}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-1232">Load Comments</button></br>
			<div id = "commentsection-1232" class = 'collapse'>
			<div id = "comment-2779" class = "comment">
				<p>This question has its place here as well, since it is specifically based around the [Arduino PID library](http://playground.arduino.cc/Code/PIDLibrary).</p>
			</div>
			</div>
				<textarea id = "speech-1232" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1232">
					<img id="start_img-1232" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1232">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-1233"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1233" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>If you're not using a single axle to drive both wheels, the only solutions I can see are to add either a 3-axis accelerometer or another sensor to detect the orientation of the robot, and adjust the signals to each motor accordingly.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1233" data-toggle = "popover">
				<p>user name : None</p>
				<p> user reputation : NA</p>
				<p class = "tagcontent" id = "usertaginfo-1233">{'control': 0, 'force': 3, 'encoding': 1, 'wheeled-robot': 1, 'legged': 5, 'embedded-systems': 0, 'stability': 5, 'design': 15, 'motor': 3, 'mobile-robot': 3, 'connector': 1, 'h-bridge': 1, 'mrds': 0, 'arduino': 1, 'current': 1, 'kinematics': 0, 'kalman-filter': 8, 'imu': 18, 'irobot-create': 0, 'gyroscope': 1, 'micromouse': 3, 'None': 35, 'power': 16, 'artificial-intelligence': 8, 'driver': 1, 'industrial-robot': 19, 'sensors': 11, 'quadcopter': 7, 'c': 1, 'motion': 1, 'balance': 7, 'servos': 15}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1233" class = 'collapse'>
			</div>
				<textarea id = "speech-1233" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1233">
					<img id="start_img-1233" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1233">Comment</button>
			<br><div id = "ans-1234"  class = "post">
				<h2>Answer</h2>
			<div id="vote-1234" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">17</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><h1>Specifics</h1>

<p>Looking at the <a href="http://playground.arduino.cc//Code/PIDLibaryBasicExample" rel="nofollow noreferrer">PID Basic Example</a> I think that you just need to instantiate two copies of PID controller, one for each wheel, encoder and pwm:</p>

<pre><code>PID leftPID(&amp;InputLeft, &amp;OutputLeft, &amp;SetpointLeft,2,5,1, DIRECT);
PID rightPID(&amp;InputRight, &amp;OutputRight, &amp;SetpointRight,2,5,1, DIRECT);
</code></pre>

<p>Then, in your <code>loop()</code> equivalent, you just read both encoders, pass each encoder value to the relevant <code>PID</code> and finally write out both PWM values.</p>

<p>For now <code>SetpointLeft</code> and <code>SetpointRight</code> can actually point at the same value, but defining them separately like this allows you to add the capability to turn later.</p>

<h1>Concepts</h1>

<p>While this may work for the basic case, whether it is enough really depends on how accurate you need your straight line to be.</p>

<h2><a href="http://en.wikipedia.org/wiki/Dead_reckoning" rel="nofollow noreferrer">Dead reckoning</a></h2>

<p>Given that you have encoders on each wheel, if you run two PID loops and compare each wheels' <a href="http://www.answers.com/topic/following-error" rel="nofollow noreferrer">following error</a>, then you can potentially calculate your maximum <a href="http://en.wikipedia.org/wiki/Abbe_error" rel="nofollow noreferrer">abbe error</a> over the distance, assuming your wheels don't slip. If that error is smaller than your requirements, then <em>dead reckoning</em> is all you need.</p>

<p>If your wheels are prone to slipping however, then you may have hidden following error that your control system can't detect and you will need some way to detect a slip or calculate position independently of your wheel encoders and then use higher level software to correct demanded wheel positions/velocities to maintain a straight line.</p>

<h2>Relative position determination</h2>

<p>As <a href="https://robotics.stackexchange.com/a/1233/37">John suggests</a>, you may be able to use an accelerometer to determine position, but given their accuracy and the effect of accumulated errors over time, you may be better off using the accelerometer data to detect and correct for wheel slippage.</p>

<p>In mobile robotics, <a href="https://robotics.stackexchange.com/questions/tagged/kalman-filter">Kalman filtering</a> techniques are commonly used to fuse the data from multiple sources, such as an accelerometer and the wheel encoders to better determine current position.</p>

<p>Whatever you do with relative position determination however, over time the position you believe yourself to be in <strong>will</strong> drift away from your actual physical position.</p>

<h2>Absolute position determination</h2>

<p>The only way to get around this is to have a reference point outside of your vehicles frame of reference.</p>

<p>A roomba for instance generally uses dead reckoning for moving around a room, but whenever it needs to dock, it looks for a beam of infra-red light sent out by the charging dock. As the roomba randomly moves through that beam, it detects it, locks onto the beam and follows it back to its source. In combination with it's bump sensors, it can position itself accurately on the charging contacts.</p>

<p>For your robot, it might have a home position, where it can move back to and detect that it is at that known location. At that point it knows exactly where it is and can report how far it's calculated position is from it's actual position.</p>

<p>Another option, if you need your robot to travel in a straight line over hundreds of meters would be to switch to a different technique, such as adding an <a href="https://www.sparkfun.com/products/10710" rel="nofollow noreferrer">Arduino GPS shield</a>.</p>

<h2>A combination of techniques</h2>

<p>Ultimately, depending on your accuracy requirements, you may need to use a combination of these techniques.</p>

<p>If a guide beam is possible, you may be able to do what you want very simply with an invisible <a href="https://robotics.stackexchange.com/a/1527/37">line following technique</a>. If you need to move in any arbitrary straight line in an constrained area, then like the roomba you may be able to use a pair of guide beams (at right angles to each other) to allow you to correct your synthesised position in one Cartesian axis every time the robot passes one of the beams.</p>

<p>There are lots of options here, and what you chose will depend on what you need.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-1234" data-toggle = "popover">
				<p>user name : Mark Booth</p>
				<p> user reputation : 3037</p>
				<p class = "tagcontent" id = "usertaginfo-1234">{'control': 7, 'quadcopter': 2, 'None': 258, 'tuning': 7, 'uav': 2, 'design': 2, 'stepper-motor': 7}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-1234" class = 'collapse'>
			</div>
				<textarea id = "speech-1234" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-1234">
					<img id="start_img-1234" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-1234">Comment</button>
			<br><div id = "ans-5274"  class = "post">
				<h2>Answer</h2>
			<div id="vote-5274" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>As said above, you start out by telling each wheel to move at the same speed and then the PID makes sure they are running at that speed.  But this will NOT be perfect.  You need to keep checking for and correcting errors   (1) periodically read and compare the two wheel encoder counts and make one wheel go slightly faster if needed to get the counts equal. and (2) encoders NEVER are perfect you you need an accelerometer and a compass.</p>

<p>You are looking at a Kalman filter.  if you want to combine encoder, compass and accelerometer data to give you the heading.  </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-5274" data-toggle = "popover">
				<p>user name : user3150208</p>
				<p> user reputation : 431</p>
				<p class = "tagcontent" id = "usertaginfo-5274">{'None': 27}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-5274" class = 'collapse'>
			</div>
				<textarea id = "speech-5274" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-5274">
					<img id="start_img-5274" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-5274">Comment</button>
			<br><div id = "ans-7179"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7179" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>This <a href="http://arduino.net.ua/upload/information_system_8/1/3/1/item_131/information_items_property_171.pdf" rel="nofollow">link</a> gives a good example without two PID calculation. Also you can implement imu/compass to measure straight path</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7179" data-toggle = "popover">
				<p>user name : acs</p>
				<p> user reputation : 838</p>
				<p class = "tagcontent" id = "usertaginfo-7179">{'stereo-vision': 4, 'control': 1, '3d-printing': 2, 'simulator': 8, 'multi-agent': 0, 'pid': 1, 'slam': 2, 'robotic-arm': 1, 'mobile-robot': 10, 'ros': 8, 'battery': 0, 'swarm': 2, 'cameras': 4, 'lidar': 4, '3d-model': 2, 'imu': 3, 'kalman-filter': 3, 'gazebo': 1, 'gps': 2, 'None': 34, 'localization': 4, 'sensors': 7, '3d-reconstruction': 2, 'quadcopter': 0, 'computer-vision': 2, 'algorithm': 1, 'sensor-fusion': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7179" class = 'collapse'>
			</div>
				<textarea id = "speech-7179" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7179">
					<img id="start_img-7179" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7179">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>