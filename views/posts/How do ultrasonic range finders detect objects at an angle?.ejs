<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>How do ultrasonic range finders detect objects at an angle?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-2341" class = "post">
			<h2>Question</h2>
			<div id="vote-2341" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 4000</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>How do ultrasonic range finders detect objects at an angle?</h2>
<p>As far as I can tell, an ultrasonic rangefinder works by reflecting inaudible soundwaves off of objects and timing their return.  But if the object has a flat surface and is angled with respect to the line to the rangefinder, how does it detect that object?  Under what circumstances might it give a false distance or otherwise fail to detect the object?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-2341" data-toggle = "popover">
				<p>user name : Paul</p>
				<p> user reputation : 704</p>
				<p class = "tagcontent" id = "usertaginfo-2341">{'control': 6, 'occupancygrid': 1, 'pid': 3, 'slam': 14, 'design': 0, 'motor': 5, 'dynamics': 11, 'probability': 1, 'accelerometer': 4, 'mechanism': 3, 'differential-drive': 1, 'kalman-filter': 6, 'actuator': 1, 'reference-request': 8, 'None': 30, 'inverse-kinematics': 3, 'mapping': 1, 'sensors': 10, 'quadcopter': 4, 'motion': 3, 'particle-filter': 4, 'sonar': 4, 'balance': 12, 'automatic': 2}</p>
			</div><br>
			<br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-2341" class = 'collapse'>
			</div>
				<textarea id = "speech-2341" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2341">
					<img id="start_img-2341" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2341">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-2346"  class = "post">
				<h2>Answer</h2>
			<div id="vote-2346" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">7</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The sound beam is not traveling in a straight line but is leaving the range finder is a multi-lobed pattern. <img src="https://i.stack.imgur.com/ymsh0.png" alt="M. Drumheller - Mobile robot localization using sonar"></p>

<p>Of course we are interested in the main lobe. When the sound wave hits an object, it is reflected in various directions. So some of that energy returns to the sensor and triggers it, therefore measuring the distance. Reflection depends on the material and the shape of the object as well as the angle with respect to the centerline of the range finder. As you pointed out, if this angle is large enough the reported distance will be off, as shown in the following figure
<img src="https://i.stack.imgur.com/uNedF.png" alt="M. Drumheller - Mobile robot localization using sonar"></p>

<p>Both figures are from the paper "M. Drumheller - Mobile robot localization using sonar (1987)"</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-2346" data-toggle = "popover">
				<p>user name : Demetris</p>
				<p> user reputation : 414</p>
				<p class = "tagcontent" id = "usertaginfo-2346">{'None': 24}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-2346">Load Comments</button></br>
			<div id = "commentsection-2346" class = 'collapse'>
			<div id = "comment-4572" class = "comment">
				<p>Is there any way to compensate for angle even if it is unknown (e.g. kalman filter)?</p>
			</div>
			<div id = "comment-4573" class = "comment">
				<p>Kalman filters involve pairing readings from two different sensors together.  Used in localization, they pair the reading from GPS with the dead reckoning.  The idea is that the relatively large inaccuracy of GPS never grows, but the inaccuracy of dead reckoning is small at first and then grows with things like slippage.

In your case, it might be possible to combine the sonar with another distance sensor like an IR range sensor.</p>
			</div>
			<div id = "comment-4574" class = "comment">
				<p>My other suggestion would be to measure the angle (shown as beta above) of the main lobe, then use multiple readings in a scan to find the shape of the object you scanned.  Be aware that in the small angle of the scan where the centerline and the edgeline of the lobe are roughly equilateral, your scan will give funny results.</p>
			</div>
			<div id = "comment-4583" class = "comment">
				<p>@Paul Presumably the signature of the echo will vary so if you have more information you may be able to do better than the diagram above.  The diagram seems to assume the simplest range meter that trips on the edge of the echo and does not do any other analysis.</p>
			</div>
			</div>
				<textarea id = "speech-2346" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-2346">
					<img id="start_img-2346" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-2346">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>