<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Motor Controller Configuration
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-11187" class = "post">
			<h2>Question</h2>
			<div id="vote-11187" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 73</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Motor Controller Configuration</h2>
<p>With a group of students we are building an exoskeleton for paraplegics. I am part of the Software &amp; Control department and we are designing the motor controller configuration. We have several requirements:</p>

<ul>
<li>Size is one of our main requirements. We want the Exoskeleton to be
as slim as possible, so this is true for all the components as well.
We want the motor controller to be as small as possible. </li>
<li>The motor controller has to work with a brushless DC motor</li>
<li>A setpoint will be sent from a microcontroller to the motor
controller Two or three absolute encoders need to be connected,
this depends on the design of the joint. 
**We are either going to
use position or torque control 
<em>We need one encoder for the motor
angle, and one for the joint angle. We might implement Series
Elastic Actuation in our joint and then we want to be able to
measure the deflection in the spring and thus need two encoders
for that.</em></li>
<li>A continuous power output in the range of 700 - 1200 Watt</li>
</ul>

<p>While exploring several off-the-shelf possibilities, we came accross the  <a href="http://www.elmomc.com/products/gold-twitter-servo-drive.htm" rel="nofollow noreferrer" title="Elmo Gold Twitter">Elmo Gold Twitter</a> and the IOMI Pro. One of the problems of these boards, is the amount of absolute encoders that can be connected. Both the Elmo and the IOMI board can either have 1 or no absolute encoders connected.</p>

<p>We came op with a solution, so that we are able to connect multiple encoders. In our exoskeleton we are going to use an EtherCAT Master-Slave configuration. The High-Level control (e.g. state-machine) is on the EtherCAT Master and sends joint angle setpoints. Our idea is to use a EtherCAT Slave as a sort of second controller, which gets the joint setpoint and the joint encoder values, calculates the motor setpoint and sends this out to a certain off-the-shelf controller like the Elmo Gold Twitter or the IOMI Pro. </p>

<p><a href="https://i.stack.imgur.com/XA1nv.jpg" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/XA1nv.jpg" alt="Configuration"></a></p>

<p>My question is the following: Is this even a good solution? And what are other solution to this problem? Are there even better alternatives for a motor controller? Might it be a better idea to build and program your own motor controller? (please bare in mind that we have limited experience in that area)</p>

<p>I thank you all in advance for your reply!</p>

<p>Cheers!</p>

<p>Nathan</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-11187" data-toggle = "popover">
				<p>user name : ProjectM</p>
				<p> user reputation : 30</p>
				<p class = "tagcontent" id = "usertaginfo-11187">{'control': 5, 'current': 1, 'None': 0, 'microcontroller': 0, 'brushless-motor': 1, 'motor': 0, 'sensors': 4}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-11187">Load Comments</button></br>
			<div id = "commentsection-11187" class = 'collapse'>
			<div id = "comment-20222" class = "comment">
				<p>Why do you want to connect multiple encoders to a motor controller? A motor controller actuates one motor and reads feedback from one encoder to close the control loop. Having multiple encoders for one control loop doesn't make much sense. Please elaborate.</p>
			</div>
			<div id = "comment-20404" class = "comment">
				<p>We use brushless DC motors due to their high power density. The problem is that you need to tell to these kind of motors which coils need to be turned on, and which have to be turned off (the task which the brushes perform in a brushed DC motor). Thus there are two control loops: joint position, motor coils. The motor coil control is also often performed using hall sensors.</p>
			</div>
			</div>
				<textarea id = "speech-11187" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11187">
					<img id="start_img-11187" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11187">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-11189"  class = "post">
				<h2>Answer</h2>
			<div id="vote-11189" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><ul>
<li>Is this even a good solution? </li>
</ul>

<p>That depends on what you call good. I would certainly make sure that you can justify the role of each component in the system. Why do you need some many encoders if current exoskeletons do just fine with less?
In order to decide if your solution is good or not, you should have  clear list of requirements (e.g. required torques, velocities, resolution, price, etc.) including also functional requirements (elasticity of joints, etc.) If all requirments are satisfied, your solution is good. </p>

<p>For possible improvements, I would advise you to define each control loop you plan to have and make sure that you have the required amount of sensors and controllers to implement it. By required amount I mean no less then necesary but also no more then necesary. Each sensor you use should participate in (at lease one) a control loop and you have to be sure that the sensor is not measureing a parameter which can be easily calculated from a different sensor with the required precision. Also consider the latencys on the bus system you plan to imlement in your control loops and decide if they are acceptanble. The main idea would be to use as few components as possible, so you should be able to answer the question "Why can't the task of this component be done by an already existing one?" for each component in you schematic.</p>

<ul>
<li>And what are other solution to this problem? </li>
</ul>

<p>When you combine mechanics, electronics and software, there are probably an infinity of possible solutions to a problem. You can consider diffferent actuation types, differetn motor types, differen communication systems, etc. </p>

<ul>
<li>Might it be a better idea to build and program your own motor controller?</li>
</ul>

<p>If plan to use industrial communication protocols (such as EtherCAt, or ProfiNet) I would advise against doing your own controller If using i2c for example is an option and this is a controls assignment (not a systems assignment), I would advise you to definetly make your own controllers. It might not work perfectly (it might not even work) but the amount you learn by programming your own controller is worth far more then buying one. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-11189" data-toggle = "popover">
				<p>user name : 50k4</p>
				<p> user reputation : 2800</p>
				<p class = "tagcontent" id = "usertaginfo-11189">{'geometry': 0, 'None': 193, 'kinematics': 0, 'robotic-arm': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-11189" class = 'collapse'>
			</div>
				<textarea id = "speech-11189" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11189">
					<img id="start_img-11189" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11189">Comment</button>
			<br><div id = "ans-11190"  class = "post">
				<h2>Answer</h2>
			<div id="vote-11190" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>"My question is the following"</p>

<blockquote>
  <p>Is this even a good solution?</p>
</blockquote>

<p>No, not really. As <a href="https://robotics.stackexchange.com/questions/11187/motor-controller-configuration#comment20222_11187">BendingUnit22 mentions</a>, a motor controller... controls <strong>a</strong> motor. One motor. The biggest problem I see with this is that you've got the EtherCAT slave on the feedback line, trying to do signal processing, instead of piping the feedback directly to the motor controller. </p>

<p>The motor controller is setup for one motor. Use one motor controller for each motor you want to use. </p>

<blockquote>
  <p>What are other solutions to this problem? </p>
</blockquote>

<p>Open-ended design problems are off-topic (you could join us in <a href="http://chat.stackexchange.com/rooms/6221/asimovs-corner">Robotics Chat</a> and ask there if you like). That said, you haven't mentioned how you are converting from a brushless DC motor to the joint, but I'm going to guess you've got some kind of <em>fixed</em> gearing between the motor and the joint. </p>

<p>Your options there are to either put an encoder on the joint and do processing on the feedback signal to convert to motor units (as you've depicted), <strong>or</strong> you could put the encoder on the <em>motor</em> and do processing on the reference signal to convert the desired joint angle to motor units. My preference, personally speaking, would be to put the encoder on the motor. This means that all of your processing (converting between joint/motor units) is done <em>before</em> the motor-control loop. Processing introduces delays and those delays (negatively) affect control. </p>

<p>Something to think about, but I'm not going to speculate on your options here beyond pointing that out. You can leverage the knowledge of the fixed gearing between motor and joint to quickly scale desired joint angles to desired motor units and vice-versa, depending on where you want to put the encoder. I believe most BLDC motors come with encoders already, though generally not absolute encoders, which you would need.</p>

<blockquote>
  <p>Are there even better alternatives for a motor controller?</p>
</blockquote>

<p>Terms like "good" and "better" are for <em>you</em> to decide; they have no quantifiable meaning on their own. Once you set a list of specifications, you can rank options by how well they meet or exceed each of the items on your list of specifications. If you can rank your specifications then it should become obvious that some options are "better" <strong>for your application</strong> than others, but again that's all dependent on the <em>list of specifications that</em> you <em>generate</em>. </p>

<p>I'll add here that I think a lot of people put cost as a specification, which is generally advisable, but they put too much emphasis on it. What matters more to you, cost or quality documentation? Cost or that the motor utilizes industry standards (NEMA bolt patterns, standard shaft sizing, reasonable power interface)? Cost or supplier's return policy? Cost or availability?</p>

<p>What good is a cheap motor when you can't bolt it to any standard accessories or gearboxes? What good is a cheap motor that arrives DOA and then you can't exchange it, or when the exchange process takes 3 months? </p>

<p>I ask because these are all (absolutely colossal) problems I've <em>actually faced</em> on academic design projects. Some of these oversights nearly killed a couple (<em>graded</em>) projects I worked on.</p>

<blockquote>
  <p>Might it be a better idea to build and program your own motor controller? </p>
</blockquote>

<p>Generally speaking, yeah, I think that's a great project. Unfortunately for you, that's not the project <em>you're supposed to be working on</em>. You stated that you're part of the software and control department. The other people on this project are counting on you to get a motor controller done and programmed so the other teams can get their portion of the project completed. </p>

<p>A frame that can't be actuated doesn't help anyone and looks bad on everyone. </p>

<p>If this was your own pet project, then I'd say go for it, but <em>because you're working in a team environment</em>, where there are <em>other people depending on you to complete your work in a timely manner</em>, I'd say save that project for when you have time and try to find an off-the-shelf product that meets your needs for now. </p>

<p>If your teams are big enough you might be able to split this project off for yourself, <strong>after</strong> you help acquire at least passable motor controllers. The problem with designing your own is that you need to:</p>

<ol>
<li>Interface with the motor encoder, in all the formats the commercial motor controller could (or, at a bare minimum, in all the formats for the encoders you're using).</li>
<li>Design the schematic for the power electronics capable of providing 1.2kW.</li>
<li>Design the PCB for the schematic, including layout and trace size. 1.2kW isn't "high power" by any means, but it's enough that you're likely to blow up a couple boards before you get the design right. </li>
<li>Design the housing/mount footprint for the completed circuit. </li>
<li>Actually assemble and solder the PCB.</li>
<li>Program the PCB, including the packet processing for EtherCAT if you go that route, the input processing and conditioning for the encoder feedbacks, and then the actual control algorithm for the motor speed control.</li>
</ol>

<p>This might "only" be a couple weeks of working full time, but there's generally a couple weeks of down time between completing the PCB design and receiving the boards, and like I mentioned I would be money you'll blow at least one board. You have to have everything perfect; all the component datasheets read correctly, transcribed to schematics correctly, transcribed to PCB correctly, components placed correctly, and then soldered correctly, and then programmed correctly, for the thing to work. </p>

<p>If you blow a board because you didn't place or solder or program something correctly, then you're out the turnaround time on the replacement parts. </p>

<p>If you blow a board because you didn't get the schematic right, then you're out the turnaround time on replacement boards, which again is probably a couple weeks. </p>

<p>How do you know the difference between blown by bad schematic and blown by bad construction? Good question. That'll probably take at least a week or two. </p>

<p><em>And the whole time, the rest of the project is stalled while everyone else on the team waits for the motor controllers.</em> </p>

<p>You stated you or your team ("we") don't have much experience in that area. I don't know how you were thinking you might build and test your own motor controller circuit, but a breadboard is absolutely out of the question. Breadboards can only handle 0.5 to 1 Amp max, so whatever circuit you're testing with one is certainly not a 1.2kW motor controller, or even a 700W motor controller.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-11190" data-toggle = "popover">
				<p>user name : Chuck</p>
				<p> user reputation : 8534</p>
				<p class = "tagcontent" id = "usertaginfo-11190">{'actuator': 7, 'None': 616, 'dynamics': 7, 'joint': 7}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-11190">Load Comments</button></br>
			<div id = "commentsection-11190" class = 'collapse'>
			<div id = "comment-20401" class = "comment">
				<p>Thanks a lot for your in-depth advice. I agree that designing our own motor controller might be too dangerous if it is our only option, if we don't finish it in time (which can happen due to lack of experience), it might block the entire project.</p>
			</div>
			<div id = "comment-20402" class = "comment">
				<p>We will indeed place a transmission between the motor and joint, with a ratio of ~100. I think the problem will be with using only one absolute encoder placed at the motor side, is that we still don't know the absolute position of the joint, because the absolute motor encoder will not count the rotations while being turned off, this we would need to recalibrate each time the system is turned on again.</p>
			</div>
			<div id = "comment-20403" class = "comment">
				<p>The solution of placing just an absolute encoder at the joint does sounds interesting, the only problem we see here is that small errors in the joint encoder reading and noise caused by backlash and bending, may result in very large errors at the motor side, since it is multiplied by the transmission ratio.

We are now considering another motor controller option which can handle two absolute encoders. Once we get things working, we can still have a look at different encoder setups which might make the overall design smaller, but it feels to dangerous to do this now already.</p>
			</div>
			</div>
				<textarea id = "speech-11190" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-11190">
					<img id="start_img-11190" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-11190">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>