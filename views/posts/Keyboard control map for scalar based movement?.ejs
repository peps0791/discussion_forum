<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Keyboard control map for scalar based movement?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-19" class = "post">
			<h2>Question</h2>
			<div id="vote-19" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">7</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 53</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Keyboard control map for scalar based movement?</h2>
<p>I'm working with a Wild Thumper 6 wheel chasis that is designed for use with an RC controller. However I'd like to have a mapping to a keyboard for control as well. Can you suggest a set of keys and behaviors that you've used to deal with the continuous value control normally offered by a joystick or pair of joysticks? The standard wasd keys + an accelerate/decelerate pair? I'd also take a pointer to a videogame that you think does this well.</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-19" data-toggle = "popover">
				<p>user name : Ian Danforth</p>
				<p> user reputation : 191</p>
				<p class = "tagcontent" id = "usertaginfo-19">{'untagged': 7, 'None': 5, 'errors': -2}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-19">Load Comments</button></br>
			<div id = "commentsection-19" class = 'collapse'>
			<div id = "comment-43" class = "comment">
				<p>Left Shift for accelerate and left Ctrl for deccelerate might work.</p>
			</div>
			<div id = "comment-4530" class = "comment">
				<p>There is some bug on this site, so I can't post answer... In my project I use WADS, W and S controlling linear velocity with constant acceleration up to maximum, A and D controling angular velocity with constant acceleration, again up to a maximal value. Basically I simulate slowly moving a joystick with the keyboard. You could also not use constant acceleration, but constant jerk, if you need smoother control. Also if your robot is a car, or you want it to behave more like one, you could set the A and D keys to control turn radius instead of angular velocity.</p>
			</div>
			</div>
				<textarea id = "speech-19" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-19">
					<img id="start_img-19" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-19">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-28"  class = "post">
				<h2>Answer</h2>
			<div id="vote-28" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Assuming you don't have other functionality that would take precedence, I would use WASD for movement and Left/Right arrows or mouse buttons for accelerating. Having the controls be divided that way mimics the conventional movement/action interface seen in many video games, while letting the user control the speed in parallel to motion.</p>

<p>However, ultimately, the right answer is whatever is most comfortable/intuitive. The above is what I'd try first, but the real best answer is getting user feedback.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-28" data-toggle = "popover">
				<p>user name : rsegal</p>
				<p> user reputation : 231</p>
				<p class = "tagcontent" id = "usertaginfo-28">{'kinect': 2, 'None': 12, 'ros': 2, 'openni': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-28">Load Comments</button></br>
			<div id = "commentsection-28" class = 'collapse'>
			<div id = "comment-120" class = "comment">
				<p>+1 for WASD. It's what I would have said.</p>
			</div>
			</div>
				<textarea id = "speech-28" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-28">
					<img id="start_img-28" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-28">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>