<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Calculating acceleration and velocity
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "reward_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-6882" class = "post">
			<h2>Question</h2>
			<div id="vote-6882" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 1685</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Calculating acceleration and velocity</h2>
<p>I'm writing some Quad Copter software and beginning to implement an altitude hold mode. </p>

<p>To enable me to do this I need to get an accurate reading for vertical velocity. I plan to use a Kalman filter for this but first I need to ensure that I'm getting the correct velocity from each individual sensor.</p>

<p>I have done this but I'm not 100% sure its correct so I was hoping to get some confirmation on here.</p>

<p>My first sensor is a Lidar distance sensor, I calculated acceleration and velocity using the following code:</p>

<pre><code>float LidarLitePwm::getDisplacement()
{
    int currentAltitude = read();
    float displacement = currentAltitude - _oldAltitude;
    _oldAltitude = currentAltitude;

    return displacement; //cm
}

//Time since last update
float time = (1.0 / ((float)FLIGHT_CONTROLLER_FREQUENCY / 10.00)); // 50Hz, 0.02s

float lidarDisplacement = _lidar-&gt;getDisplacement();
_currentLidarVelocity = lidarDisplacement / time;
</code></pre>

<p>The second sensor is an accelerometer. I calculated acceleration and velocity using the following code:</p>

<pre><code>Imu::Acceleration Imu::getAcceleration()
{
    //Get quaternion
    float q[4];
    _freeImu.getQ(q);

    //Get raw data
    float values[9];
    _freeImu.getValues(values);

    //Extract accelerometer data
    float acc[3];
    acc[0]= values[0]; //x
    acc[1]= values[1]; //y
    acc[2]= values[2]; //z

    //Gravity compensate
    _freeImu.gravityCompensateAcc(acc, q);

    //Convert acceleration from G to cm/s/s
    _acceleration.x = acc[0] * 9.8 * 100;
    _acceleration.y = acc[1] * 9.8 * 100;
    _acceleration.z = acc[1] * 9.8 * 100;

    return _acceleration; //cm/s/s
}

//Time since last update
float time = (1.0 / ((float)FLIGHT_CONTROLLER_FREQUENCY / 10.00)); // 50Hz, 0.02s

//Get accel
Imu::Acceleration imuAcceleration = _imu-&gt;getAcceleration();

//Get velocity
currentZVelocity += imuAcceleration.z * time; //cm/s
</code></pre>

<p>It would be great if someone could confirm if this is correct (or not)</p>

<p>Thanks
Joe</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-6882" data-toggle = "popover">
				<p>user name : Joseph Roberts</p>
				<p> user reputation : 167</p>
				<p class = "tagcontent" id = "usertaginfo-6882">{'quadcopter': 6, 'magnetometer': 1, 'None': 2, 'accelerometer': 2, 'calibration': 1, 'pid': 5, 'lidar': 2, 'esc': 5, 'motor': 5, 'imu': 1, 'sensors': 2, 'pwm': 5}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-6882">Load Comments</button></br>
			<div id = "commentsection-6882" class = 'collapse'>
			<div id = "comment-9849" class = "comment">
				<p>Just out of curiosity, why do you need these values? If you want to hold altitude you'd only need to know the distance to the ground. I'm pretty sure you could build a PID controller that tries to hold d constant without specifically knowing your v or a. Or rather, those values would be implicitly calculated in the PID as a result of the tuning algorithm.</p>
			</div>
			<div id = "comment-9850" class = "comment">
				<p>If I only wanted to hold an attitude then yeah it works OK with only one PID although it oscillates up/down about 30cm and I can't get it tuned out. However I want to be able to move up and down at a certain velocity, this means I need two sets of PID loops, one PID for altitude and one for velocity. Then you override the altitude PID outputs with a vertical velocity from the operator and feed this into the velocity PID's when the quadcopter should be changing altitude.</p>
			</div>
			<div id = "comment-9852" class = "comment">
				<p>If your PID for keeping altitude does oscillate, then don't expect to get better results with PID's working with speed and acceleration feedback. That being said, you can still use just the first PID by properly varying the altitude reference in a tracking setting: a varying altitude set-point incorporates the notion of velocity so as acceleration. Then, if the PID is tuned for tracking, your quad will follow position, velocity and - to a certain extent acceleration - as well, all at once.</p>
			</div>
			<div id = "comment-9853" class = "comment">
				<p>Further, the way you compute velocity and acceleration is a bit naive and you'll end up with very noisy estimates of those physical quantities. Either you've got to move to more sophisticated techniques (Kalman, SG filter ...) or - again - go back to the suggestions above.</p>
			</div>
			<div id = "comment-9854" class = "comment">
				<p>Hi Ugo, I was hoping having two PID's would improve things as that is how I did my stabilisation PID's (one for angular rate of change and one for angle), this would be set up the same way (one pid for vertical rate of change and one for altitude). Another reason is that I want to do auto take off and landing and I found that when I enable my altitude PID to take off it does not work well and very suddenly increases the throttle because the PID output is biased at 0.5 to make it oscillate around hovering power.</p>
			</div>
			<div id = "comment-9855" class = "comment">
				<p>Regards to your second comment I am putting the velocity from my IMU and distance sensor into a kalman filter to calculate a single reliable velocity. Is this the correct way or should I be filtering my raw output first and then converting to velocity? Once I have the filter working with velocity I am going to add in a position vector and some other sensors (GPS, barometer)</p>
			</div>
			<div id = "comment-9857" class = "comment">
				<p>First, what is the diagram of your 2-PIDs scheme for the attitude? One inner loop for angular rate and one outer loop for angle? That's indeed a common approach when the inner loop can be provided with good estimate of rate/velocity. The gyro does provide it (it's a sensor specifically designed for that), whereas the way you compute altitude speed does not. That's the key point. With a single position PID, how do you change the set-point? Abruptly? You have to rather perform the so called input-shaping stage.</p>
			</div>
			<div id = "comment-9858" class = "comment">
				<p>Second, you want to employ Kalman for sensor fusion but it's unlikely you'll get nice results weighting two poor estimates. Conversely, you could employ Kalman as an observer, knowing the dynamic equations of your system: they're pretty much known for a quad I'd say, even though you'd need to identify the relevant parameters (or do it online). You can thus observe the "hidden" altitude velocity of your quad by measuring its current height. Alternatively, you can make use of online least-squares regression ([Savitzky Golay](http://en.wikipedia.org/wiki/Savitzky%E2%80%93Golay_filter) filter).</p>
			</div>
			</div>
				<textarea id = "speech-6882" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6882">
					<img id="start_img-6882" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6882">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-6889"  class = "post">
				<h2>Answer</h2>
			<div id="vote-6889" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">2</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I noticed a weird thing in your code -- It looks like you are calculating a first derivative of something labeled altitude in <code>LidarLitePwm::getAcceleration()</code> (which would be velocity, and not acceleration) and later integrating it to get something labeled velocity and (which would in fact be altitude).</p>

<p>So either your variable and method names are wrong, or you are missing one more derivative in <code>LidarLitePwm::getAcceleration()</code>. Also it is a litle weird that you are using the <code>time</code> when integrating acceleration and not when differentiating it. It should be the same in both directions. If you include the time in seconds, your units will be cm/s/s as stated in the comments, if you don't they will be cm/tick/tick.  </p>

<p>Since it seems that you want to reach velocity as the final product anyway, I would skip calculating the accelerations, rename <code>LidarLitePwm::getAcceleration()</code> to <code>LidarLitePwm::getVelocity()</code> and change it to something like this:</p>

<pre><code>float LidarLitePwm::getVelocity(float time)
{
    int currentAltitude = read();
    float velocity = (currentAltitude - _oldAltitude) / time;
    _oldAltitude = currentAltitude;

    return velocity; //cm/s/s
}
</code></pre>

<p>... all this assuming that the <code>read()</code> function returns distance from ground in cm.</p>

<p>The accelerometer stuff seems ok.</p>

<p>Btw if you are holding altitude with PID don't you need the altitude rather than velocity?</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-6889" data-toggle = "popover">
				<p>user name : cube</p>
				<p> user reputation : 567</p>
				<p class = "tagcontent" id = "usertaginfo-6889">{'control': 2, 'None': 31, 'wifi': 2, 'kalman-filter': 3, 'calibration': 3, 'geometry': 0, 'localization': 2, 'c': 1, 'avr': 1, 'robotic-arm': 0, 'brushless-motor': 2, 'differential-drive': 2, 'esc': 1, 'motor': 2, 'mobile-robot': 2}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-6889">Load Comments</button></br>
			<div id = "commentsection-6889" class = 'collapse'>
			<div id = "comment-9856" class = "comment">
				<p>Thanks, you are right about the lidar stuff, I have updated the question to reflect this. Im holding altitude using 2 PID's. Once for altitude and one for rate of vertical change. I have got the altitude already from the lidar sensor and also from a barometer and GPS.</p>
			</div>
			</div>
				<textarea id = "speech-6889" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6889">
					<img id="start_img-6889" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6889">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		$("#reward_tool").load("/reward_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>