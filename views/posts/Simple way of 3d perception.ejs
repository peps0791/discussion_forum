<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Simple way of 3d perception
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-7016" class = "post">
			<h2>Question</h2>
			<div id="vote-7016" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 133</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Simple way of 3d perception</h2>
<p>I wonder is there any <strong>simple (can be computed in microcontroller level)</strong> option which is suitable for <strong>3d object perception</strong> (depth, position, pose or coordinate estimation) of flying robots except <em>LIDAR, stereovision, omnidirectional camera, laser scanner</em> or any other machine vision based techniques </p>

			</div>
			<div class = "userinfosection"  id = "userinfo-7016" data-toggle = "popover">
				<p>user name : acs</p>
				<p> user reputation : 838</p>
				<p class = "tagcontent" id = "usertaginfo-7016">{'stereo-vision': 4, 'control': 1, '3d-printing': 2, 'simulator': 8, 'multi-agent': 0, 'pid': 1, 'slam': 2, 'robotic-arm': 1, 'mobile-robot': 10, 'ros': 8, 'battery': 0, 'swarm': 2, 'cameras': 4, 'lidar': 4, '3d-model': 2, 'imu': 3, 'kalman-filter': 3, 'gazebo': 1, 'gps': 2, 'None': 34, 'localization': 4, 'sensors': 7, '3d-reconstruction': 2, 'quadcopter': 0, 'computer-vision': 2, 'algorithm': 1, 'sensor-fusion': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-7016">Load Comments</button></br>
			<div id = "commentsection-7016" class = 'collapse'>
			<div id = "comment-9992" class = "comment">
				<p>You could use SONAR or RADAR technologies but the processing power required for any acceptable resolution is prohibitive, there's a reason the technologies you've excluded are most commonly used - they're the cheapest/easiest to implement.</p>
			</div>
			<div id = "comment-9999" class = "comment">
				<p>Thanks. Excluded techniques have good results but if we want to make swarm robot applications this methods brings software and hardware costs. I just wonder is there any cheap alternative.</p>
			</div>
			</div>
				<textarea id = "speech-7016" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7016">
					<img id="start_img-7016" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7016">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-7041"  class = "post">
				<h2>Answer</h2>
			<div id="vote-7041" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>The best answer is probably going to be an ultrasonic sensor on a servo, you can get them in a huge range of values, from very close to very far range depending on your application, and varying beam widths depending on your accuracy needs. If you need more than 255 steps you could go with a motor and a encoder but that will be slightly more complex. </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-7041" data-toggle = "popover">
				<p>user name : Mark Omo</p>
				<p> user reputation : 1786</p>
				<p class = "tagcontent" id = "usertaginfo-7041">{'None': 119}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-7041" class = 'collapse'>
			</div>
				<textarea id = "speech-7041" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-7041">
					<img id="start_img-7041" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-7041">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>