<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Can a robot or mechanical part be programmed to exert a specific force
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-10190" class = "post">
			<h2>Question</h2>
			<div id="vote-10190" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 51</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Can a robot or mechanical part be programmed to exert a specific force</h2>
<p>So I was thinking about projectiles that don't need a propellant like gunpowder I've seen coils gun but that's a little out my way. I was wondering if I know the force required to propel a object could I program a robot to exert that force to propel the object the same way (in a linear propelled fashion).</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-10190" data-toggle = "popover">
				<p>user name : Matt</p>
				<p> user reputation : 1</p>
				<p class = "tagcontent" id = "usertaginfo-10190">{'force-sensor': 0, 'None': 0}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10190">Load Comments</button></br>
			<div id = "commentsection-10190" class = 'collapse'>
			<div id = "comment-18140" class = "comment">
				<p>https://www.youtube.com/watch?v=LAtdsDTt__s</p>
			</div>
			</div>
				<textarea id = "speech-10190" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10190">
					<img id="start_img-10190" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10190">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-10191"  class = "post">
				<h2>Answer</h2>
			<div id="vote-10191" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Yes you can. People built <a href="https://en.m.wikipedia.org/wiki/Trebuchet" rel="nofollow">robots doing exactly that</a> for several hundred years.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-10191" data-toggle = "popover">
				<p>user name : Bending Unit 22</p>
				<p> user reputation : 1335</p>
				<p class = "tagcontent" id = "usertaginfo-10191">{'None': 93}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-10191">Load Comments</button></br>
			<div id = "commentsection-10191" class = 'collapse'>
			<div id = "comment-18148" class = "comment">
				<p>In what way is a trebuchet programmed to apply a specific force (as opposed to range and loft being adjusted by providing force for longer or shorter time or the same force applied to a greater or lesser mass)?</p>
			</div>
			<div id = "comment-18156" class = "comment">
				<p>@PeteKirkham I'm not sure if I understand you correctly, the specificness of the force **is** the duration, amount and direction it is applied to the projectile. The trebuchet can be programmed by changing the counterweight, sling length, its base (wheeled or not), arm length, projectile weight, etc...most of it happens in some cruel mix of templates and macros that is commonly referred to as "mechanics".</p>
			</div>
			<div id = "comment-18165" class = "comment">
				<p>Although you can make programmable mechanical devices - Jacquard looms and the Jaquet-Droz automata - they all all have some means of representing information and actuating effectors based on the representation. Putting another rock in the counterweight does not constitute programming.</p>
			</div>
			<div id = "comment-18176" class = "comment">
				<p>@PeteKirkham you seem to be interested in nitpicking about some definition of programming. That's fine, go ahead. *I* think inserting a different punch card in the loom is just the same as inserting a different counterweight in the trebuchet. Both machines are programmed with some application specific language, holes in the card and mass of the counterweight.</p>
			</div>
			<div id = "comment-18196" class = "comment">
				<p>The idea that you program a rock to fall by lifting it up makes the concept of programming so wide to be useless. There is no flow of control. There is no separation of information and effector.</p>
			</div>
			<div id = "comment-18197" class = "comment">
				<p>@PeteKirkham again, I disagree with this subjective nitpicking. There's no flow of control on the mere punch card either - only after it is inserted and read. Separation of information and effector is not a necessary property of programming. You claim the binary value of having a hole or not to be programming, but consider the floating point value of potential energy not to be. There's no such line to draw, because they are the same in principle.</p>
			</div>
			<div id = "comment-18201" class = "comment">
				<p>There are objective distinctions between direct physical effects, control systems, programmable systems and autonomous systems which I have found useful in my career. If you don't find these distinctions useful then fair enough. If you want to discuss this further, then ask another question what makes the difference between programmable robots vs simple machines.</p>
			</div>
			<div id = "comment-18210" class = "comment">
				<p>I find these distinctions not useful for this application.</p>
			</div>
			</div>
				<textarea id = "speech-10191" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-10191">
					<img id="start_img-10191" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-10191">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Resources</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>