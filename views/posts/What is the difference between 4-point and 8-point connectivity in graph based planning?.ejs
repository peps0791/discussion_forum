<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>What is the difference between 4-point and 8-point connectivity in graph based planning?
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-117" class = "post">
			<h2>Question</h2>
			<div id="vote-117" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 428</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>What is the difference between 4-point and 8-point connectivity in graph based planning?</h2>
<p>In graph-based planning (say, A*), states are connected to their neighbors.  How should one decide whether to connect to the 4 neighbors or the 8 neighbors?  What are the pros and cons of each approach?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-117" data-toggle = "popover">
				<p>user name : Felix</p>
				<p> user reputation : 437</p>
				<p class = "tagcontent" id = "usertaginfo-117">{'planning': 4, 'control': 32, 'None': 0, 'errors': 20, 'tuning': 32, 'localization': -3, 'artificial-intelligence': 4, 'pid': 32, 'noise': 9, 'mobile-robot': 17, 'sensors': 9, 'motion-planning': 4}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-117">Load Comments</button></br>
			<div id = "commentsection-117" class = 'collapse'>
			<div id = "comment-126" class = "comment">
				<p>The question might be a bit too general, and would likely depend on the dynamics of the robot, as well as the internal representation of the environment (ie. whether it is even grid based).</p>
			</div>
			<div id = "comment-132" class = "comment">
				<p>This question only makes sense if the environment is grid based. Additionally, assuming that the environment *is* meant to be grid-based, you could explain *why* it depends on the dynamics of the robot -- because even I don't see it.</p>
			</div>
			<div id = "comment-4553" class = "comment">
				<p>Either use at least 8 direction or smooth the resulting path.</p>
			</div>
			</div>
				<textarea id = "speech-117" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-117">
					<img id="start_img-117" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-117">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-121"  class = "post">
				<h2>Answer</h2>
			<div id="vote-121" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Assuming that (1) you are representing your environment as a grid (which is the only case where the 4-neighbor vs. 8-neighbor question makes sense) and (2) you are planning for navigation (which is the most common use case for grid-based representations)</p>

<p>I personally would not make much a case for 4-neighbour makes not much sense. What you would do by connecting only 4 neighbour per cell is force the robot to go only in "straight" directions. It is already a problem as it is with 8 neighbours, as one usually already has to "smooth" the result or use other approaches to interpret the resulting path.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-121" data-toggle = "popover">
				<p>user name : sylvain.joyeux</p>
				<p> user reputation : 363</p>
				<p class = "tagcontent" id = "usertaginfo-121">{'None': 20, 'kalman-filter': 0}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-121" class = 'collapse'>
			</div>
				<textarea id = "speech-121" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-121">
					<img id="start_img-121" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-121">Comment</button>
			<br><div id = "ans-122"  class = "post">
				<h2>Answer</h2>
			<div id="vote-122" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Graph-based planning algorithms are typically performed for high level planning, for example getting a robot across an office. But, the actual actuator planning for the robot is planned completely differently. This means it completely depends on your application and your desired level of complexity. If you have a grid in which cells are either occupied or not occupied, you may not want your robot transitioning diagonally for fear of collision with the neighboring cells. </p>

<p>In technical terms, it doesn't matter at all if you use 4 or 8 way connectivity for algorithms like A*.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-122" data-toggle = "popover">
				<p>user name : Chris Mansley</p>
				<p> user reputation : 464</p>
				<p class = "tagcontent" id = "usertaginfo-122">{'odometry': 15, 'None': 24, 'kalman-filter': 15, 'localization': 15}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-122" class = 'collapse'>
			</div>
				<textarea id = "speech-122" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-122">
					<img id="start_img-122" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-122">Comment</button>
			<br><div id = "ans-127"  class = "post">
				<h2>Answer</h2>
			<div id="vote-127" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">4</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I believe it simply boils down to what your robot can do.</p>

<p>If you are for some reason restricted to moving only in 4 directions, then you connect each grid cell to 4.</p>

<p>If you can go in 8 directions, you connect each grid cell to 8.</p>

<p>If you can go in 6 directions, you use a honeycomb grid and connect each grid cell to 6.</p>

<p>There is no generic answer. If you plan to go diagonally with a robot that can't perform the action, that's bad planning. If you plan to only go horizontally and vertically while your robot can take shortcuts, that's also bad planning.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-127" data-toggle = "popover">
				<p>user name : Shahbaz</p>
				<p> user reputation : 2615</p>
				<p class = "tagcontent" id = "usertaginfo-127">{'None': 193, 'usb': 12, 'distributed-systems': 7, 'microcontroller': 1, 'embedded-systems': 7, 'servomotor': 1, 'platform': 18, 'can': 1, 'machine-learning': 12, 'real-time': 18, 'mobile-robot': 1, 'rs232': 12, 'software': 20}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-127" class = 'collapse'>
			</div>
				<textarea id = "speech-127" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-127">
					<img id="start_img-127" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-127">Comment</button>
			<br><div id = "ans-377"  class = "post">
				<h2>Answer</h2>
			<div id="vote-377" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>Graph-based planning is a simplification of a space (that may be continuous) into the set of possible branching points, each representing the decisions that can be made.  In a pure simulation, that simplification usually goes as far as working in terms of steps instead of distance or time.  So, restricting movement to the 4 cardinal directions would be the correct choice because you'd want all the distances to be equal.</p>

<p>For a simulation with diagonals, it should still work -- provided that you adjust your algorithm so that diagonal step costs $\sqrt 2$ times more than the vertical/horizontal steps (which pushes you back in the direction of a continuous space, difficult to simulate).  But it might make more sense to just adopt a hexagonal grid if you want more ways to move between squares.  (For more discussion on grid types and their algorithms, see <a href="http://www-cs-students.stanford.edu/~amitp/game-programming/grids/" rel="nofollow">http://www-cs-students.stanford.edu/~amitp/game-programming/grids/</a>)</p>

<h2>Example 1</h2>

<p>You have a car-style robot -- front-wheel steering.  You might represent 3 possible branches from each state: turn left, go straight, and turn right.  In this case, a hexagonal grid would make the most sense; at every space, only 3 of the 6 neighbors would be valid and exactly which ones would depend on the direction you came from.  This would reflect reality more than a cardinal-directions grid because to reach the space to your immediate right (or left) would require a U-turn over a few extra spaces.</p>

<h2>Example 2</h2>

<p>You have a gantry robot -- X and Y actuation.  In this case, both motors can be active at once, so moving diagonally "costs" the same as moving vertically or horizontally.  The 8-neighbor square grid would be correct.</p>

<h2>Example 3</h2>

<p>You are simulating a large room with some objects that move.  If you allow diagonal movement, you lose the ability to use an integer for the time component -- things would end up only partway between squares.  The 4-neighbor square grid would be correct.  </p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-377" data-toggle = "popover">
				<p>user name : Ian</p>
				<p> user reputation : 9640</p>
				<p class = "tagcontent" id = "usertaginfo-377">{'planning': 10, 'None': 809, 'power': 1, 'algorithm': 10, 'battery': 1, 'slam': 7, 'coverage': 10, 'mobile-robot': 9, 'sensors': 9}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-377" class = 'collapse'>
			</div>
				<textarea id = "speech-377" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-377">
					<img id="start_img-377" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-377">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>