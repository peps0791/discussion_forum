<html>
	<head>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="  crossorigin="anonymous"></script>
		<script src = "/jquery-highlight.js"></script>
		<link href="/jquery.upvote.css" rel="stylesheet">
		<script src = "/jquery.upvote.js" type="text/javascript"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link rel="stylesheet" href="/style.css"/>
		<script src="/createlinks.js"></script>
		<script src="/textaudit.js"></script>
		<script src="/PorterStemmer1980.min.js"></script>
		<script src="/highlight.js"></script>
		<title id = 'pagetitle'>Good method for Retuning a PID After Detecting Oscillation
		</title>
	</head>
	<body id = 'pagebody'>
		<div id = "loginmodals"></div>
		<div id = "issuemodals"></div>
		<div id = "highlight_tool"></div>
		<div id = "comment_tool"></div>
		<div class = "container">
			<header>
				<h1>Just Another Discussion Forum</h1>
			</header>
			<div class="topnav" id="myTopnav">
				<a href="/home">Home</a>
				<a href = "#issueModal" data-toggle="modal" style = "float:right">Report Issue</a>
			</div>
			<div class = "content">
			<div id = "ques-4239" class = "post">
			<h2>Question</h2>
			<div id="vote-4239" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">3</span>
				<a class="downvote"></a>
				<a class="star"></a>
				<p>Views :: 229</p>
			</div>
			<form id = "questionpostsform" method="GET" action = "/ask">
				<input type="submit" id = "quesbtn" class="btn btn-primary btn-lg" value="Ask Question">
			</form>
				<h2>Good method for Retuning a PID After Detecting Oscillation</h2>
<p>Given a PID controller with an anti-windup, what are some practical ways to retune the controller once oscillation has been caused and detected? I have access to the magnitude and period of the oscillation.</p>

<p>I don't want to use the <a href="http://en.wikipedia.org/wiki/Ziegler%E2%80%93Nichols_method" rel="nofollow">Ziegler-Nichols method</a>; rather I'd like a method that allows me to specify a phase/gain margin as I am returning the system. </p>

<p>Could someone recommend me towards a book/article or theory?</p>

			</div>
			<div class = "userinfosection"  id = "userinfo-4239" data-toggle = "popover">
				<p>user name : Kousha</p>
				<p> user reputation : 116</p>
				<p class = "tagcontent" id = "usertaginfo-4239">{'control': 3, 'None': 0, 'pid': 3}</p>
			</div><br>
			<br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4239">Load Comments</button></br>
			<div id = "commentsection-4239" class = 'collapse'>
			<div id = "comment-6782" class = "comment">
				<p>PIDs are meant to be very static with respect to their gains -- "set it and forget it".  Why does your system oscillate in some cases but not in others?</p>
			</div>
			<div id = "comment-9094" class = "comment">
				<p>The Wiki PID mentioned dozens of methods. I think it would hard to explain it any better then there. http://en.wikipedia.org/wiki/PID_controller  Unless someone already knows right off what direction to go.</p>
			</div>
			</div>
				<textarea id = "speech-4239" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4239">
					<img id="start_img-4239" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4239">Comment</button>

<h1>Answers</h1>
			<br><div id = "ans-4241"  class = "post">
				<h2>Answer</h2>
			<div id="vote-4241" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">0</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>I'm am just going to mention the two first approaches that came to my mind when reading about your situation. You can change the behavior of a PID controller by adjusting the Kp, Ki and Kd parameters. For doing so, I suggest:</p>

<ol>
<li>Evolutionary Programming</li>
<li>Another PID controller (or three, in fact)</li>
</ol>

<p>In both scenarios you will need to be have some idea of what your ideal response would be, for instance using the gain/phase, the amount of overshoot, the number of oscillations - or similar characteristics - as measurements. I have previously experimented with both options, but never implemented either. Also, I do not know if these methods are actually used in practice for auto-tuning PIDs. Good luck. :)</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-4241" data-toggle = "popover">
				<p>user name : Tormod Haugene</p>
				<p> user reputation : 213</p>
				<p class = "tagcontent" id = "usertaginfo-4241">{'None': 5, 'computer-vision': 3, 'cameras': 3}</p>
			</div><br><h3>Comments</h3>
				<button data-toggle = 'collapse' data-target = "#commentsection-4241">Load Comments</button></br>
			<div id = "commentsection-4241" class = 'collapse'>
			<div id = "comment-6789" class = "comment">
				<p>Thanks for your comment. My thought was that since the system does fall into oscillation (which is unfortunate), at that stage it is now persistently excited. So now I should have enough modes to determine and identify my plant and be able to retune my controller. That's in essence how ZN approach is.</p>
			</div>
			</div>
				<textarea id = "speech-4241" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-4241">
					<img id="start_img-4241" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-4241">Comment</button>
			<br><div id = "ans-6431"  class = "post">
				<h2>Answer</h2>
			<div id="vote-6431" class="upvote" style="float:left;">
				<a class="upvote"></a>
				<span class="count">1</span>
				<a class="downvote"></a>
				<a class="star"></a>
			</div>
				<p><p>A controlled process might vary over time (due to e.g. slack, wear and tear ...), causing the need for refining the controller. If the aim is not to rely on heuristics (e.g. Zigler-Nichols) - and that is a good intention - then what one should do is first to come up with a model that is representative of the plant and second use such a model to tune the PID. The recipe is pretty much described <a href="http://it.mathworks.com/company/newsletters/articles/tuning-a-pid-controller-when-a-plant-model-is-not-available.html?refresh=true" rel="nofollow">here</a>.</p>

<p>What makes the identification difficult in this context is the fact that we are dealing with a closed-loop system, meaning that the plant is under the control of our by now "weakly" tuned PID. In this scenario we have to be careful, since we cannot blindly adopt standard identification techniques as in the more usual open-loop framework.</p>

<p>In literature there exist <em>direct</em>, <em>indirect</em> and <em>joint input-output</em> methods for <strong>closed-loop identification</strong>. An enlightening reading is "<a href="http://photon.isy.liu.se:81/research/pub-db-supplemental/phd/566/main.pdf" rel="nofollow">Closed-loop Identication.
Methods, Theory, and Applications</a>". To any rate, the <em>Prediction Error Estimation</em> (<strong>PEM</strong>) turns to be a viable and simple solution to this end: we have just to record the output of our PID as <strong>the process input</strong> so as the output of the plant as <strong>the process output</strong> and then use some sort of ARX, ARMAX, Output-Error black box identification approaches and we will end up with an <em>unbiased</em> estimation of the plant dynamics. It can be demonstrated indeed that the estimation is valid and informative as it would have been carried out in open-loop fashion.</p>

<p>Once we have a good estimate of the plant, we can design the PID controller relying on diverse techniques, such as <a href="http://scl.hanyang.ac.kr/scl/database/papers/IFAC/2008/data/papers/0036.pdf" rel="nofollow"><strong>dominant pole placement</strong></a>, <a href="http://ece.gmu.edu/~gbeale/ece_720/limits-on-st-01.pdf" rel="nofollow"><strong>loop shaping</strong></a>, in order to meet some given performance and robustness requirements.</p>
</p><br>
			</div>
			<div class = "userinfosection"  id = "userinfo-6431" data-toggle = "popover">
				<p>user name : Ugo</p>
				<p> user reputation : 1482</p>
				<p class = "tagcontent" id = "usertaginfo-6431">{'None': 99}</p>
			</div><br><h3>Comments</h3><p>no comments yet<p><br>
			<div id = "commentsection-6431" class = 'collapse'>
			</div>
				<textarea id = "speech-6431" rows="3" cols="80"></textarea><br>
				<button class="record-start" id="start-6431">
					<img id="start_img-6431" src="/mic.gif" alt="Start">
				</button>
				<button class = "comment-btn" id = "comment-btn-6431">Comment</button>
			</div>
			<div id = "resourcestab" class = "resourcestab">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#resources">Resources</a></li>
					<li><a data-toggle="tab" href="#summary">Summary</a></li>
					<li><a data-toggle="tab" href="#highlights">Highlights</a></li>
				</ul>
					<div class="tab-content">
						<div id="resources" class="tab-pane fade in active">
							<h3>Links from the Page</h3>
							<div id = "resourcescontent"></div>
						</div>
						<div id="summary" class="tab-pane fade">
							<h3>Summary</h3>
							<div id = "summarycontent"></div>
						</div>
						<div id="highlights" class="tab-pane fade">
							<h3>Highlights</h3>
							<div id = "highlightcontent"></div>
						</div>
			</div>
			</div>
			<footer>Moore & Peps collaboration.</footer>
	</div>
	<script src="/post.js"></script>
	<script type="text/javascript">
		$("#loginmodals").load("/loginModal.html");
		$("#issuemodals").load("/issueModal.html");
		$("#highlight_tool").load("/highlight_tool.html");
		$("#comment_tool").load("/comment_tool.html");
		checkLoggedInUser()
		var content = $('.content').html();
		populateResources(content)
		getHighlights()
		setOnLinksHover()
	</script>
	<script src="/media.js"></script>
	<script src="/vote.js"></script>
	<script src="/managefunction.js"></script>
	</body>
</html>