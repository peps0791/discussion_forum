<html>
	<head>
		<title id = 'pagetitle'>How to address the XY problem in this question, and a potential problem with one of its answers?
		</title>
	<head>
	<body id = 'pagebody'><p><em>Please note that I have not submitted an answer to this question -- this is not about competition for rep, who's "more right", or hurt feelings.</em></p>

<p>Here's the original title and text before I made minor edits (which you can view at the question page):</p>

<blockquote>
  <p><strong><a href="https://apple.stackexchange.com/questions/14013/is-there-a-way-to-password-protect-individual-apps">Ask a password to start an App ?</a></strong></p>
  
  <p>Is it possible to set a password on an specific App ? The idea is to not been able to start a specific App on my mac without giving a password...</p>
  
  <p>The main usage will be for instance to block Mail, because even if you cannot retrieve new emails, you still can read all the already received emails.</p>
</blockquote>

<hr>

<ol>
<li><p>Should this question be answered exactly as asked (how to protect an app from running), or should it be answered in a way that will actually solve the user's underlying problem (how to protect the <em>data</em> "behind" an app)?</p>

<p>In other words, <strong>how should potential answer authors address the <a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a> that this question presents?</strong>  (I will note anecdotally that currently, 3 of the 4 answers have addressed the underlying problem, and one has addressed the question literally.)</p></li>
<li><p>Besides downvoting, explaining why in a comment, and upvoting a better answer, is there anything that can be done about an answer that...</p>

<ul>
<li>has gotten <em>twice as many</em> upvotes as other answers,**</li>
<li>does not address the user's <em>underlying</em> problem,</li>
<li>has been admitted by the author to be insecure,</li>
<li>could be dangerously misleading to less security savvy users who happen upon this question in the future...</li>
<li>...but <em>does</em> strictly address the question as asked, even if it doesn't answer it well?***</li>
</ul></li>
<li><p>If you're reading this and you're somewhat familiar with Mac/UNIX security, could you please have a look at the question and weigh-in with a vote, comment, and/or answer?  I think that would really help alleviate the problem in #2 above.</p></li>
</ol>

<hr>

<p>That's the meat of my question, so you can safely stop reading here.</p>

<hr>

<p><code>&lt;more-details&gt;</code></p>

<p>The answer to which I'm referring is <a href="https://apple.stackexchange.com/questions/14013/is-there-a-way-to-password-protect-individual-apps/14024#14024">this one</a>.</p>

<p>** Right now this answer would be leading 4 to 1 over the others if it weren't for my downvote of it and upvote of its best competitor.  Experience leads me to believe this is partially due to "long code example bias" (it is much longer and looks more "complete" than the other answers), and comments lead me to believe it is partially because people like the "hack" it provides, without regard to how it answers the question.</p>

<p>*** When I say that the answer I'm referring to doesn't answer the question very well (even if it's being answered literally), it's because it presents a very convoluted way to provide only a little security by obscurity.  It's a "swiss cheese" security solution, and judging by all the "caveats" at the end of the author's answer, the author seems to be aware of this, too.</p>

<p><strong>For those who aren't familiar with OS X user/file security, following the steps in this answer would be like locking your front door and hiding your housekey under your front doormat.</strong>  Most people aren't even going to <em>approach</em> your house, but if you actually have reasons to worry about the ones that do, it would be trivial for them to find the key and gain easy access to your house without you knowing about it.  It's like saying <em>"please don't look in here...but I can't stop you if you really want to"</em>.</p>

<p>Normally I would trust that the best answers will rise to the top, but in this case, I'm worried that the "long code example bias" that I mentioned above might prevent this.  (If you've hung around Stack Overflow enough, I'm sure you've seen this happen many times.  And I would bet that non-programmers are even more susceptible to this bias.)  Even though I <em>knew</em> there were major problems with the answer, I still felt bad downvoting it -- mainly because it was long, and it was clear the author spent a decent amount of time on it.</p>

<p>There is also the fact that, given the relatively small population of users on Ask Different, it is not common for even a <em>great</em> answer to get 4 upvotes in a matter of hours.  What would be a small margin on SO or SU is a much wider rift on this site.</p>

<p>I think we can probably agree that Ask Different generally attracts a greater percentage of unexperienced computer users than the "hardcore" sites like SO, SU, SF, Programmers SE, and Security SE.  Am I just being over-protective worrying that someone might come across this question, see this top-voted answer, and not realize that it provides roughly <em>zilch</em> in the way of <em>real</em> security -- and in fact, may even be detrimental to the security of their system?</p>

<p><code>&lt;/more-details&gt;</code></p>

<p>Thanks for reading this far!  I really look forward to hearing your input on this.</p>


<h1>ANSWERS</h1>
		<ol>
<li>You should answer the question in the way that you feel is most appropriate. If you want to resolve the XY Problem that you see in the question, then do so. In an effort to handle any misguided downvotes, you will want to make clear your intent to try and avoid any misunderstanding. Some people just want their question answered at face value (as in the OP to the given question), and they'll probably downvote you for it whether you like it or not, but that is all part of the gamble we take by asking and answering when there is a rep system.</li>
<li>There is really not much more than what you describe that can be done. In other words, the community has spoken with the tools it has been given.</li>
<li>In this instance I would vote up the answers that I like, and leave the rest alone. Downvotes are yours to use as you see fit, but I generally save downvotes for answers that are clearly wrong or misleading. I see that answer that you downvoted was none of those things on face value (no matter how misguided).</li>
</ol>


<p>I find my answers being only as long as they need to be. However, this also means that I generally make shorter answers if they don't need a detailed argument or code.</p>

<p>And if they do, I would provide them.</p>

<p>I really do respect Kelvin's answer, it's amazing. But it has way too many pitfalls to be feasible to actually use. (However, I do feel he shouldn't be voted down, it answers the question, it is clear, and BEAUTIFULLY well documented.)</p>

<p>The XY Problem is a problem that will plague users due to misplaced expectations. I've found myself running into it all week. I kept trying to use a wrench to twist a screw into a wall because it was already in my hand, when I could have spent the 4 seconds to grab a screwdriver and saved myself the 2 minutes of unnecessary strain. (Figuratively speaking, of course. I'm a programmer, not an interior decorator.)</p>

<p>What do we do about it? We do what we already did. We guide the user in the "correct" (as we feel) direction, and/or we answer the question directly.</p>

<p>Which is is the most correct? That's up to the asker. And even the visitor down the road.</p>


	</body>
</html>